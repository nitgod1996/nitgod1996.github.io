{
    "version": "https://jsonfeed.org/version/1",
    "title": "宁理大神1996",
    "subtitle": "",
    "icon": "https://nitgod1996.com/images/favicon.ico",
    "description": "宁理大神的个人博客",
    "home_page_url": "https://nitgod1996.com",
    "items": [
        {
            "id": "https://nitgod1996.com/2021/05/20/note/%E5%89%8D%E7%AB%AF/JavaScript/",
            "url": "https://nitgod1996.com/2021/05/20/note/%E5%89%8D%E7%AB%AF/JavaScript/",
            "title": "JavaScript基础语法",
            "date_published": "2021-05-20T08:43:18.905Z",
            "content_html": "<h1 id=\"一-javascript-简介\"><a class=\"anchor\" href=\"#一-javascript简介\">#</a> 一、 JavaScript 简介</h1>\n<ol>\n<li><strong>HTML</strong> 定义了网页的内容</li>\n<li><strong>CSS</strong> 描述了网页的布局</li>\n<li><strong>JavaScript</strong> 控制了网页的行为，<strong>主要用于与用户的交互及提高用户体验</strong>。</li>\n</ol>\n<h2 id=\"1-javascript-简单功能\"><a class=\"anchor\" href=\"#1-javascript简单功能\">#</a> 1. JavaScript 简单功能</h2>\n<ul>\n<li>\n<p>直接网页输出流</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 直接打印在网页上</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;h1>这是一个标题&lt;/h1>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;p>这是一个段落。&lt;/p>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 以弹框弹出</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>window<span class=\"token punctuation\">.</span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"弹框\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 或者直接 alert 也可</span></pre></td></tr></table></figure></li>\n<li>\n<p>对事件的响应</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>alert(<span class=\"token punctuation\">'</span>欢迎!<span class=\"token punctuation\">'</span>)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>点我!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">&lt;!-- 在 onclick 中写 js 代码 --></span></pre></td></tr></table></figure></li>\n<li>\n<p>修改 html 内容 / CSS 样式</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>x<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"demo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 通过 ID 查找元素（类似 CSS 选择器的作用，元素即是标签）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>x<span class=\"token punctuation\">.</span>innerHTML<span class=\"token operator\">=</span><span class=\"token string\">\"Hello JavaScript\"</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 改变内容（注入 html）</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>x<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>color<span class=\"token operator\">=</span><span class=\"token string\">\"#ff0000\"</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 改变样式</span></pre></td></tr></table></figure></li>\n<li>\n<p>输出到控制台（适用于用编辑器调试）</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 相当于 java 的 system.out.println</span></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"2-引入-javascript\"><a class=\"anchor\" href=\"#2-引入javascript\">#</a> 2. 引入 JavaScript</h2>\n<h3 id=\"21-内嵌入-html\"><a class=\"anchor\" href=\"#21-内嵌入html\">#</a> 2.1 内嵌入 html</h3>\n<p>直接在 html 中添加 <code>&lt;script&gt;</code>  标签，在 <code>&lt;script&gt;</code>  中写 <code>js</code>  代码。 <code>&lt;script&gt;</code>  引入位置会影响执行顺序，一般视情况放在 head 或 body 中</p>\n<h3 id=\"22-外部导入-js-文件\"><a class=\"anchor\" href=\"#22-外部导入js文件\">#</a> 2.2 外部导入 js 文件</h3>\n<p>单独建一个 <code>.js</code>  文件，在 html 中以 <code>&lt;script src=&quot;**.js&quot;&gt;&lt;/script&gt;</code>  引入。</p>\n<h3 id=\"23-示例\"><a class=\"anchor\" href=\"#23-示例\">#</a> 2.3 示例</h3>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Title<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    world!</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>js/hello.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><img data-src=\"/2021/05/20/note/%E5%89%8D%E7%AB%AF/JavaScript/image-20210521164827154.png\" alt=\"image-20210521164827154\"><img data-src=\"/2021/05/20/note/%E5%89%8D%E7%AB%AF/JavaScript/image-20210521164832754.png\" alt=\"image-20210521164832754\"></p>\n<h1 id=\"二-基础语法\"><a class=\"anchor\" href=\"#二-基础语法\">#</a> 二、 基础语法</h1>\n<h2 id=\"1-数据类型\"><a class=\"anchor\" href=\"#1-数据类型\">#</a> 1. 数据类型</h2>\n<p>可以通过 <code>type()</code>  函数返回数据类型。</p>\n<p>或者 <code>typeof</code>  + 空格 + 对象。如 <code>typeof &quot;John&quot;        // 返回 string</code></p>\n<p><code>isNaN</code>  专门用于判断是否为数字</p>\n<h3 id=\"11-基础数据类型\"><a class=\"anchor\" href=\"#11-基础数据类型\">#</a> 1.1 基础数据类型</h3>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>number</td>\n<td>整数 / 小数 / NaN（not a number）  &lt;br&gt;   <code>true为1，false为0。数字string等值转换</code></td>\n</tr>\n<tr>\n<td>string</td>\n<td>字符串。&quot;&quot; 和 '' 都表示字符串，和 Python 一样</td>\n</tr>\n<tr>\n<td>boolean</td>\n<td>true/false  &lt;br&gt;   <code>0/NaN/null为false</code></td>\n</tr>\n<tr>\n<td>null</td>\n<td>空值</td>\n</tr>\n<tr>\n<td>undefined</td>\n<td>未定义数据类型的变量</td>\n</tr>\n</tbody>\n</table>\n<p>但 JavaScript 不能以 <code>number</code>  或 <code>string</code>  定义变量，而是用弱类型 <code>var</code>  定义所有的基础数据类型变量，如 <code>var a=1;</code>  或 <code>var list=[1,2,3];</code></p>\n<h3 id=\"12-弱类型-var\"><a class=\"anchor\" href=\"#12-弱类型var\">#</a> 1.2 弱类型 <code>var</code></h3>\n<p>​    强类型：开辟变量存储空间时定义数据类型。只能存储固定类型数据，如 Java</p>\n<p>​    弱类型：不定义数据类型。可存放任意类型数据，如 Python</p>\n<p>​    也可以像 Python 一样不用 var 定义，直接 a=1;</p>\n<h3 id=\"13-类型转换\"><a class=\"anchor\" href=\"#13-类型转换\">#</a> 1.3 类型转换</h3>\n<ul>\n<li>\n<p>其他类型转<strong>字符串</strong></p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">String</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 使用全局方法 String</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>num<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 或者对象的 toString 方法</span></pre></td></tr></table></figure></li>\n<li>\n<p>字符串转<strong>数字</strong></p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"3.14\"</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">// 使用全局方法 Number</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123zbc\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 或者使用 parseInt、parseFloat 等 \"123zbc\"→123</span></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"14-关键字-let\"><a class=\"anchor\" href=\"#14-关键字let\">#</a> 1.4 关键字 <code>let</code></h3>\n<p><code>let</code>  是 ES6 新引入的关键字。let 声明的变量只在 let 命令所在的代码块内有效。在 ES6 之前，JavaScript 只有两种作用域： <strong>全局变量</strong> 与 <strong>函数内的局部变量</strong>。</p>\n<p><code>var</code>  和 <code>let</code>  的区别是，<strong> <code>let</code>  是局部变量，而 <code>var</code>  则有点模糊（循环体内全局变量，方法体内局部变量）。所以在块内一般使用 <code>let</code>  创建对象</strong>。</p>\n<h3 id=\"15-关键字-const\"><a class=\"anchor\" href=\"#15-关键字const\">#</a> 1.5 关键字 <code>const</code></h3>\n<p><code>const</code>  声明一个只读的常量，一旦声明，常量的值就不能改变。</p>\n<ul>\n<li><code>const</code>  可用于声明一个或多个常量，声明时必须进行初始化，且初始化后值不可再修改：</li>\n</ul>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token constant\">PI</span> <span class=\"token operator\">=</span> <span class=\"token number\">3.141592653589793</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token constant\">PI</span> <span class=\"token operator\">=</span> <span class=\"token number\">3.14</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 报错</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token constant\">PI</span> <span class=\"token operator\">=</span> <span class=\"token constant\">PI</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 报错</span></pre></td></tr></table></figure><ul>\n<li><code>const</code>  对引用对象如数组等并不能锁死。可利用对应函数修改，但不能用 <code>=</code>  重新赋值</li>\n<li>不能使用 <strong>const</strong> 关键字来重置 <strong>var</strong> 和 <strong>let</strong> 关键字声明的变量:</li>\n</ul>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 合法</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 不合法</span></pre></td></tr></table></figure><h2 id=\"2-运算-比较符\"><a class=\"anchor\" href=\"#2-运算比较符\">#</a> 2. 运算 / 比较符</h2>\n<table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>规则</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>+/-</td>\n<td>可将其他数据类型转为 number。</td>\n</tr>\n</tbody>\n</table>\n<p>** 比较时，类型不同会先类型转换  **</p>\n<table>\n<thead>\n<tr>\n<th>比较符</th>\n<th>规则</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>==</td>\n<td>等于（一般不用这个）。类型不一样，值一样，也会判断为 true</td>\n</tr>\n<tr>\n<td>===</td>\n<td>绝对等于。类型一样，值一样，判断为 true</td>\n</tr>\n<tr>\n<td>&lt;、&gt;</td>\n<td>基本一样。string 按字典序逐个比较。</td>\n</tr>\n<tr>\n<td>三元运算符</td>\n<td>a&gt;b?1:0</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"3-自定义函数-function\"><a class=\"anchor\" href=\"#3-自定义函数function\">#</a> 3. 自定义函数 <code>function</code></h2>\n<h3 id=\"31-创建\"><a class=\"anchor\" href=\"#31-创建\">#</a> 3.1 创建</h3>\n<p>常见手法如下：</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">functionName</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">param1<span class=\"token punctuation\">,</span> param2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>或者</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">var1<span class=\"token punctuation\">,</span>var2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"32-参数类型声明\"><a class=\"anchor\" href=\"#32-参数类型声明\">#</a> 3.2 参数类型声明</h3>\n<p>若不知道参数类型，则有时候编写函数有点麻烦，可通过以下方法设置参数类型。</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * @param &#123;string&#125; param1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * @param &#123;string[]&#125; param2</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * @return &#123;string&#125;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> */</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">functionName</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">param1<span class=\"token punctuation\">,</span> param2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>这样调用参数时 IDE 便能识别类型，显示对应的函数提示了。</p>\n<h3 id=\"33-传值调用与传引用调用\"><a class=\"anchor\" href=\"#33-传值调用与传引用调用\">#</a> 3.3 传值调用与传引用调用</h3>\n<p>先来复习一下传值和传引用的概念。<strong>传值</strong>就是仅仅传递变量的值，在函数体内是无法对参数进行修改的。而<strong>传引用</strong>则是传递地址，可以通过地址对参数进行修改。</p>\n<p>在 C++ 中，<strong>基础类型</strong>默认是传值调用，传引调用需要以 &amp; 标识。</p>\n<p>在 Java 和 JavaScript 中，<strong>基础类型</strong>没有传引调用。java 因为完全面向对象，函数可以直接通过 <code>this</code>  调用成员变量，在函数体内修改。而 JavaScript 则不行。</p>\n<p>此外，<strong>引用类型</strong>如数组、map 等，则均是传引调用，是可以通过目标函数对其进行修改的。（即使是 C++ 也不需要加 &amp;）</p>\n<p><strong>对于引用类型，如果只需传值，可以通过在函数体内新建一个局部副本代替</strong>，如下</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * @param &#123;Map&#125; temp</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * @param &#123;string&#125; word</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * @return &#123;boolean&#125;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> */</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">match</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">temp<span class=\"token punctuation\">,</span> word</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">var</span> map<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"4-regexp-正则表达式\"><a class=\"anchor\" href=\"#4-regexp正则表达式\">#</a> 4. RegExp 正则表达式</h2>\n<p>JavaScript 中正则表达式非常重要，许多函数需要使用正则表达式进行<strong>匹配</strong>。此外，JavaScript<strong> 判断字符</strong>是数字还是字母也只能通过正则表达式。（JavaScript 没有像 Java 一样的 <code>isAlpha</code>  等方法）</p>\n<h3 id=\"41-什么是正则表达式\"><a class=\"anchor\" href=\"#41-什么是正则表达式\">#</a> 4.1 什么是正则表达式</h3>\n<blockquote>\n<p>正则表达式是由一个<strong>字符序列形成</strong>的<strong>搜索模式</strong>。</p>\n</blockquote>\n<p>正则表达式可用于所有文本搜索和文本替换的操作。</p>\n<h3 id=\"42-语法\"><a class=\"anchor\" href=\"#42-语法\">#</a> 4.2 语法</h3>\n<p><code> /正则表达式主体/修饰符(可选)</code></p>\n<p>如 <code>var patt = /runoob/i</code></p>\n<p><strong>/runoob/i</strong> 是一个正则表达式。</p>\n<p><strong>runoob</strong> 是一个<strong>正则表达式主体</strong> (用于检索)。</p>\n<p><strong>i</strong> 是一个<strong>修饰符</strong> (搜索不区分大小写)。</p>\n<h3 id=\"43-匹配规则\"><a class=\"anchor\" href=\"#43-匹配规则\">#</a> 4.3 匹配规则</h3>\n<h4 id=\"431-字符区间匹配\"><a class=\"anchor\" href=\"#431-字符区间匹配\">#</a> 4.3.1 字符区间匹配</h4>\n<table>\n<thead>\n<tr>\n<th><strong>表达式</strong></th>\n<th><strong>描述</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[abc]</td>\n<td>查找方括号之间的任何字符。</td>\n</tr>\n<tr>\n<td>[^abc]</td>\n<td>查找任何不在方括号之间的字符。</td>\n</tr>\n<tr>\n<td>[0-9]</td>\n<td>查找任何从 0 至 9 的数字。</td>\n</tr>\n<tr>\n<td>[a-z]</td>\n<td>查找任何从小写 a 到小写 z 的字符。</td>\n</tr>\n<tr>\n<td>[A-Z]</td>\n<td>查找任何从大写 A 到大写 Z 的字符。</td>\n</tr>\n<tr>\n<td>[A-z]</td>\n<td>查找任何从大写 A 到小写 z 的字符。</td>\n</tr>\n<tr>\n<td>[adgk]</td>\n<td>查找给定集合内的任何字符。</td>\n</tr>\n<tr>\n<td>[^adgk]</td>\n<td>查找给定集合外的任何字符。</td>\n</tr>\n<tr>\n<td>(red|blue|green)</td>\n<td>查找任何指定的选项。</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"432-特殊字符匹配\"><a class=\"anchor\" href=\"#432-特殊字符匹配\">#</a> 4.3.2 特殊字符匹配</h4>\n<table>\n<thead>\n<tr>\n<th><strong>元字符</strong></th>\n<th><strong>描述</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>.</td>\n<td>查找单个字符，除了换行和行结束符。</td>\n</tr>\n<tr>\n<td>\\w</td>\n<td>查找数字、字母及下划线。</td>\n</tr>\n<tr>\n<td>\\W</td>\n<td>查找非单词字符。</td>\n</tr>\n<tr>\n<td>\\d</td>\n<td>查找数字。</td>\n</tr>\n<tr>\n<td>\\D</td>\n<td>查找非数字字符。</td>\n</tr>\n<tr>\n<td>\\s</td>\n<td>查找空白字符。</td>\n</tr>\n<tr>\n<td>\\S</td>\n<td>查找非空白字符。</td>\n</tr>\n<tr>\n<td>\\b</td>\n<td>匹配单词边界。</td>\n</tr>\n<tr>\n<td>\\B</td>\n<td>匹配非单词边界。</td>\n</tr>\n<tr>\n<td>\\0</td>\n<td>查找 NULL 字符。</td>\n</tr>\n<tr>\n<td>\\n</td>\n<td>查找换行符。</td>\n</tr>\n<tr>\n<td>\\f</td>\n<td>查找换页符。</td>\n</tr>\n<tr>\n<td>\\r</td>\n<td>查找回车符。</td>\n</tr>\n<tr>\n<td>\\t</td>\n<td>查找制表符。</td>\n</tr>\n<tr>\n<td>\\v</td>\n<td>查找垂直制表符。</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"433-字符数量匹配\"><a class=\"anchor\" href=\"#433-字符数量匹配\">#</a> 4.3.3 字符数量匹配</h4>\n<table>\n<thead>\n<tr>\n<th><strong>量词</strong></th>\n<th><strong>描述</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>n+</td>\n<td>匹配任何包含至少一个 n  的字符串。  &lt;font color=green&gt; 例如，/a+/ 匹配 &quot;candy&quot; 中的  &quot;a&quot;，&quot;caaaaaaandy&quot;  中所有的 &quot;a&quot;。  &lt;/font&gt;</td>\n</tr>\n<tr>\n<td>n*</td>\n<td>匹配任何包含零个或多个  n 的字符串。  &lt;font color=green&gt; 例如，/bo*/ 匹配 &quot;A ghost booooed&quot; 中的 &quot;boooo&quot;，&quot;A  bird warbled&quot; 中的  &quot;b&quot;，但是不匹配 &quot;A goat  grunted&quot;。  &lt;/font&gt;</td>\n</tr>\n<tr>\n<td>n?</td>\n<td>匹配任何包含零个或一个  n 的字符串。  &lt;font color=green&gt; 例如，/e?le?/ 匹配 &quot;angel&quot; 中的  &quot;el&quot;，&quot;angle&quot; 中的 &quot;le&quot;。 &lt;/font&gt;</td>\n</tr>\n<tr>\n<td x>n</td>\n<td>匹配包含 X 个 n 的序列的字符串。 &lt;font color=green&gt; 例如，/a {2}/ 不匹配 &quot;candy,&quot; 中的  &quot;a&quot;，但是匹配  &quot;caandy,&quot; 中的两个  &quot;a&quot;，且匹配  &quot;caaandy.&quot; 中的前两个  &quot;a&quot;。  &lt;/font&gt;</td>\n</tr>\n<tr>\n<td x,>n</td>\n<td>X 是一个正整数。前面的模式 n 连续出现至少 X 次时匹配。  &lt;font color=green&gt; 例如，/a {2,}/ 不匹配 &quot;candy&quot; 中的  &quot;a&quot;，但是匹配  &quot;caandy&quot; 和  &quot;caaaaaaandy.&quot; 中所有的  &quot;a&quot;。  &lt;/font&gt;</td>\n</tr>\n<tr>\n<td x,y>n</td>\n<td>X 和 Y 为正整数。前面的模式 n  连续出现至少 X 次，至多 Y 次时匹配。  &lt;font color=green&gt; 例如，/a {1,3}/ 不匹配 &quot;cndy&quot;，匹配  &quot;candy,&quot; 中的  &quot;a&quot;，&quot;caandy,&quot; 中的两个 &quot;a&quot;，匹配 &quot;caaaaaaandy&quot; 中的前面三个 &quot;a&quot;。注意，当匹配 &quot;caaaaaaandy&quot; 时，即使原始字符串拥有更多的 &quot;a&quot;，匹配项也是 &quot;aaa&quot;。  &lt;/font&gt;</td>\n</tr>\n<tr>\n<td>n$</td>\n<td>匹配任何结尾为 n 的字符串。</td>\n</tr>\n<tr>\n<td>^n</td>\n<td>匹配任何开头为 n 的字符串。</td>\n</tr>\n<tr>\n<td>?=n</td>\n<td>匹配任何其后紧接指定字符串 n 的字符串。</td>\n</tr>\n<tr>\n<td>?!n</td>\n<td>匹配任何其后没有紧接指定字符串 n 的字符串。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"44-修饰符\"><a class=\"anchor\" href=\"#44-修饰符\">#</a> 4.4 修饰符</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">修饰符</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">i</td>\n<td style=\"text-align:left\">执行对大小写不敏感的匹配。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">g</td>\n<td style=\"text-align:left\">执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">m</td>\n<td style=\"text-align:left\">执行多行匹配。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"45-正则表达式对象\"><a class=\"anchor\" href=\"#45-正则表达式对象\">#</a> 4.5 正则表达式对象</h3>\n<p>正则表达式也有对象，可以调用对象的 <code>.test()</code>  函数判断字符类型（是数字还是字母还是特殊字符等）。</p>\n<h4 id=\"451-创建\"><a class=\"anchor\" href=\"#451-创建\">#</a> 4.5.1 创建</h4>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> reg1<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[a-z]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 或</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">var</span> reg2<span class=\"token operator\">=</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[A-Z]</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"452-regexp-方法\"><a class=\"anchor\" href=\"#452-regexp方法\">#</a> 4.5.2 RegExp 方法</h4>\n<table>\n<thead>\n<tr>\n<th><strong>方法</strong></th>\n<th><strong>描述</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>exec</td>\n<td>检索字符串中指定的值。返回找到的值，并确定其位置。</td>\n</tr>\n<tr>\n<td>test</td>\n<td>检索字符串中指定的值。返回 true 或 false。</td>\n</tr>\n<tr>\n<td>toString</td>\n<td>返回正则表达式的字符串。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"46-正则表达式常用场景\"><a class=\"anchor\" href=\"#46-正则表达式常用场景\">#</a> 4.6 正则表达式常用场景</h3>\n<h4 id=\"461-判断字符类型\"><a class=\"anchor\" href=\"#461-判断字符类型\">#</a> 4.6.1 判断字符类型</h4>\n<p>设 c 为待判断字符。</p>\n<ul>\n<li>\n<p>判断是否为字母</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[a-zA-Z]</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<p>判断是否为数字</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[0-9]</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"462-搭配-string-方法\"><a class=\"anchor\" href=\"#462-搭配string方法\">#</a> 4.6.2 搭配 string 方法</h4>\n<ul>\n<li>\n<p>search () 方法查找</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"Visit Runoob!\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 搜索 \"Runoob\" 字符串，且不区分大小写：</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">Runoob</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>返回  <code>6</code></p>\n</li>\n<li>\n<p>replace () 方法替换</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"Visit microsoft!\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 不区分大小写将字符串中的 Microsoft 替换为 Runoob :</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> txt <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">microsoft</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Runoob\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>返回 <code>Visit Runoob!</code></p>\n</li>\n<li>\n<p>match () 方法匹配</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> str<span class=\"token operator\">=</span><span class=\"token string\">\"The rain in SPAIN stays mainly in the plain\"</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> n<span class=\"token operator\">=</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">ain</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 返回 [ain,ain,ain]</span></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"三-引用类型集合-容器等\"><a class=\"anchor\" href=\"#三-引用类型集合-容器等\">#</a> 三、 引用类型（集合、容器等）</h1>\n<h2 id=\"1-数组\"><a class=\"anchor\" href=\"#1-数组\">#</a> 1. 数组</h2>\n<h3 id=\"11-创建数组\"><a class=\"anchor\" href=\"#11-创建数组\">#</a> 1.1 创建数组</h3>\n<p><code>JavaScript</code>  数组是 <code>Array</code>  对象，可以通过以下手法创建</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> cars<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Saab\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Volvo\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 指定初始值的数组</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> cars<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 初始长度为 3 的数组</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">var</span> cars<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"Saab\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Volvo\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>js</code>  的数组可以动态扩展，甚至可以添加不同的类型。类似 <code>java</code>  非泛型创建的 <code>ArrayList</code>  集合</p>\n<h3 id=\"12-array-函数\"><a class=\"anchor\" href=\"#12-array函数\">#</a> 1.2 Array 函数</h3>\n<p>其中常用函数如下：</p>\n<table>\n<thead>\n<tr>\n<th><strong>方法</strong></th>\n<th><strong>描述</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>join()</td>\n<td>把数组的所有元素放入一个字符串。</td>\n</tr>\n<tr>\n<td>pop()</td>\n<td>删除数组的最后一个元素并返回删除的元素。</td>\n</tr>\n<tr>\n<td>push()</td>\n<td>向数组的末尾添加一个或更多元素，并返回新的长度。</td>\n</tr>\n</tbody>\n</table>\n<p>其他函数：</p>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>concat()</td>\n<td>连接两个或更多的数组，并返回结果。</td>\n</tr>\n<tr>\n<td>copyWithin()</td>\n<td>从数组的指定位置拷贝元素到数组的另一个指定位置中。</td>\n</tr>\n<tr>\n<td>entries()</td>\n<td>返回数组的可迭代对象。</td>\n</tr>\n<tr>\n<td>every()</td>\n<td>检测数值元素的每个元素是否都符合条件。</td>\n</tr>\n<tr>\n<td>fill()</td>\n<td>使用一个固定值来填充数组。</td>\n</tr>\n<tr>\n<td>filter()</td>\n<td>检测数值元素，并返回符合条件所有元素的数组。</td>\n</tr>\n<tr>\n<td>find()</td>\n<td>返回符合传入测试（函数）条件的数组元素。</td>\n</tr>\n<tr>\n<td>findIndex()</td>\n<td>返回符合传入测试（函数）条件的数组元素索引。</td>\n</tr>\n<tr>\n<td>forEach()</td>\n<td>数组每个元素都执行一次回调函数。</td>\n</tr>\n<tr>\n<td>from()</td>\n<td>通过给定的对象中创建一个数组。</td>\n</tr>\n<tr>\n<td>includes()</td>\n<td>判断一个数组是否包含一个指定的值。</td>\n</tr>\n<tr>\n<td>indexOf()</td>\n<td>搜索数组中的元素，并返回它所在的位置。</td>\n</tr>\n<tr>\n<td>isArray()</td>\n<td>判断对象是否为数组。</td>\n</tr>\n<tr>\n<td>keys()</td>\n<td>返回数组的可迭代对象，包含原始数组的键 (key)。</td>\n</tr>\n<tr>\n<td>lastIndexOf()</td>\n<td>搜索数组中的元素，并返回它最后出现的位置。</td>\n</tr>\n<tr>\n<td>map()</td>\n<td>通过指定函数处理数组的每个元素，并返回处理后的数组。</td>\n</tr>\n<tr>\n<td>reduce()</td>\n<td>将数组元素计算为一个值（从左到右）。</td>\n</tr>\n<tr>\n<td>reduceRight()</td>\n<td>将数组元素计算为一个值（从右到左）。</td>\n</tr>\n<tr>\n<td>reverse()</td>\n<td>反转数组的元素顺序。</td>\n</tr>\n<tr>\n<td>shift()</td>\n<td>删除并返回数组的第一个元素。</td>\n</tr>\n<tr>\n<td>slice()</td>\n<td>选取数组的一部分，并返回一个新数组。</td>\n</tr>\n<tr>\n<td>some()</td>\n<td>检测数组元素中是否有元素符合指定条件。</td>\n</tr>\n<tr>\n<td>sort()</td>\n<td>对数组的元素进行排序。</td>\n</tr>\n<tr>\n<td>splice()</td>\n<td>从数组中添加或删除元素。</td>\n</tr>\n<tr>\n<td>toString()</td>\n<td>把数组转换为字符串，并返回结果。</td>\n</tr>\n<tr>\n<td>unshift()</td>\n<td>向数组的开头添加一个或更多元素，并返回新的长度。</td>\n</tr>\n<tr>\n<td>valueOf()</td>\n<td>返回数组对象的原始值。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"13-遍历数组\"><a class=\"anchor\" href=\"#13-遍历数组\">#</a> 1.3 遍历数组</h3>\n<p>现有一个数组 <code>nums</code> ，JavaScript 有以下遍历方法。</p>\n<ol>\n<li>\n<p>普通 for 循环</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>nums<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//i 为索引</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 或者也可写成这样</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>len<span class=\"token operator\">=</span>nums<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>len<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//i 为索引</span></pre></td></tr></table></figure></li>\n<li>\n<p>for in (效率不高)</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token keyword\">in</span> nums<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//i 为索引</span></pre></td></tr></table></figure></li>\n<li>\n<p>forEach (性能低于普通 for)</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>nums<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//item 是 nums 的元素，而非索引</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>for of (需要 ES6 支持，性能优于 forin，劣于普通 for)</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> value <span class=\"token keyword\">of</span> nums<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//value 是元素，而非索引</span></pre></td></tr></table></figure></li>\n<li>\n<p>map 遍历 (性能不及 forEach)</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>nums<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">num</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//num 是元素，而非索引</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n</ol>\n<h4 id=\"注let-是局部变量var-是全局变量-一般来说循环中使用-let-标记循环变量-i\"><a class=\"anchor\" href=\"#注let是局部变量var是全局变量-一般来说循环中使用let标记循环变量i\">#</a> 注：let 是局部变量，var 是全局变量。一般来说循环中使用 let 标记循环变量 i。</h4>\n<h2 id=\"2-map-对象\"><a class=\"anchor\" href=\"#2-map对象\">#</a> 2. Map 对象</h2>\n<p>JavaScript 中 map 并不常用，所以文档里不怎么好找。</p>\n<p><strong>js 中 map 访问和取值必须通过 get/set 函数，而非直接 [] 访存</strong></p>\n<p>大致用法如下</p>\n<h3 id=\"21-创建-设置-查找-删除\"><a class=\"anchor\" href=\"#21-创建-设置-查找-删除\">#</a> 2.1 创建 -- 设置 -- 查找 -- 删除</h3>\n<ul>\n<li>声明</li>\n</ul>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>设值</li>\n</ul>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>map<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"value\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>取值</li>\n</ul>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>map<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>判断 key 是否存在</li>\n</ul>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>map<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>删除 key</li>\n</ul>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>map<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"22-常用函数\"><a class=\"anchor\" href=\"#22-常用函数\">#</a> 2.2 常用函数</h3>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>clear()</code></td>\n<td>删除所有的键值对；</td>\n</tr>\n<tr>\n<td><code>delete(key)</code></td>\n<td>删除指定键；</td>\n</tr>\n<tr>\n<td><code>forEach(callback,context)</code></td>\n<td>循环执行函数并把键值对作为参数，context 为执行函数的上下文 this;</td>\n</tr>\n<tr>\n<td><code>get(key)</code></td>\n<td>返回 Map 对象 key 相对的 value 值；</td>\n</tr>\n<tr>\n<td><code>has(key)</code></td>\n<td>返回布尔值，判断 Map 对象是否存在指定的 key;</td>\n</tr>\n<tr>\n<td><code>set(key,value)</code></td>\n<td>给 Map 对象设置 key/value 键值对，<strong>返回</strong>这个 Map 对象</td>\n</tr>\n<tr>\n<td><code>keys()</code></td>\n<td>返回一个迭代器，迭代器按照插入的顺序返回每一个 key 元素；</td>\n</tr>\n<tr>\n<td><code>entries()</code></td>\n<td>返回一个迭代器，迭代器按照对象的插入顺序返回 [key,value];</td>\n</tr>\n<tr>\n<td><code>iterator</code></td>\n<td>和 entireds () 方法一样，返回一个迭代器，迭代器按照对象的插入顺序返回 [key,value]</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"3-set-对象\"><a class=\"anchor\" href=\"#3-set对象\">#</a> 3. Set 对象</h2>\n<p>相较于 map，set 只有键没有值。</p>\n<h3 id=\"31-基本用法\"><a class=\"anchor\" href=\"#31-基本用法\">#</a> 3.1 基本用法</h3>\n<ul>\n<li>创建</li>\n</ul>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">let</span> set <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ul>\n<li>返回长度</li>\n</ul>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>set<span class=\"token punctuation\">.</span>size</pre></td></tr></table></figure><ul>\n<li>判断是否存在</li>\n</ul>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>set<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ul>\n<li>删除</li>\n</ul>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>set<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ul>\n<li>清空</li>\n</ul>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>set<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"4-字符串\"><a class=\"anchor\" href=\"#4-字符串\">#</a> 4. 字符串</h2>\n<p>JavaScript 中 string 用法和 Python 有点类似，&quot;&quot; 和 '' 均可以代表字符串，且没有字符和字符串之分（字符就是长度为 1 的字符串）</p>\n<h3 id=\"41-基本用法\"><a class=\"anchor\" href=\"#41-基本用法\">#</a> 4.1 基本用法</h3>\n<ul>\n<li>\n<p>创建</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> s<span class=\"token operator\">=</span><span class=\"token string\">\"zifuchuan\"</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 直接创建即可</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> s1<span class=\"token operator\">=</span><span class=\"token string\">'zifuchuan2'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"John\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 也可以以对象创建，但不建议这样，效率比较低</span></pre></td></tr></table></figure></li>\n<li>\n<p>访存</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 直接通过 [] 即可</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> s<span class=\"token operator\">=</span><span class=\"token string\">'zifuchuan2'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 打印 i</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>s<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>返回长度</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> s<span class=\"token operator\">=</span><span class=\"token string\">'zifuchuan2'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>s<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"42-特殊字符转义\"><a class=\"anchor\" href=\"#42-特殊字符转义\">#</a> 4.2 特殊字符转义</h3>\n<p>字符串中有些字符不能直接打，如 <code>\\</code> 、 <code>&quot;</code>  等，需要用转义，以下为转义字符表</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">代码</th>\n<th style=\"text-align:left\">输出</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">\\'</td>\n<td style=\"text-align:left\">单引号</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\&quot;</td>\n<td style=\"text-align:left\">双引号</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\\\</td>\n<td style=\"text-align:left\">反斜杠</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\n</td>\n<td style=\"text-align:left\">换行</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\r</td>\n<td style=\"text-align:left\">回车</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\t</td>\n<td style=\"text-align:left\">tab (制表符)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\b</td>\n<td style=\"text-align:left\">退格符</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\f</td>\n<td style=\"text-align:left\">换页符</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"43-常用函数\"><a class=\"anchor\" href=\"#43-常用函数\">#</a> 4.3 常用函数</h3>\n<ul>\n<li>字段</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">constructor</td>\n<td style=\"text-align:left\">返回创建字符串属性的函数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">length</td>\n<td style=\"text-align:left\">返回字符串的长度</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">prototype</td>\n<td style=\"text-align:left\">允许您向对象添加属性和方法</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p>函数</p>\n<ul>\n<li>\n<p>访问 / 查找 / 匹配</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方法</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">charAt()</td>\n<td style=\"text-align:left\">返回指定索引位置的字符。<strong>按索引</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">indexOf()</td>\n<td style=\"text-align:left\">返回字符串中检索指定字符第一次出现的位置。<strong>按内容</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">lastIndexOf()</td>\n<td style=\"text-align:left\">返回字符串中检索指定字符最后一次出现的位置。<strong>按内容</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">search()</td>\n<td style=\"text-align:left\">检索与正则表达式相匹配的值，返回<strong>第一个匹配值的索引</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">match()</td>\n<td style=\"text-align:left\">找到一个或多个正则表达式的匹配</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>截取 / 拼接 / 拆分 / 替换</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方法</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">substr()</td>\n<td style=\"text-align:left\">从起始索引号提取字符串中指定数目的字符</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">substring()</td>\n<td style=\"text-align:left\">提取字符串中两个指定的索引号之间的字符</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">concat()</td>\n<td style=\"text-align:left\">连接两个或多个字符串，返回连接后的字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">split()</td>\n<td style=\"text-align:left\">把字符串分割为子字符串数组</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">replace()</td>\n<td style=\"text-align:left\">替换与正则表达式匹配的子串</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>转换大小写 / 去除空格</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方法</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">toLowerCase()</td>\n<td style=\"text-align:left\">把字符串转换为小写</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">toUpperCase()</td>\n<td style=\"text-align:left\">把字符串转换为大写</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">trim()</td>\n<td style=\"text-align:left\">移除字符串首尾空白</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>其他</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方法</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">charCodeAt()</td>\n<td style=\"text-align:left\">返回指定索引位置字符的 Unicode 值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">fromCharCode()</td>\n<td style=\"text-align:left\">将 Unicode 转换为字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">localeCompare()</td>\n<td style=\"text-align:left\">用本地特定的顺序来比较两个字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">slice()</td>\n<td style=\"text-align:left\">提取字符串的片断，并在新的字符串中返回被提取的部分</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">toLocaleLowerCase()</td>\n<td style=\"text-align:left\">根据主机的语言环境把字符串转换为小写，只有几种语言（如土耳其语）具有地方特有的大小写映射</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">toLocaleUpperCase()</td>\n<td style=\"text-align:left\">根据主机的语言环境把字符串转换为大写，只有几种语言（如土耳其语）具有地方特有的大小写映射</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">toString()</td>\n<td style=\"text-align:left\">返回字符串对象值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">valueOf()</td>\n<td style=\"text-align:left\">返回某个字符串对象的原始值</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"四-dom\"><a class=\"anchor\" href=\"#四-dom\">#</a> 四、DOM</h1>\n<blockquote>\n<p>DOM (文档对象模型)。通过 HTML DOM，可访问 JavaScript HTML 文档的所有元素。最主要的就是 2 点：</p>\n<ol>\n<li>设置 html 文档内容</li>\n<li>设置事件</li>\n</ol>\n</blockquote>\n<p>在 HTML DOM (Document Object Model) 中，每一个元素都是 <strong>节点</strong>，或者说是<strong>对象</strong>:</p>\n<ul>\n<li>文档是一个<strong>文档</strong>节点。&lt;font color=red&gt; 即 document&lt;/font&gt;</li>\n<li>所有的 HTML<strong> 元素</strong>都是元素节点。&lt;font color=red&gt; 即 element，通过 document 获取 &lt;/font&gt;</li>\n<li>所有 HTML <strong>属性</strong>都是属性节点。&lt;font color=red&gt; 即 attr，在 element 中设置 &lt;/font&gt;</li>\n<li><strong>文本</strong>插入到 HTML 元素是文本节点。are text nodes。</li>\n<li><strong>注释</strong>是注释节点。</li>\n</ul>\n<blockquote>\n<p>大部分用到的节点都是<strong>元素对象</strong>和<strong>属性对象</strong></p>\n</blockquote>\n<p>节点关系如下图</p>\n<p><img data-src=\"/2021/05/20/note/%E5%89%8D%E7%AB%AF/JavaScript/pic_htmltree.gif\" alt=\"DOM HTML tree\"></p>\n<blockquote>\n<p>每个节点都是 html 中一个组成</p>\n</blockquote>\n<p>如下图所示：</p>\n<p><img data-src=\"/2021/05/20/note/%E5%89%8D%E7%AB%AF/JavaScript/image-20210525175719082.png\" alt=\"image-20210525175719082\"></p>\n<p>通过 DOM，JavaScript 获得了足够的能力来创建动态的 HTML。</p>\n<ul>\n<li>JavaScript 能够改变页面中的所有 HTML 元素</li>\n<li>JavaScript 能够改变页面中的所有 HTML 属性</li>\n<li>JavaScript 能够改变页面中的所有 CSS 样式</li>\n<li>JavaScript 能够对页面中的所有事件做出反应</li>\n</ul>\n<h2 id=\"1-document-对象节点\"><a class=\"anchor\" href=\"#1-document对象节点\">#</a> 1. document 对象（节点）</h2>\n<p>当浏览器载入 HTML 文档，它就会成为 <strong>Document 对象</strong>。</p>\n<p>Document 对象是 <strong>Window</strong> 对象的一部分，可通过 window.document 属性对其进行访问。</p>\n<h3 id=\"11-通过-document-获取-element-对象\"><a class=\"anchor\" href=\"#11-通过document获取element对象\">#</a> 1.1 通过 document 获取 element 对象</h3>\n<p>element 对象，即 html 中的元素，也就是标签。一条标签对应一个 element 对象。</p>\n<p>可以像 <code>css</code>  一样通过 class/id/ 标签 /name 等选择器获取对象。</p>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>document.getElementsByClassName()  </code></td>\n<td>根据定义的 class 返回。&lt;font color=red&gt; 以数组返回  &lt;/font&gt;</td>\n</tr>\n<tr>\n<td><code>document.getElementsByName() </code></td>\n<td>根据定义 name 返回。&lt;font color=red&gt; 以数组返回  &lt;/font&gt;</td>\n</tr>\n<tr>\n<td><code> document.getElementsByTagName() </code></td>\n<td>根据标签名返回。&lt;font color=red&gt; 以数组返回  &lt;/font&gt;</td>\n</tr>\n<tr>\n<td><code>document.getElementById() </code></td>\n<td>返回对拥有指定 id 的<strong>第一个</strong>对象的引用。</td>\n</tr>\n</tbody>\n</table>\n<p>如：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>cls<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>哈哈<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>aa<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>文本框<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByClassName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cls\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h3 id=\"12-创建-dom-节点对象\"><a class=\"anchor\" href=\"#12-创建dom节点对象\">#</a> 1.2 创建 DOM 节点对象</h3>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>document.createAttribute(&quot;attribute&quot;)  </code></td>\n<td>创建一个属性节点   &lt;font color=red&gt; 可用于设置标签的属性 &lt;/font&gt;</td>\n</tr>\n<tr>\n<td><code>document.createComment(&quot;text&quot;) </code></td>\n<td>创建注释节点。</td>\n</tr>\n<tr>\n<td><code>document.createElement(&quot;nodename&quot;) </code></td>\n<td>创建元素节点。  &lt;font color=red&gt; <code>nodename</code>  是标签名，或者 input 的 type&lt;/font&gt;</td>\n</tr>\n<tr>\n<td><code>document.createTextNode() </code></td>\n<td>创建文本节点。</td>\n</tr>\n</tbody>\n</table>\n<p>例：</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> btn<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BUTTON\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> t<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CLICK ME\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>btn<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\"></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token selector\">.democlass</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token property\">color</span><span class=\"token punctuation\">:</span>red<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Hello World<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>demo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>单击按钮来创建一个“类”属性值“democlass”插入到上面的H1元素。<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>myFunction()<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>点我<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">var</span> h1<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"H1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">var</span> att<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">createAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"class\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tatt<span class=\"token punctuation\">.</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"democlass\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\th1<span class=\"token punctuation\">.</span><span class=\"token function\">setAttributeNode</span><span class=\"token punctuation\">(</span>att<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h3 id=\"13-直接获取-设置-html-文档信息\"><a class=\"anchor\" href=\"#13-直接获取设置html文档信息\">#</a> 1.3 直接获取 / 设置 html 文档信息</h3>\n<p>可直接通过下列方法进行<strong>修改</strong>文档信息，常用方法如下</p>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLWRvYy1ib2R5Lmh0bWw=\">document.body</span></td>\n<td>返回文档的 body 元素</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLWRvYy10aXRsZS5odG1s\">document.title</span></td>\n<td>返回当前文档的标题。</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLWRvYy11cmwuaHRtbA==\">document.URL</span></td>\n<td>返回文档完整的 URL</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9jb2xsLWRvYy1saW5rcy5odG1s\">document.links</span></td>\n<td>返回对文档中所有 Area 和 Link 对象引用。</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9jb2xsLWRvYy1pbWFnZXMuaHRtbA==\">document.images</span></td>\n<td>返回对文档中所有 Image 对象引用。</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9jb2xsLWRvYy1mb3Jtcy5odG1s\">document.forms</span></td>\n<td>返回对文档中所有 Form 对象引用。</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLWRvY3VtZW50LWlucHV0ZW5jb2RpbmcuaHRtbA==\">document.inputEncoding</span></td>\n<td>返回用于文档的编码方式（在解析时）。</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLWRvYy1sYXN0bW9kaWZpZWQuaHRtbA==\">document.lastModified</span></td>\n<td>返回文档被最后修改的日期和时间。</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9jb2xsLWRvYy1hbmNob3JzLmh0bWw=\">document.anchors</span></td>\n<td>返回对文档中所有 Anchor 对象的引用。</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLWRvYy1jb29raWUuaHRtbA==\">document.cookie</span></td>\n<td>设置或返回与当前文档有关的所有 cookie。</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLWRvY3VtZW50LWRvY3VtZW50dXJpLmh0bWw=\">document.documentURI</span></td>\n<td>设置或返回文档的位置</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLWRvYy1kb21haW4uaHRtbA==\">document.domain</span></td>\n<td>返回当前文档的域名。</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9tZXQtZG9jLXdyaXRlLmh0bWw=\">document.write()</span></td>\n<td>向文档写 HTML 表达式 或 JavaScript 代码。</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9tZXQtZG9jLXdyaXRlbG4uaHRtbA==\">document.writeln()</span></td>\n<td>等同于 write () 方法，不同的是在每个表达式之后写一个换行符。</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"2-element-对象节点\"><a class=\"anchor\" href=\"#2-element对象节点\">#</a> 2. element 对象（节点）</h2>\n<p>对应 html 的一条标签。</p>\n<p>element 对象可通过 document 对象获取</p>\n<p>element 对象可以完成以下功能：</p>\n<ol>\n<li>设置 / 添加 / 移除属性</li>\n<li>添加 / 移除子元素（节点）</li>\n<li>修改 html 内容（一般是对对应标签的修改，而非像 document 那么粗暴直接修改 body）</li>\n<li>修改 css 样式</li>\n</ol>\n<h3 id=\"21-获取-设置-删除属性-attr\"><a class=\"anchor\" href=\"#21-获取设置删除属性attr\">#</a> 2.1 获取 / 设置 / 删除属性 attr</h3>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://www.runoob.com/jsref/prop-node-attributes.html\"><em>element</em>.attributes</a></td>\n<td>返回一个元素的<strong>属性数组</strong>。可按索引访问 attr</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/jsref/met-element-getattribute.html\"><em>element</em>.getAttribute(&quot;<em>attributename</em>&quot;)</a></td>\n<td>根据<strong>属性名</strong>返回元素的属性值</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/jsref/met-element-getattributenode.html\"><em>element</em>.getAttributeNode(&quot;<em>attributename</em>&quot;)</a></td>\n<td>根据<strong>属性名</strong>返回指定属性<strong>节点对象</strong>（其实就是<strong>属性对象 attr</strong>）</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/jsref/met-element-hasattribute.html\"><em>element</em>.hasAttribute(&quot;<em>attributename</em>&quot;)</a></td>\n<td>如果元素中存在指定的属性返回 true，否则返回 false。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/jsref/met-node-hasattributes.html\"><em>element</em>.hasAttributes()</a></td>\n<td>如果元素有任何属性返回 true，否则返回 false。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/jsref/met-element-removeattribute.html\"><em>element</em>.removeAttribute()</a></td>\n<td>从元素中删除指定的属性</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/jsref/met-element-removeattributenode.html\"><em>element</em>.removeAttributeNode()</a></td>\n<td>删除指定属性节点并返回移除后的节点。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/jsref/met-element-setattribute.html\"><em>element</em>.setAttribute()</a></td>\n<td>设置或者改变指定属性并指定值。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/jsref/met-element-setattributenode.html\"><em>element</em>.setAttributeNode()</a></td>\n<td>设置或者改变指定属性节点。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"22-设置标签体内容\"><a class=\"anchor\" href=\"#22-设置标签体内容\">#</a> 2.2 设置标签体内容</h3>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>element.innerHTML=text</td>\n<td>设置或者返回元素的<strong>文本</strong>内容。</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL2VsZW1lbnQuaWQ=\">element.id</span></td>\n<td>设置或者返回元素的 id。</td>\n</tr>\n<tr>\n<td>element.nodeName</td>\n<td>返回元素的标记名（大写） <strong>文本以 #text 返回</strong></td>\n</tr>\n<tr>\n<td>element.nodeType</td>\n<td>返回元素的节点类型</td>\n</tr>\n<tr>\n<td>element.nodeValue</td>\n<td>返回元素的节点值</td>\n</tr>\n<tr>\n<td>element.href</td>\n<td>返回元素的链接</td>\n</tr>\n<tr>\n<td><em>element</em>.style</td>\n<td>设置或返回元素的样式属性</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/jsref/prop-element-tagname.html\"><em>element</em>.tagName</a></td>\n<td>作为一个字符串返回某个元素的标记名（大写）<strong>文本以 undefined 返回</strong></td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/jsref/prop-node-textcontent.html\"><em>element</em>.textContent</a></td>\n<td>设置或返回一个节点和它的文本内容</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/jsref/prop-html-title.html\"><em>element</em>.title</a></td>\n<td>设置或返回元素的 title 属性</td>\n</tr>\n<tr>\n<td><em>element</em>.toString()</td>\n<td>一个元素转换成字符串</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/jsref/prop-html-classname.html\"><em>element</em>.className</a></td>\n<td>设置或返回元素的 class 属性</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"23-像树一样操作节点\"><a class=\"anchor\" href=\"#23-像树一样操作节点\">#</a> 2.3 像树一样操作节点</h3>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>intro<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>你好世界!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>该实例展示了 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>b</span><span class=\"token punctuation\">></span></span>getElementById<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>b</span><span class=\"token punctuation\">></span></span> 方法!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>x<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"intro\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;p>文本来自 id 为 intro 段落: \"</span> <span class=\"token operator\">+</span> x<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+</span> <span class=\"token string\">\"&lt;/p>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><blockquote>\n<p>此处，&lt;p&gt; 和 &lt; script &gt; 互为兄弟节点，且均为 &lt; body &gt; 的子节点。</p>\n<p>而 <code>id=&quot;intro&quot;</code>  是 attr 节点，为第一个 &lt;p&gt; 的子节点， <code>你好世界!</code>  是 textnode 节点，也为 &lt;p&gt; 的子节点</p>\n</blockquote>\n<p>节点的父子关系如下图（DOM 树）</p>\n<p><img data-src=\"/2021/05/20/note/%E5%89%8D%E7%AB%AF/JavaScript/pic_htmltree.gif\" alt=\"DOM HTML tree\"></p>\n<p>text 一般是 element 的子节点，不同的 element 也会为父子节点。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>myList<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>Coffee<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>Tea<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>demo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>单击按钮将项目添加到列表中<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>myFunction()<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>点我<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">var</span> node<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"LI\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">var</span> textnode<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Water\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tnode<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>textnode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tdocument<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myList\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">></span></span>注意:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span>首先创建一个节点，<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span> 然后创建一个文本节点，<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span>然后将文本节点添加到LI节点上。<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span>最后将节点添加到列表中。<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h4 id=\"231-获取父子-兄弟节点\"><a class=\"anchor\" href=\"#231-获取父子兄弟节点\">#</a> 2.3.1 获取父子 / 兄弟节点</h4>\n<ul>\n<li>判断</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://www.runoob.com/jsref/met-node-haschildnodes.html\"><em>element</em>.hasChildNodes()</a></td>\n<td>返回一个元素是否具有任何子元素</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>获取</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://www.runoob.com/jsref/prop-node-childnodes.html\"><em>element</em>.childNodes</a></td>\n<td>返回元素的一个子节点的数组</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/jsref/prop-element-children.html\"><em>element</em>.children</a></td>\n<td>返回元素的子元素的集合</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/jsref/prop-node-firstchild.html\"><em>element</em>.firstChild</a></td>\n<td>返回元素的第一个子节点</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/jsref/prop-node-lastchild.html\"><em>element</em>.lastChild</a></td>\n<td>返回的最后一个子节点</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/jsref/prop-node-parentnode.html\"><em>element</em>.parentNode</a></td>\n<td>返回元素的<strong>父节点</strong></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/jsref/prop-node-nextsibling.html\"><em>element</em>.nextSibling</a></td>\n<td>返回紧跟的一个兄弟<strong>节点</strong>（textnode 也是节点，但不是元素节点）</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/jsref/prop-element-nextelementsibling.html\"><em>element</em>.nextElementSibling</a></td>\n<td>返回紧跟的一个兄弟<strong>元素节点</strong></td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/jsref/prop-node-previoussibling.html\"><em>element</em>.previousSibling</a></td>\n<td>返回之前的兄弟<strong>节点</strong></td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/jsref/prop-element-previouselementsibling.html\"><em>element</em>.previousElementSibling</a></td>\n<td>返回之前的兄弟<strong>元素节点</strong></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/jsref/met-element-queryselector.html\"><em>element</em>.querySelector()</a></td>\n<td>返回匹配指定 CSS 选择器元素的第一个子元素</td>\n</tr>\n<tr>\n<td>document.querySelectorAll()</td>\n<td>返回匹配指定 CSS 选择器元素的所有子元素节点列表</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/jsref/met-element-getattributenode.html\"><em>element</em>.getAttributeNode()</a></td>\n<td>返回指定属性节点</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/jsref/met-element-getelementsbytagname.html\"><em>element</em>.getElementsByTagName()</a></td>\n<td>返回指定标签名的所有子元素集合。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/jsref/met-element-getelementsbyclassname.html\"><em>element</em>. getElementsByClassName()</a></td>\n<td>返回文档中所有指定类名的元素集合，作为 NodeList 对象。</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"232-添加-删除子节点\"><a class=\"anchor\" href=\"#232-添加删除子节点\">#</a> 2.3.2 添加 / 删除子节点</h4>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://www.runoob.com/jsref/met-node-appendchild.html\"><em>element</em>.appendChild()</a></td>\n<td>为元素添加一个新的子元素</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/jsref/met-node-removechild.html\"><em>element</em>.removeChild()</a></td>\n<td>删除一个子元素</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/jsref/met-node-replacechild.html\"><em>element</em>.replaceChild()</a></td>\n<td>替换一个子元素</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"3-attr-对象节点\"><a class=\"anchor\" href=\"#3-attr对象节点\">#</a> 3. attr 对象（节点）</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性 / 方法</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.runoob.com/jsref/prop-attr-isid.html\"><em>attr</em>.isId</a></td>\n<td style=\"text-align:left\">如果属性是 ID 类型，则 isId 属性返回 true，否则返回 false。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.runoob.com/jsref/prop-attr-name.html\"><em>attr</em>.name</a></td>\n<td style=\"text-align:left\">返回属性名称</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.runoob.com/jsref/prop-attr-value.html\"><em>attr</em>.value</a></td>\n<td style=\"text-align:left\">设置或者返回属性值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.runoob.com/jsref/prop-attr-specified.html\"><em>attr</em>.specified</a></td>\n<td style=\"text-align:left\">如果属性被指定返回 true ，否则返回 false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.runoob.com/jsref/met-namednodemap-getnameditem.html\"><em>nodemap</em>.getNamedItem()</a></td>\n<td style=\"text-align:left\">从节点列表中返回的指定属性节点。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.runoob.com/jsref/met-namednodemap-item.html\"><em>nodemap</em>.item()</a></td>\n<td style=\"text-align:left\">返回节点列表中处于指定索引号的节点。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.runoob.com/jsref/prop-namednodemap-length.html\"><em>nodemap</em>.length</a></td>\n<td style=\"text-align:left\">返回节点列表的节点数目。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.runoob.com/jsref/met-namednodemap-removenameditem.html\"><em>nodemap</em>.removeNamedItem()</a></td>\n<td style=\"text-align:left\">删除指定属性节点</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.runoob.com/jsref/met-namednodemap-setnameditem.html\"><em>nodemap</em>.setNamedItem()</a></td>\n<td style=\"text-align:left\">设置指定属性节点 (通过名称)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"4-事件\"><a class=\"anchor\" href=\"#4-事件\">#</a> 4. 事件</h2>\n<p>用法是在标签内添加事件的同名属性，属性值为响应函数，如下</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">bigImg</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tx<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>height<span class=\"token operator\">=</span><span class=\"token string\">\"64px\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tx<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>width<span class=\"token operator\">=</span><span class=\"token string\">\"64px\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">normalImg</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tx<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>height<span class=\"token operator\">=</span><span class=\"token string\">\"32px\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tx<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>width<span class=\"token operator\">=</span><span class=\"token string\">\"32px\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">onmouseover</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bigImg(this)<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onmouseout</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>normalImg(this)<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">border</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>smiley.gif<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Smiley<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>32<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>32<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>函数 bigImg() 在鼠标指针移动到笑脸图片是触发。<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>函数 normalImg() 在鼠标指针移出笑脸图片是触发.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><em>事件比较简单，用到时直接查手册即可</em></p>\n<h2 id=\"5-控制台对象console\"><a class=\"anchor\" href=\"#5-控制台对象console\">#</a> 5. 控制台对象（console）</h2>\n<p>控制台主要用于 IDE 调试 JavaScript 代码。最常用的即是 <code>console.log()</code>  控制台打印输出。详细如下，</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方法</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9tZXQtY29uc29sZS1hc3NlcnQuaHRtbA==\">assert()</span></td>\n<td style=\"text-align:left\">如果断言为 false，则在信息到控制台输出错误信息。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9tZXQtY29uc29sZS1jbGVhci5odG1s\">clear()</span></td>\n<td style=\"text-align:left\">清除控制台上的信息。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9tZXQtY29uc29sZS1jb3VudC5odG1s\">count()</span></td>\n<td style=\"text-align:left\">记录 count () 调用次数，一般用于计数。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9tZXQtY29uc29sZS1lcnJvci5odG1s\">error()</span></td>\n<td style=\"text-align:left\">输出错误信息到控制台</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9tZXQtY29uc29sZS1ncm91cC5odG1s\">group()</span></td>\n<td style=\"text-align:left\">在控制台创建一个信息分组。 一个完整的信息分组以 console.group () 开始，console.groupEnd () 结束</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9tZXQtY29uc29sZS1ncm91cGNvbGxhcHNlZC5odG1s\">groupCollapsed()</span></td>\n<td style=\"text-align:left\">在控制台创建一个信息分组。 类似 console.group () ，但它默认是折叠的。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9tZXQtY29uc29sZS1ncm91cGVuZC5odG1s\">groupEnd()</span></td>\n<td style=\"text-align:left\">设置当前信息分组结束</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9tZXQtY29uc29sZS1pbmZvLmh0bWw=\">info()</span></td>\n<td style=\"text-align:left\">控制台输出一条信息</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9tZXQtY29uc29sZS1sb2cuaHRtbA==\">log()</span></td>\n<td style=\"text-align:left\">控制台输出一条信息</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9tZXQtY29uc29sZS10YWJsZS5odG1s\">table()</span></td>\n<td style=\"text-align:left\">以表格形式显示数据</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9tZXQtY29uc29sZS10aW1lLmh0bWw=\">time()</span></td>\n<td style=\"text-align:left\">计时器，开始计时间，与 timeEnd () 联合使用，用于算出一个操作所花费的准确时间。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9tZXQtY29uc29sZS10aW1lZW5kLmh0bWw=\">timeEnd()</span></td>\n<td style=\"text-align:left\">计时结束</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9tZXQtY29uc29sZS10cmFjZS5odG1s\">trace()</span></td>\n<td style=\"text-align:left\">显示当前执行的代码在堆栈中的调用路径。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9tZXQtY29uc29sZS13YXJuLmh0bWw=\">warn()</span></td>\n<td style=\"text-align:left\">输出警告信息，信息最前面加一个黄色三角，表示警告</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"五-bom\"><a class=\"anchor\" href=\"#五-bom\">#</a> 五、 BOM</h1>\n<blockquote>\n<p>浏览器对象模型（<strong>B</strong>rowser <strong>O</strong>bject <strong>M</strong>odel (BOM)），主要用于设置浏览器的一些功能，可以算是 DOM 的上级。</p>\n</blockquote>\n<p>常用于 <code>DOM</code>  的事件响应函数，和一些动态花里胡哨页面设置</p>\n<h2 id=\"1-window-对象\"><a class=\"anchor\" href=\"#1-window对象\">#</a> 1. window 对象</h2>\n<p>Window 对象表示浏览器中打开的窗口。（PS：document 可以由 window 获取）</p>\n<p>window 是 JavaScript 的系统对象，直属于 window 的方法可以直接写，如 alter</p>\n<h3 id=\"11-window-属性\"><a class=\"anchor\" href=\"#11-window属性\">#</a> 1.1 window 属性</h3>\n<p>常用属性如下</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLXdpbi1jbG9zZWQuaHRtbA==\">closed</span></td>\n<td style=\"text-align:left\">返回窗口是否已被关闭。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9kb20tb2JqLWRvY3VtZW50Lmh0bWw=\">document</span></td>\n<td style=\"text-align:left\">对 Document 对象的只读引用。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLXdpbi1uYW1lLmh0bWw=\">name</span></td>\n<td style=\"text-align:left\">设置或返回窗口的名称。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9vYmotaGlzdG9yeS5odG1s\">history</span></td>\n<td style=\"text-align:left\">对 History 对象的只读引用。请参数 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9vYmotaGlzdG9yeS5odG1s\">History 对象</span>。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLXdpbi1zZWxmLmh0bWw=\">self</span></td>\n<td style=\"text-align:left\">返回对当前窗口的引用。等价于 Window 属性。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLXdpbi10b3AuaHRtbA==\">top</span></td>\n<td style=\"text-align:left\">返回最顶层的父窗口。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLXdpbi1wYXJlbnQuaHRtbA==\">parent</span></td>\n<td style=\"text-align:left\">返回父窗口。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLXdpbi1pbm5lcmhlaWdodC5odG1s\">innerHeight</span></td>\n<td style=\"text-align:left\">返回窗口的文档显示区的高度。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLXdpbi1pbm5lcmhlaWdodC5odG1s\">innerWidth</span></td>\n<td style=\"text-align:left\">返回窗口的文档显示区的宽度。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLXdpbi1vdXRlcmhlaWdodC5odG1s\">outerHeight</span></td>\n<td style=\"text-align:left\">返回窗口的外部高度，包含工具条与滚动条。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLXdpbi1vdXRlcmhlaWdodC5odG1s\">outerWidth</span></td>\n<td style=\"text-align:left\">返回窗口的外部宽度，包含工具条与滚动条。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLXdpbi1sb2NhbHN0b3JhZ2UuaHRtbA==\">localStorage</span></td>\n<td style=\"text-align:left\">在浏览器中存储 key/value 对。没有过期时间。<strong>本地存储</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLXdpbi1zZXNzaW9uc3RvcmFnZS5odG1s\">sessionStorage</span></td>\n<td style=\"text-align:left\">在浏览器中存储 key/value 对。 在关闭窗口或标签页之后将会删除这些数据。<strong>会话存储</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9vYmotc2NyZWVuLmh0bWw=\">screen</span></td>\n<td style=\"text-align:left\">对 Screen 对象的只读引用。请参数 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9vYmotc2NyZWVuLmh0bWw=\">Screen 对象</span>。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLXdpbi1zY3JlZW5sZWZ0Lmh0bWw=\">screenLeft</span></td>\n<td style=\"text-align:left\">返回相对于屏幕窗口的 x 坐标</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLXdpbi1zY3JlZW5sZWZ0Lmh0bWw=\">screenTop</span></td>\n<td style=\"text-align:left\">返回相对于屏幕窗口的 y 坐标</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLXdpbi1zY3JlZW54Lmh0bWw=\">screenX</span></td>\n<td style=\"text-align:left\">返回相对于屏幕窗口的 x 坐标</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLXdpbi1zY3JlZW54Lmh0bWw=\">screenY</span></td>\n<td style=\"text-align:left\">返回相对于屏幕窗口的 y 坐标</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"12-window-方法\"><a class=\"anchor\" href=\"#12-window方法\">#</a> 1.2 window 方法</h3>\n<ol>\n<li>\n<p>弹出类方法，输入均为提示用户的消息</p>\n<table>\n<thead>\n<tr>\n<th><strong>方法</strong></th>\n<th><strong>描述</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>alert()</td>\n<td>显示带有一段消息和一个确认按钮的警告框。</td>\n</tr>\n<tr>\n<td>confirm()</td>\n<td>显示带有一段消息以及确认按钮和取消按钮的对话框。  返回：确认返回 true，取消返回 false</td>\n</tr>\n<tr>\n<td>prompt()</td>\n<td>显示可提示用户输入的对话框。  返回：用户的输入值</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>打开 / 关闭窗口</p>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>open()</td>\n<td>打开一个新的浏览器窗口或查找一个已命名的窗口。  输入：新的窗口的 url  返回：新的窗口的 window 对象</td>\n</tr>\n<tr>\n<td>close()</td>\n<td>关闭浏览器窗口。  输入：无输入，但需要对应的 window 对象调用</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>定时器</p>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>setTimeout()</td>\n<td>在指定的毫秒数后调用函数或计算表达式。  &lt;br&gt; 输入：1. &quot;代码&quot; or 方法对象（适用于无参函数）。2. 毫秒值  返回：用于取消定时器的标识</td>\n</tr>\n<tr>\n<td>clearTimeout()</td>\n<td>取消由 setTimeout () 方法设置的 timeout。</td>\n</tr>\n<tr>\n<td>setInterval()</td>\n<td>按照指定的周期（以毫秒计）来调用函数或计算表达式。  输入 / 返回：与 setTimeout 一样</td>\n</tr>\n<tr>\n<td>clearInterval()</td>\n<td>取消由 setInterval () 设置的 timeout。</td>\n</tr>\n</tbody>\n</table>\n<p>setTimeout 示例如下：</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">fun</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span>b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">+</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fun(3,4)\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 或</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">fun1</span><span class=\"token operator\">=</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span>b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">+</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>fun1<span class=\"token punctuation\">,</span><span class=\"token number\">3000</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"2-navigator-对象\"><a class=\"anchor\" href=\"#2-navigator-对象\">#</a> 2. Navigator 对象</h2>\n<p>Navigator 对象包含有关浏览器的信息。一般用的不多</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLW5hdi1hcHBjb2RlbmFtZS5odG1s\">appCodeName</span></td>\n<td style=\"text-align:left\">返回浏览器的代码名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLW5hdi1hcHBuYW1lLmh0bWw=\">appName</span></td>\n<td style=\"text-align:left\">返回浏览器的名称</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLW5hdi1hcHB2ZXJzaW9uLmh0bWw=\">appVersion</span></td>\n<td style=\"text-align:left\">返回浏览器的平台和版本信息</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLW5hdi1jb29raWVlbmFibGVkLmh0bWw=\">cookieEnabled</span></td>\n<td style=\"text-align:left\">返回指明浏览器中是否启用 cookie 的布尔值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLW5hdi1wbGF0Zm9ybS5odG1s\">platform</span></td>\n<td style=\"text-align:left\">返回运行浏览器的操作系统平台</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLW5hdi11c2VyYWdlbnQuaHRtbA==\">userAgent</span></td>\n<td style=\"text-align:left\">返回由客户机发送服务器的 user-agent 头部的值</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td style=\"text-align:left\">方法</td>\n<td style=\"text-align:left\">描述</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">:-----------------------------------------------------------</td>\n<td style=\"text-align:left\">:----------------------------------------</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9tZXQtbmF2LWphdmFlbmFibGVkLmh0bWw=\">javaEnabled()</span></td>\n<td style=\"text-align:left\">指定是否在浏览器中启用 Java</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9tZXQtbmF2LXRhaW50ZW5hYmxlZC5odG1s\">taintEnabled()</span></td>\n<td style=\"text-align:left\">规定浏览器是否启用数据污点 (data tainting)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"3-screen-对象\"><a class=\"anchor\" href=\"#3-screen-对象\">#</a> 3. Screen 对象</h2>\n<p>Screen 对象包含有关客户端显示屏幕的信息。用得也不多</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLXNjcmVlbi1hdmFpbGhlaWdodC5odG1s\">availHeight</span></td>\n<td style=\"text-align:left\">返回屏幕的高度（不包括 Windows 任务栏）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLXNjcmVlbi1hdmFpbHdpZHRoLmh0bWw=\">availWidth</span></td>\n<td style=\"text-align:left\">返回屏幕的宽度（不包括 Windows 任务栏）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLXNjcmVlbi1jb2xvcmRlcHRoLmh0bWw=\">colorDepth</span></td>\n<td style=\"text-align:left\">返回目标设备或缓冲器上的调色板的比特深度</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLXNjcmVlbi1oZWlnaHQuaHRtbA==\">height</span></td>\n<td style=\"text-align:left\">返回屏幕的总高度</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLXNjcmVlbi1waXhlbGRlcHRoLmh0bWw=\">pixelDepth</span></td>\n<td style=\"text-align:left\">返回屏幕的颜色分辨率（每象素的位数）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLXNjcmVlbi13aWR0aC5odG1s\">width</span></td>\n<td style=\"text-align:left\">返回屏幕的总宽度</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"4-history-对象\"><a class=\"anchor\" href=\"#4-history-对象\">#</a> 4. History 对象</h2>\n<p>History 对象包含用户（在浏览器窗口中）访问过的 URL。</p>\n<p>History 对象是 window 对象的一部分，可通过 window.history 属性对其进行访问。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLWhpcy1sZW5ndGguaHRtbA==\">length</span></td>\n<td style=\"text-align:left\">返回历史列表中的网址数</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td style=\"text-align:left\">方法</td>\n<td style=\"text-align:left\">说明</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">:-----------------------------------------------------------</td>\n<td style=\"text-align:left\">:--------------------------------</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9tZXQtaGlzLWJhY2suaHRtbA==\">back()</span></td>\n<td style=\"text-align:left\">加载 history 列表中的前一个 URL</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9tZXQtaGlzLWZvcndhcmQuaHRtbA==\">forward()</span></td>\n<td style=\"text-align:left\">加载 history 列表中的下一个 URL</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9tZXQtaGlzLWdvLmh0bWw=\">go()</span></td>\n<td style=\"text-align:left\">加载 history 列表中的某个具体页面</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"5-location-对象\"><a class=\"anchor\" href=\"#5-location-对象\">#</a> 5. Location 对象</h2>\n<p>Location 对象包含有关当前 URL 的信息。</p>\n<p>Location 对象是 window 对象的一部分，可通过 window.Location 属性对其进行访问。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLWxvYy1oYXNoLmh0bWw=\">hash</span></td>\n<td style=\"text-align:left\">返回一个 URL 的锚部分</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLWxvYy1ob3N0Lmh0bWw=\">host</span></td>\n<td style=\"text-align:left\">返回一个 URL 的主机名和端口</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLWxvYy1ob3N0bmFtZS5odG1s\">hostname</span></td>\n<td style=\"text-align:left\">返回 URL 的主机名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLWxvYy1ocmVmLmh0bWw=\">href</span></td>\n<td style=\"text-align:left\">返回完整的 URL</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLWxvYy1wYXRobmFtZS5odG1s\">pathname</span></td>\n<td style=\"text-align:left\">返回的 URL 路径名。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLWxvYy1wb3J0Lmh0bWw=\">port</span></td>\n<td style=\"text-align:left\">返回一个 URL 服务器使用的端口号</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLWxvYy1wcm90b2NvbC5odG1s\">protocol</span></td>\n<td style=\"text-align:left\">返回一个 URL 协议</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLWxvYy1zZWFyY2guaHRtbA==\">search</span></td>\n<td style=\"text-align:left\">返回一个 URL 的查询部分</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td style=\"text-align:left\">方法</td>\n<td style=\"text-align:left\">说明</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">:-----------------------------------------------------------</td>\n<td style=\"text-align:left\">:---------------------</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9tZXQtbG9jLWFzc2lnbi5odG1s\">assign()</span></td>\n<td style=\"text-align:left\">载入一个新的文档</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9tZXQtbG9jLXJlbG9hZC5odG1s\">reload()</span></td>\n<td style=\"text-align:left\">重新载入当前文档</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9tZXQtbG9jLXJlcGxhY2UuaHRtbA==\">replace()</span></td>\n<td style=\"text-align:left\">用新的文档替换当前文档</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"6-storage-对象\"><a class=\"anchor\" href=\"#6-storage对象\">#</a> 6. Storage 对象</h2>\n<p>Web 存储 API 提供了 sessionStorage （会话存储） 和 localStorage（本地存储）两个存储对象来对网页的数据进行添加、删除、修改、查询操作。</p>\n<ul>\n<li>localStorage 用于长久保存整个网站的数据，保存的数据没有过期时间，直到手动去除。</li>\n<li>sessionStorage 用于临时保存同一窗口 (或标签页) 的数据，在关闭窗口或标签页之后将会删除这些数据。</li>\n</ul>\n<p>前面 window 的属性中有提到 2 个存储键值对的 storage 对象，如下</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLXdpbi1sb2NhbHN0b3JhZ2UuaHRtbA==\">window.localStorage</span></td>\n<td style=\"text-align:left\">在浏览器中存储 key/value 对。没有过期时间。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9qc3JlZi9wcm9wLXdpbi1zZXNzaW9uc3RvcmFnZS5odG1s\">window.sessionStorage</span></td>\n<td style=\"text-align:left\">在浏览器中存储 key/value 对。 在关闭窗口或标签页之后将会删除这些数据。</td>\n</tr>\n</tbody>\n</table>\n<p>storage 对象有以下属性和方法</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">length</td>\n<td style=\"text-align:left\">返回存储对象中包含多少条数据。</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td style=\"text-align:left\">方法</td>\n<td style=\"text-align:left\">描述</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">:--------------------------</td>\n<td style=\"text-align:left\">:-------------------------------------------------</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">key(<em>n</em>)</td>\n<td style=\"text-align:left\">返回存储对象中第 <em>n</em> 个键的名称</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getItem(<em>keyname</em>)</td>\n<td style=\"text-align:left\">返回指定键的值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">setItem(<em>keyname</em>, <em>value</em>)</td>\n<td style=\"text-align:left\">添加键和值，如果对应的值存在，则更新该键对应的值。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">removeItem(<em>keyname</em>)</td>\n<td style=\"text-align:left\">移除键</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">clear()</td>\n<td style=\"text-align:left\">清除存储对象中所有的键</td>\n</tr>\n</tbody>\n</table>\n",
            "tags": [
                "笔记",
                "前端",
                "前端",
                "JavaScript"
            ]
        },
        {
            "id": "https://nitgod1996.com/2021/05/19/note/%E5%89%8D%E7%AB%AF/echarts/",
            "url": "https://nitgod1996.com/2021/05/19/note/%E5%89%8D%E7%AB%AF/echarts/",
            "title": "",
            "date_published": "2021-05-19T11:22:41.954Z",
            "content_html": "<h2 id=\"echarts\"><a class=\"anchor\" href=\"#echarts\">#</a> echarts</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lY2hhcnRzLmFwYWNoZS5vcmcvemgvYXBpLmh0bWwjZWNoYXJ0cw==\">官方 API</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lY2hhcnRzLmFwYWNoZS5vcmcvemgvb3B0aW9uLmh0bWwjc2VyaWVzLWxpbmU=\">option 参数官方手册</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWFrZWFwaWUuY29tL2V4cGxvcmUuaHRtbA==\">交流者社区</span></p>\n<h3 id=\"1-安装\"><a class=\"anchor\" href=\"#1-安装\">#</a> 1. 安装</h3>\n<p>​    安装基本无难度，echarts 作为 js 的插件，只需下载一个 echarts.min.js 放在指定目录即可。</p>\n<h3 id=\"2-快速构建\"><a class=\"anchor\" href=\"#2-快速构建\">#</a> 2. 快速构建</h3>\n<ul>\n<li>引入 echarts</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>echarts.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><blockquote>\n<p>其中，src 后填的是 echarts.min.js 的相对路径</p>\n</blockquote>\n<ul>\n<li>\n<p>设置图表的尺寸</p>\n<p>其实是定义了一个 CSS 样式。</p>\n</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">&lt;!-- 为 ECharts 准备一个具备大小（宽高）的 DOM --></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>main<span class=\"token punctuation\">\"</span></span> <span class=\"token style-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token style language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 600px<span class=\"token punctuation\">;</span><span class=\"token property\">height</span><span class=\"token punctuation\">:</span>400px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ul>\n<li>\n<p>绘制图表</p>\n<p>​    这个可以直接去官网下载样式模板，然后放到 **&lt;script&gt;** 标签下</p>\n</li>\n</ul>\n<pre class=\" language-language-JavaScript\"><code class=\"language-language-JavaScript\">// 基于准备好的dom，初始化echarts实例\nvar myChart = echarts.init(document.getElementById('main'));\n\n// 指定图表的配置项和数据\nvar option = &#123;\n    title: &#123;\n        text: 'ECharts 入门示例'\n    &#125;,\n    tooltip: &#123;&#125;,\n    legend: &#123;\n        data:['销量']\n    &#125;,\n    xAxis: &#123;\n        data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\n    &#125;,\n    yAxis: &#123;&#125;,\n    series: [&#123;\n        name: '销量',\n        type: 'bar',\n        data: [5, 20, 36, 10, 10, 20]\n    &#125;]\n&#125;;\n\n// 使用刚指定的配置项和数据显示图表。\nmyChart.setOption(option);\n</code></pre>\n<h3 id=\"3-系统对象-echarts\"><a class=\"anchor\" href=\"#3-系统对象echarts\">#</a> 3. 系统对象 <code>echarts</code></h3>\n<p>​\t\t相当于 Java 的 system 对象，html 的 document 对象。</p>\n<h4 id=\"31-echartsinit\"><a class=\"anchor\" href=\"#31-echartsinit\">#</a> 3.1  <code>echarts.init</code></h4>\n<p>创建一个 echarts 实例，返回 echartsInstance。</p>\n<p>即用于获取一个 echartsInstance 对象，可看作是一个图表对象。</p>\n<p>一般只需传入一个定义了 dom 的 div 即可，可以添加 CSS 样式定义图表的尺寸。</p>\n<ul>\n<li>dom</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>main<span class=\"token punctuation\">\"</span></span> <span class=\"token style-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token style language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 600px<span class=\"token punctuation\">;</span><span class=\"token property\">height</span><span class=\"token punctuation\">:</span>400px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ul>\n<li>例</li>\n</ul>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> myChart <span class=\"token operator\">=</span> echarts<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'main'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"4-实例对象-echartsinstance\"><a class=\"anchor\" href=\"#4-实例对象echartsinstance\">#</a> 4. 实例对象 <code>echartsInstance</code></h3>\n<p>通过 echarts.init 创建的实例。通常表示一张图表</p>\n<h4 id=\"41-setoptionpotion-函数\"><a class=\"anchor\" href=\"#41-setoptionpotion函数\">#</a> 4.1 <code> setOption(potion)</code>  函数</h4>\n<h5 id=\"411-用法\"><a class=\"anchor\" href=\"#411用法\">#</a> 4.1.1 用法</h5>\n<p>设置图表实例的配置项以及数据，万能接口，所有参数和数据的修改都可以通过  <code>setOption</code>  完成。</p>\n<p>ECharts 会合并新的参数和数据，然后刷新图表。</p>\n<p>用于设置图表的各项属性，用法如下</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> option<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    title<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        text<span class=\"token operator\">:</span> <span class=\"token string\">'敌军分布'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    tooltip<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    legend<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        data<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">'敌军'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    xAxis<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    yAxis<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    series<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        name<span class=\"token operator\">:</span> <span class=\"token string\">'敌军'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        type<span class=\"token operator\">:</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>myChart<span class=\"token punctuation\">.</span><span class=\"token function\">setOption</span><span class=\"token punctuation\">(</span>optiopn<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>或者不创建 option，直接在 setOption 中设置</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>myChart<span class=\"token punctuation\">.</span><span class=\"token function\">setOption</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    title<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        text<span class=\"token operator\">:</span> <span class=\"token string\">'敌军分布'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    tooltip<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    legend<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        data<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">'敌军'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    xAxis<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    yAxis<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    series<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        name<span class=\"token operator\">:</span> <span class=\"token string\">'敌军'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        type<span class=\"token operator\">:</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>另外，多次 <code>setOption()</code>  不会完全替换图表，而是<strong>新增</strong> <code>option</code> ，只有<strong>重复</strong>的才会替换</p>\n<h5 id=\"412-option-参数手册\"><a class=\"anchor\" href=\"#412-option参数手册\">#</a> 4.1.2 option 参数手册</h5>\n<p>​\t\t一般 option 中的参数均为 json 的格式，如下</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>legend<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    top<span class=\"token operator\">:</span> <span class=\"token string\">\"90%\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    itemWidth<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    itemHeight<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    textStyle<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        color<span class=\"token operator\">:</span> <span class=\"token string\">\"rgba(255,255,255,.5)\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        fontSize<span class=\"token operator\">:</span> <span class=\"token string\">\"12\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h6 id=\"title-123125-用于设置图表的标题\"><a class=\"anchor\" href=\"#title-用于设置图表的标题\">#</a>  <code>title : &#123;&#125;</code> ：用于设置图表的标题</h6>\n<ul>\n<li><code>title.id</code> ：组件 ID。一般不怎么用</li>\n<li><code>title.show : true</code> ：是否显示标题组件，默认 true</li>\n<li><code>title. text : ''</code> ：主标题文本，支持使用  <code>\\n</code>  换行。</li>\n<li><code>title. link : ''</code>  ：主标题文本超链接。</li>\n<li><code>title. textStyle : &#123;&#125;</code> ：用于设置主标题的字体\n<ul>\n<li><code>color : '#333'</code>  ：主标题文字颜色</li>\n<li><code>fontStyle : 'normal'</code> ：字体</li>\n<li><code> fontWeight : 'bolder'</code> ：字体粗细</li>\n<li><code>fontSize</code> ：字体大小</li>\n<li><code>lineHeight</code> ：行高</li>\n<li>后面还有很多，都是一些设置文本的参数，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lY2hhcnRzLmFwYWNoZS5vcmcvemgvb3B0aW9uLmh0bWwjdGl0bGUudGV4dFN0eWxl\">可见官网</span></li>\n</ul>\n</li>\n<li><code>padding</code> ：内边距</li>\n<li><code>left/right</code> ：距容器左 / 右侧的距离</li>\n<li><code>top/bottom</code> ：距容器上 / 下侧的距离.</li>\n<li><code>backgroundColor : ''</code> ：标题背景色</li>\n<li><code>borderWidth</code> ：边框线宽</li>\n<li><code>shadowColor</code> ：阴影颜色</li>\n</ul>\n<h6 id=\"legend-123125\"><a class=\"anchor\" href=\"#legend\">#</a>  <code>legend : &#123;&#125;</code></h6>\n<p>用于设置图例的组件。下图框着的即为图例：</p>\n<p><img data-src=\"/2021/05/19/note/%E5%89%8D%E7%AB%AF/echarts/C:%5CUsers%5CAdministrator.DESKTOP-R00PN9V%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210427201515075.png\" alt=\"image-20210427201515075\"></p>\n<ul>\n<li><code>type : ''</code> ： <code>plain</code>  表示普通图例。缺省就是普通图例。 <code>scroll</code>  表示可滚动翻页的图例。当图例数量较多时可以使用。</li>\n<li><code>show</code> ：是否显示</li>\n<li><code>left/right/top/bottom : ''</code> ：距容器的距离，可以是 20 这样的<strong>像素值</strong>，也可是 <code>20%</code>  这样的<strong>百分比</strong></li>\n<li><code>width/height : ''</code> ：整体宽高，像素值为单位</li>\n<li><code>orient : ''</code> ：布局朝向， <code>horizontal</code>  或 <code>vertical</code></li>\n<li><code>align : ''</code> ：对其方式， <code>auto</code> 、 <code>left</code> 、 <code>right</code></li>\n<li><code>padding</code> ：内边距</li>\n<li><code>itemGap</code> ：每项之间的间隔</li>\n<li><code>itemWidth/itemHeight</code> ：每项的宽高</li>\n<li><code>itemStyle : &#123;&#125;</code> ：图例样式\n<ul>\n<li><code>color</code> ：图例颜色，细节见<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lY2hhcnRzLmFwYWNoZS5vcmcvemgvb3B0aW9uLmh0bWwjbGVnZW5kLnR5cGU=\">官网文档</span></li>\n<li><code>borderColor</code> ：描边颜色</li>\n<li><code>borderWidth</code> ：边框</li>\n<li><code>shadowColor</code> ：阴影颜色</li>\n<li><code>shadowOffsetX/Y</code> ：阴影偏移距离</li>\n</ul>\n</li>\n<li><code>lineStyle : &#123;&#125;</code> ：引线的样式，细节<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lY2hhcnRzLmFwYWNoZS5vcmcvemgvb3B0aW9uLmh0bWwjbGVnZW5kLnR5cGU=\">官网文档</span></li>\n<li><code>textStyle : &#123;&#125;</code> ：字体样式，和 <code>title</code>  的差不多，细节<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lY2hhcnRzLmFwYWNoZS5vcmcvemgvb3B0aW9uLmh0bWwjbGVnZW5kLnR5cGU=\">官网文档</span></li>\n<li><code>icon: ''</code> ：图例图标，可以引入图片的 url</li>\n</ul>\n<h6 id=\"grid-123125\"><a class=\"anchor\" href=\"#grid\">#</a>  <code>grid : &#123;&#125;</code> ：</h6>\n<p>直角坐标系内绘网格，，细节<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lY2hhcnRzLmFwYWNoZS5vcmcvemgvb3B0aW9uLmh0bWwjZ3JpZA==\">官网文档</span></p>\n<h6 id=\"xaxisyaxis-123125\"><a class=\"anchor\" href=\"#xaxisyaxis\">#</a>  <code>xAxis/yAxis : &#123;&#125;</code> ：</h6>\n<p>横坐标，多于两个 x 轴需要通过配置 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9lY2hhcnRzLmFwYWNoZS5vcmcvemgvb3B0aW9uLmh0bWwjeEF4aXMub2Zmc2V0\">offset</span> 属性防止同个位置多个 x 轴的重叠。饼图没有此参数</p>\n<ul>\n<li>\n<p><code>data : []</code> ：类目数据，一般以数组形式引入，如</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'周一'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'周二'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'周三'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'周四'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'周五'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'周六'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'周日'</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>或</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> list<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'周一'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'周二'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'周三'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'周四'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'周五'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'周六'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'周日'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>data<span class=\"token operator\">:</span> list</pre></td></tr></table></figure><p>当然也可以单独对每个类目进行样式设置，如</p>\n<pre><code>data: [&#123;\n    value: '周一',\n    // 突出周一\n    textStyle: &#123;\n        fontSize: 20,\n        color: 'red'\n    &#125;\n&#125;, '周二', '周三', '周四', '周五', '周六', '周日']\n</code></pre>\n<ul>\n<li><code>value</code> ：类目的名称，用于选定</li>\n<li><code>textStyle</code> ：文本样式设置</li>\n</ul>\n</li>\n<li>\n<p><code>show</code> ：是否显示</p>\n</li>\n<li>\n<p><code>position : ''</code> ：x 轴位置， <code>top</code>  或 <code>bottom</code></p>\n</li>\n<li>\n<p><code>offset</code> ：x 轴相对于默认位置的偏移度</p>\n</li>\n<li>\n<p><code>type : ''</code> ：坐标轴类型。如 <code>time</code>  时间轴，适用于连续的时序数据，细节见<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lY2hhcnRzLmFwYWNoZS5vcmcvemgvb3B0aW9uLmh0bWwjeEF4aXM=\">官网文档</span></p>\n</li>\n<li>\n<p><code>name : ''</code> ：坐标轴名称</p>\n</li>\n<li>\n<p><code>nameTextStyle : &#123;&#125;</code> ：名称文本显示样式</p>\n</li>\n<li>\n<p><code>min/max</code> ：刻度最小 / 最大值</p>\n</li>\n<li>\n<p><code>minInterval/maxInterval</code> ：刻度最小 / 最大间隔</p>\n</li>\n<li>\n<p><code>axisLine : &#123;&#125;</code> ：轴线相关设置</p>\n</li>\n<li>\n<p><code>axisTick : &#123;&#125;</code> ：刻度相关设置</p>\n</li>\n</ul>\n<h6 id=\"tooltip-123125\"><a class=\"anchor\" href=\"#tooltip\">#</a>  <code>tooltip : &#123;&#125; </code> ：</h6>\n<p>提示框组件，如下。当鼠标放上去时，显示出信息的功能</p>\n<p><img data-src=\"/2021/05/19/note/%E5%89%8D%E7%AB%AF/echarts/C:%5CUsers%5CAdministrator.DESKTOP-R00PN9V%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210427205353984.png\" alt=\"image-20210427205353984\"></p>\n<ul>\n<li>\n<p><code>trigger : ''</code> ：触发类型（鼠标放哪触发）。 <code>item</code>  图形触发，一般用于饼图。 <code>axis</code>  坐标轴触发，一般用于柱形图</p>\n</li>\n<li>\n<p><code>formatter : ''</code> ：提示框浮层内容格式器。模板变量有  <code>&#123;a&#125;</code> ,  <code>&#123;b&#125;</code> ， <code>&#123;c&#125;</code> ， <code>&#123;d&#125;</code> ， <code>&#123;e&#125;</code> ，分别表示系列名，数据名，数据值等。</p>\n<ul>\n<li>折线（区域）图、柱状（条形）图、K 线图 :  <code>&#123;a&#125;</code> （系列名称）， <code>&#123;b&#125;</code> （类目值）， <code>&#123;c&#125;</code> （数值）,  <code>&#123;d&#125;</code> （无）</li>\n<li>散点图（气泡）图 :  <code>&#123;a&#125;</code> （系列名称）， <code>&#123;b&#125;</code> （数据名称）， <code>&#123;c&#125;</code> （数值数组）,  <code>&#123;d&#125;</code> （无）</li>\n<li>地图 :  <code>&#123;a&#125;</code> （系列名称）， <code>&#123;b&#125;</code> （区域名称）， <code>&#123;c&#125;</code> （合并数值）,  <code>&#123;d&#125;</code> （无）</li>\n<li>饼图、仪表盘、漏斗图:  <code>&#123;a&#125;</code> （系列名称）， <code>&#123;b&#125;</code> （数据项名称）， <code>&#123;c&#125;</code> （数值）,  <code>&#123;d&#125;</code> （百分比）</li>\n</ul>\n<p><em>该图片示例如下</em></p>\n<pre><code>formatter: &quot;&#123;a&#125; &lt;br/&gt;&#123;b&#125; : &#123;c&#125; (&#123;d&#125;%)\n</code></pre>\n</li>\n</ul>\n<h6 id=\"color\"><a class=\"anchor\" href=\"#color\">#</a>  <code>color : ['','',...]</code></h6>\n<p>调色板颜色</p>\n<h6 id=\"series-123125\"><a class=\"anchor\" href=\"#series\">#</a>  <code>series : [&#123;&#125;]</code></h6>\n<p>核心配置组件，每个 {} 表示一张表（每个 echarts 实例可以有多张表）。并且_<em><strong>不同类型的表 series 的用法也各不相同</strong></em>_。</p>\n<ul>\n<li>\n<p>饼图： <code>&#123;type:'pie'&#125;</code></p>\n<ul>\n<li>\n<p><code>data : [&#123;&#125;,&#123;&#125;,...]</code> ：图的数据内容。<strong>饼图的 <code>data</code>  必须是 <code>key:value</code>  的数组</strong>。如</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span>value<span class=\"token operator\">:</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'rose 1'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span>value<span class=\"token operator\">:</span> <span class=\"token number\">38</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'rose 2'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span>value<span class=\"token operator\">:</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'rose 3'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span>value<span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'rose 4'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span>value<span class=\"token operator\">:</span> <span class=\"token number\">28</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'rose 5'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span>value<span class=\"token operator\">:</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'rose 6'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span>value<span class=\"token operator\">:</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'rose 7'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span>value<span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'rose 8'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>动态数组可以以如下方式创建，其中 nums 是 map 表，num 是新数组，到时候直接 <code>data:num</code>  即可</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>nums<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token punctuation\">,</span> key</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>          <span class=\"token keyword\">var</span> obj<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>          obj<span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span>key<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>          obj<span class=\"token punctuation\">.</span>value<span class=\"token operator\">=</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>          num<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>radius : [,]</code> ：饼图内外径。可以直接 <code>20</code>  像素值，也可 <code>&quot;70%&quot;</code>  相对于容器宽高（较小那个）的百分比</p>\n</li>\n<li>\n<p><code>center : [,]</code> ：圆心坐标。像素值和百分比均可</p>\n</li>\n<li>\n<p><code>roseType</code> ：是否展示为南丁格尔图，</p>\n<p><code>radius</code>  扇区圆心角展现数据的百分比，半径展现数据的大小。</p>\n<p><code>area</code>  所有扇区圆心角相同，仅通过半径展现数据大小。</p>\n</li>\n<li>\n<p><code>name : ''</code> ：系列名称，可用于 <code>tooltip</code>  展示</p>\n</li>\n<li>\n<p><code>label : &#123;&#125;</code> ：文本标签。如下</p>\n<p><img data-src=\"/2021/05/19/note/%E5%89%8D%E7%AB%AF/echarts/C:%5CUsers%5CAdministrator.DESKTOP-R00PN9V%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210427214407174.png\" alt=\"image-20210427214407174\"></p>\n<ul>\n<li><code>fontSize</code> ：字体大小。</li>\n<li>其他的详见<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lY2hhcnRzLmFwYWNoZS5vcmcvemgvb3B0aW9uLmh0bWwjc2VyaWVzLXBpZS5sYWJlbA==\">官方文档</span></li>\n</ul>\n</li>\n<li>\n<p><code>labelLine : &#123;&#125;</code> ：标签引线，详见<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lY2hhcnRzLmFwYWNoZS5vcmcvemgvb3B0aW9uLmh0bWwjc2VyaWVzLXBpZS5sYWJlbA==\">官方文档</span></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-图表创建\"><a class=\"anchor\" href=\"#5-图表创建\">#</a> 5. 图表创建</h3>\n<h4 id=\"51-饼图\"><a class=\"anchor\" href=\"#51-饼图\">#</a> 5.1 饼图</h4>\n<ul>\n<li>\n<p>动态设置数据</p>\n<p>echarts 都是通过<strong>数组</strong>批量设置数据，但饼图没有横轴 axis，因此不能单纯的以 <code>int[]</code>  设置数据。</p>\n<ul>\n<li>\n<p>当数据存在 map 中时</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> data<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>map<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token punctuation\">,</span> key</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>          <span class=\"token keyword\">var</span> obj<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>          obj<span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span>key<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>          obj<span class=\"token punctuation\">.</span>value<span class=\"token operator\">=</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>          data<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>然后在 series 中设置 data 即可</p>\n</li>\n</ul>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://nitgod1996.com/2021/05/19/note/%E5%89%8D%E7%AB%AF/CSS/",
            "url": "https://nitgod1996.com/2021/05/19/note/%E5%89%8D%E7%AB%AF/CSS/",
            "title": "CSS笔记及参考手册",
            "date_published": "2021-05-19T11:22:41.944Z",
            "content_html": "<h1 id=\"一-基本信息\"><a class=\"anchor\" href=\"#一-基本信息\">#</a> 一、 基本信息</h1>\n<h2 id=\"1-语法\"><a class=\"anchor\" href=\"#1-语法\">#</a> 1. 语法</h2>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">选择器</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token property\">属性名</span><span class=\"token punctuation\">:</span>属性值<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token property\">属性名2</span><span class=\"token punctuation\">:</span>属性值<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">/* 注释 */</span></pre></td></tr></table></figure><h2 id=\"2-定义\"><a class=\"anchor\" href=\"#2-定义\">#</a> 2. 定义</h2>\n<ul>\n<li>在 <code>html</code>  中以 <code>style</code>  标签定义</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\"></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token selector\">div</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token property\">color</span><span class=\"token punctuation\">:</span>blue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ul>\n<li>在标签体内通过属性 <code>style</code>  对单个标签定义</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sty<span class=\"token punctuation\">\"</span></span> <span class=\"token style-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token style language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 30px<span class=\"token punctuation\">;</span><span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 30px<span class=\"token punctuation\">;</span><span class=\"token property\">background</span><span class=\"token punctuation\">:</span> red</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>CSS<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ul>\n<li>在外部.CSS 文件定义，在 <code>html</code>  中通过 <code>link</code>  标签引入</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>css/data.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr></table></figure><h1 id=\"二-选择器\"><a class=\"anchor\" href=\"#二-选择器\">#</a> 二、 选择器</h1>\n<table>\n<thead>\n<tr>\n<th>选择器</th>\n<th>示例</th>\n<th>示例说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://www.runoob.com/cssref/sel-class.html\">.<em>class</em></a></td>\n<td>.intro</td>\n<td>选择所有 class=&quot;intro&quot; 的元素</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/cssref/sel-id.html\">#<em>id</em></a></td>\n<td>#firstname</td>\n<td>选择所有 id=&quot;firstname&quot; 的元素</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvc2VsLWFsbC5odG1s\">*</span></td>\n<td>*</td>\n<td>选择所有元素</td>\n</tr>\n<tr>\n<td><em><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvc2VsLWVsZW1lbnQuaHRtbA==\">element</span></em></td>\n<td>p</td>\n<td>选择所有 &lt;p&gt; 元素</td>\n</tr>\n<tr>\n<td><em><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvc2VsLWVsZW1lbnQtY29tbWEuaHRtbA==\">element,element</span></em></td>\n<td>div,p</td>\n<td>选择所有 &lt;div&gt; 元素和 &lt; p &gt; 元素</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/cssref/sel-element-element.html\"><em>element</em> <em>element</em></a></td>\n<td>div p</td>\n<td>选择 &lt;div&gt; 元素内的所有 &lt; p &gt; 元素</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/cssref/sel-element-gt.html\"><em>element</em>&gt;<em>element</em></a></td>\n<td>div&gt;p</td>\n<td>选择所有父级是 &lt;div&gt; 元素的 &lt;p&gt; 元素</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/cssref/sel-element-pluss.html\"><em>element</em>+<em>element</em></a></td>\n<td>div+p</td>\n<td>选择所有紧接着 &lt;div&gt; 元素之后的 &lt; p &gt; 元素</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvc2VsLWJlZm9yZS5odG1s\">:before</span></td>\n<td>p:before</td>\n<td>在每个 &lt;p&gt; 元素之前插入内容</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvc2VsLWFmdGVyLmh0bWw=\">:after</span></td>\n<td>p:after</td>\n<td>在每个 &lt;p&gt; 元素之后插入内容</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvc2VsLWZpcnN0Y2hpbGQuaHRtbA==\">:first-child</span></td>\n<td>p:first-child</td>\n<td>指定只有当 &lt;p&gt; 元素是其父级的第一个子级的样式。</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvc2VsLWxhc3QtY2hpbGQuaHRtbA==\">:last-child</span></td>\n<td>p:last-child</td>\n<td>选择每个 p 元素是其父级的最后一个子级。</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/cssref/sel-nth-child.html\">:nth-child(<em>n</em>)</a></td>\n<td>p:nth-child(2)</td>\n<td>选择每个 p 元素是其父级的第二个子元素</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/cssref/sel-nth-last-child.html\">:nth-last-child(<em>n</em>)</a></td>\n<td>p:nth-last-child(2)</td>\n<td>选择每个 p 元素的是其父级的第二个子元素，从最后一个子项计数</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>id 选择器  ：通过 id 属性定位容器。语法是 #idName</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>id1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>id选择器1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">#id1</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> deepskyblue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>类选择器：通过 class 属性定位容器。语法是.className</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>标题居中<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">.center</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span>center<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token comment\">/* 定位说有 class=\"center\" 的标签 */</span></pre></td></tr></table></figure><p>&lt;font color=red&gt; 注：类选择器以 &lt;/font&gt;&lt;font size=20 color=red&gt;<strong> 空格</strong> &lt;/font&gt;&lt;font color=red &gt; 为结束符，即第一个单词匹配成功即可。&lt;/font&gt;</p>\n<p>如 <code>class=&quot;intro demo&quot;</code>  亦可被 <code>.intro</code>  选择到。但 <code>class=&quot;intro-demo&quot;</code>  就不行</p>\n<ul>\n<li>element 选择器：通过标签定位容器。语法是直接 label {}</li>\n</ul>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">div</span><span class=\"token punctuation\">&#123;</span><span class=\"token comment\">/* 所有 div*/</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span>red<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token selector\">p</span><span class=\"token punctuation\">&#123;</span><span class=\"token comment\">/* 所有 p 标签 */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span>white<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>\n<p>* 选择器：对所有容器进行 <code>CSS</code>  设置，通常用于初始化</p>\n</li>\n<li>\n<p><code>:before/:after</code>  选择器：在容器前 / 后插入内容，相当于在该位置创建一个新的容器并插入</p>\n</li>\n<li>\n<p>并列选择器：同时选中多个选择器，用 <code>,</code>  隔开</p>\n</li>\n<li>\n<p>子选择器：选择指定<strong>父标签</strong>的指定<strong>子标签</strong>，用 <code>空格</code> 隔开。</p>\n<ul>\n<li>父子选择器可以不同，如 <code>div .center #id1</code> ，表示 <code>div</code>  子元素中 <code>class=center</code>  的子元素中 <code>id=id1</code>  的元素</li>\n</ul>\n</li>\n<li>\n<p>位数选择器：匹配所有的指定特征的第 n 个标签。选择器：位数选择器</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>p1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>p2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>p3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>section</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>p1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>p2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>p3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>section</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">&lt;!-- 如上，同一个父标签下相同类型标识（同一标签、id、class 都可）的元素，称为一个组。此例中有 2 个 p 组 --></span></pre></td></tr></table></figure><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvc2VsLWZpcnN0Y2hpbGQuaHRtbA==\">:first-child</span>：各组下的第 1 个标签。如 <code>.box:first-child</code>  表示每个 <code>class='box'</code>  组下的第一个标签</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvc2VsLWxhc3QtY2hpbGQuaHRtbA==\">:last-child</span>：最后一个标签</li>\n<li><a href=\"https://www.runoob.com/cssref/sel-nth-child.html\">:nth-child(<em>n</em>)</a>：各组第 n 个标签</li>\n<li><a href=\"https://www.runoob.com/cssref/sel-nth-last-child.html\">:nth-last-child(<em>n</em>)</a>：各组倒数第 n 个标签</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"三-属性\"><a class=\"anchor\" href=\"#三-属性\">#</a> 三、 属性</h1>\n<p>在选择器内通过属性定义样式</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">#id1</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> deepskyblue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">/*color 便是属性 */</span></pre></td></tr></table></figure><h2 id=\"1-常见属性\"><a class=\"anchor\" href=\"#1-常见属性\">#</a> 1. 常见属性</h2>\n<h3 id=\"11-background-背景\"><a class=\"anchor\" href=\"#11-background背景\">#</a> 1.1 background 背景：</h3>\n<p>设置容器背景（简写模式），直接在后面填写各类型参数。也可分别设置每个背景值。一般都是简写</p>\n<p><code>background:bg-color bg-image position/bg-size bg-repeat bg-origin bg-clip bg-attachment initial|inherit;</code></p>\n<ul>\n<li><em><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvcHItYmFja2dyb3VuZC1jb2xvci5odG1s\">background-color</span></em>：背景颜色。\n<ul>\n<li><code>yellow</code></li>\n<li><code>#00ff00</code></li>\n<li><code>rgb(255,0,255)</code></li>\n</ul>\n</li>\n<li><em><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvcHItYmFja2dyb3VuZC1wb3NpdGlvbi5odG1s\">background-position</span></em>：背景图像的位置。以左上点定位，横轴 / 纵轴分别定位。\n<ul>\n<li><code>left top</code> ：第一个是水平位置， <code>left</code>   <code>right</code>   <code>center</code> 。第二个是垂直位置 <code>top</code>   <code>bottom</code>   <code>center</code></li>\n<li><code>x% y%</code> ：水平百分比，垂直百分比。<em><strong>相对于父容器的尺寸百分比</strong></em></li>\n<li><code>xpos ypos</code> ： <code>pos</code>  是单位，可以是 <code>px</code>  像素，也可以是 <code>rem</code>  等其他单位</li>\n<li><code>inherit</code> ：继承自父元素</li>\n</ul>\n</li>\n<li><em><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvY3NzMy1wci1iYWNrZ3JvdW5kLXNpemUuaHRtbA==\">background-size</span></em>：背景图片的大小。也是可以 <code>像素值</code> 或 <code>百分比</code></li>\n<li><em><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvcHItYmFja2dyb3VuZC1yZXBlYXQuaHRtbA==\">background-repeat</span></em>：当背景图较小时如何重复，一般设 <code>no-repeat</code>  不重复</li>\n<li><em><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvcHItYmFja2dyb3VuZC1pbWFnZS5odG1s\">background-image</span></em>\t指定要使用的<strong>一个或多个</strong>背景图像。 <code>url(图片的路径)</code></li>\n<li><em><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvY3NzMy1wci1iYWNrZ3JvdW5kLW9yaWdpbi5odG1s\">background-origin</span></em>：</li>\n<li><em><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvY3NzMy1wci1iYWNrZ3JvdW5kLWNsaXAuaHRtbA==\">background-clip</span></em></li>\n<li><em><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvcHItYmFja2dyb3VuZC1hdHRhY2htZW50Lmh0bWw=\">background-attachment</span></em> 设置背景图像是否固定或者随着页面的其余部分滚动。</li>\n</ul>\n<h3 id=\"12-text-文本\"><a class=\"anchor\" href=\"#12-text文本\">#</a> 1.2 text 文本：</h3>\n<p>文本属性，主要用于设置段落信息。如对齐方式、行高等</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvcHItdGV4dC1kaXJlY3Rpb24uaHRtbA==\">direction</span>：文本方向\n<ul>\n<li><code>ltr</code> \t默认。文本方向从左到右。</li>\n<li><code>rtl</code> \t文本方向从右到左。</li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvcHItdGV4dC1jb2xvci5odG1s\">color</span>：文本颜色</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvcHItZGltLWxpbmUtaGVpZ2h0Lmh0bWw=\">line-height</span>：行高\n<ul>\n<li><code>number</code> ：设置数字，此数字会与当前的字体尺寸相乘来设置行间距。</li>\n<li><code>length</code> ：设置固定的行间距。</li>\n<li><code>%</code> ：基于当前字体尺寸的百分比行间距。</li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvcHItdGV4dC10ZXh0LWFsaWduLmh0bWw=\">text-align</span>：对齐方式。 <code>left</code> 、 <code>right</code> 、 <code>center</code> 、 <code>justify</code> （两端对齐）</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvcHItcG9zLXZlcnRpY2FsLWFsaWduLmh0bWw=\">vertical-align</span>：垂直对齐方式</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvcHItdGV4dC13b3JkLXNwYWNpbmcuaHRtbA==\">word-spacing</span>：字间距</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3MvY3NzLXRleHQuaHRtbA==\">其他</span></li>\n</ul>\n<h3 id=\"13-font-字体\"><a class=\"anchor\" href=\"#13-font字体\">#</a> 1.3 font 字体：</h3>\n<p>设置字体。字体样式、大小、颜色等。简写如 <code> font:15px arial,sans-serif;</code> ，亦可单独设置</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvcHItZm9udC1mb250LXNpemUuaHRtbA==\">font-size</span>：字体大小</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvcHItZm9udC1mb250LXN0eWxlLmh0bWw=\">font-style</span>：字体样式。\n<ul>\n<li><code>italic</code> \t斜体，表示使用文字的斜体。</li>\n<li><code>oblique</code> \t倾斜，表示让没有斜体属性的文字倾斜。</li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvcHItZm9udC13ZWlnaHQuaHRtbA==\">font-weight</span>：字体粗细\n<ul>\n<li><code>bold</code> \t定义粗体字符。</li>\n<li><code>bolder</code> \t定义更粗的字符。</li>\n<li><code>lighter</code> \t定义更细的字符。</li>\n<li>直接数字定义</li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvcHItZm9udC1mb250LWZhbWlseS5odG1s\">font-family</span>：字体类型，如 <code>Times New Roman</code> ，也可导入外部字体，需要先用 <code>@font-face </code> 定义</li>\n</ul>\n<blockquote>\n<p>自定义字体，一般在网上下载好字体文件，引入即可。如下：</p>\n</blockquote>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> electronicFont<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>/font/DS-DIGIT.TTF<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"14-列表-ul-lo-li-属性\"><a class=\"anchor\" href=\"#14-列表ul-lo-li属性\">#</a> 1.4 列表 <code>ul</code> 、 <code>lo</code> 、 <code>li</code>  属性：</h3>\n<p>用于设置列表的属性，一般是列表项标志 <code>● 1.</code>  这种</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvcHItbGlzdC1zdHlsZS5odG1s\">list-style</span>：简写</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvcHItbGlzdC1zdHlsZS10eXBlLmh0bWw=\">list-style-type</span>：列表项标志类型\n<ul>\n<li><code>none</code> ：没有标志</li>\n<li><code>disc</code> \t默认。标记是实心圆</li>\n<li><code>circle</code> \t标记是空心圆。</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvcHItbGlzdC1zdHlsZS10eXBlLmh0bWw=\">更多</span></li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvcHItbGlzdC1zdHlsZS1pbWFnZS5odG1s\">list-style-image</span>：用图像作列表项标志 <code>url('sqpurple.gif')</code></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvcHItbGlzdC1zdHlsZS1wb3NpdGlvbi5odG1s\">list-style-position</span>：列表项标志的位置\n<ul>\n<li><code>inside</code> \t列表项目标记放在文本内。</li>\n<li><code>outside</code> \t默认值。位于文本外（左侧）。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"15-border-边框\"><a class=\"anchor\" href=\"#15-border边框\">#</a> 1.5 border 边框：</h3>\n<p>用于设置容器的边框线</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvcHItYm9yZGVyLmh0bWw=\">border</span>：简写属性，用于把针对四个边的属性设置在一个声明。如 <code>border:5px solid red;</code></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvcHItYm9yZGVyLXN0eWxlLmh0bWw=\">border-style</span>：设置线的样式，此属性可以有一到四个值。分别按↑、→、↓、←的顺序\n<ul>\n<li><code>dotted</code> \t定义点状</li>\n<li><code>dashed</code> \t定义虚线</li>\n<li><code>solid</code> \t定义实线。</li>\n<li><code>double</code> \t定义双线\n<ul>\n<li><strong>border-style:dotted solid double dashed;</strong>\n<ul>\n<li>上边框是点状</li>\n<li>右边框是实线</li>\n<li>下边框是双线</li>\n<li>左边框是虚线</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvcHItYm9yZGVyLXdpZHRoLmh0bWw=\">border-width</span>：边框线宽</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvcHItYm9yZGVyLWNvbG9yLmh0bWw=\">border-color</span>：颜色</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvcHItYm9yZGVyLWJvdHRvbS5odG1s\">border-bottom</span>：单独设置下边框的简写</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvcHItYm9yZGVyLWJvdHRvbS1jb2xvci5odG1s\">border-bottom-color</span>：下边框颜色...</li>\n<li>各边框都可各自定义</li>\n</ul>\n<h3 id=\"16-margin-外边距-padding-内边距\"><a class=\"anchor\" href=\"#16-margin外边距padding内边距\">#</a> 1.6 margin 外边距 /padding 内边距：</h3>\n<p>​\tmargin 也称页边距，与父元素的间距。padding 是与子元素的间距</p>\n<p><img data-src=\"https://www.runoob.com/wp-content/uploads/2013/08/VlwVi.png\" alt=\"img\"></p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvcHItbWFyZ2luLmh0bWw=\">margin</span>：同时设置四个间距\n<ul>\n<li><code>auto</code> \t浏览器计算下外边距。</li>\n<li><code>length</code> \t比如像素、厘米等。默认值是 0px。</li>\n<li><code>%</code> \t基于父元素的宽度的百分比</li>\n<li><code>inherit</code> \t继承父元素</li>\n</ul>\n</li>\n<li>margin-bottom\t设置元素的下外边距。</li>\n<li>margin-left\t设置元素的左外边距。</li>\n<li>margin-right\t设置元素的右外边距。</li>\n<li>margin-top\t设置元素的上外边距。</li>\n<li>padding：同上</li>\n</ul>\n<h3 id=\"17-display-显示\"><a class=\"anchor\" href=\"#17-display显示\">#</a> 1.7 display 显示：</h3>\n<ul>\n<li><code>display</code>  通常用于隐藏 / 按行显示 / 按列显示\n<ul>\n<li><code>none</code> ：隐藏所有组件。</li>\n<li><code>inline</code> ：显示为内联元素，元素前后没有换行符。<strong>不识别宽高设置</strong></li>\n<li><code>block</code> ：显示为块级元素，此元素前后会带有换行符。</li>\n<li><code>inline-block</code> ：显示为行内块元素</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>注意：当把父元素设置为 <code>inline</code> ，不会对子元素产生影响。所以如果父元素是 <code>inline</code>  而子元素是 <code>block</code> ，那么仍会换行。</p>\n</blockquote>\n<ul>\n<li><code>visibility</code>  也有隐藏功能\n<ul>\n<li><code>hidden</code> ：隐藏组件，但该隐藏仅仅隐藏显示，空间布局是不变的（即隐藏后仍有一块空白）</li>\n</ul>\n</li>\n</ul>\n<p>此处首先先明确一下内联元素（inline element）和块元素（block element）的概念。（一条标签如 &lt;div&gt; 即是一个元素）</p>\n<h4 id=\"171-内联元素\"><a class=\"anchor\" href=\"#171-内联元素\">#</a> 1.7.1 内联元素</h4>\n<p>​\t\t内联元素又名行内元素，和其对应的是块元素 (block element)，都是 html 规范中的概念。内联元素的显示，为了帮助理解，可以形象的称为 “文本模式”，即<strong>一个挨着一个，都在同一行按从左至右的顺序显示，不单独占一行</strong>。</p>\n<blockquote>\n<p>任何不是块级元素的可见元素都是内联元素。其表现的特性是 “行布局” 形式，这里的 “行布局” 的意思就是说其表现形式始终以行进行显示。</p>\n</blockquote>\n<p>内联元素有以下特点：</p>\n<ol>\n<li>和其他元素都在一行上，遇到父级元素边界会自动换行</li>\n<li>高、行高以及内外边距都<strong>不可以改变</strong></li>\n<li>宽度与内容一样宽，且<strong>不可改变</strong></li>\n<li>行内元素只能容纳文本或者其他行内元素</li>\n<li>对于行内元素，需要注意的是：设置宽度 width 无效，设置高度无效，可以通过设置 line-height 来设置，设置 margin 只有左右有效，上下无效，设置 padding 只有左右有效，上下无效</li>\n</ol>\n<p>常见的内联元素有：</p>\n<ul>\n<li>a – 锚点</li>\n<li>abbr – 缩写</li>\n<li>acronym – 首字</li>\n<li>b – 粗体 (不推荐)</li>\n<li>bdo – bidi override</li>\n<li>big – 大字体</li>\n<li>br – 换行</li>\n<li>cite – 引用</li>\n<li>code – 计算机代码 (在引用源码的时候需要)</li>\n<li>dfn – 定义字段</li>\n<li>em – 强调</li>\n<li>font – 字体设定 (不推荐)</li>\n<li>i – 斜体</li>\n<li>img – 图片</li>\n<li>input – 输入框</li>\n<li>kbd – 定义键盘文本</li>\n<li>label – 表格标签</li>\n<li>q – 短引用</li>\n<li>s – 中划线 (不推荐)</li>\n<li>samp – 定义范例计算机代码</li>\n<li>select – 项目选择</li>\n<li>small – 小字体文本</li>\n<li>span – 常用内联容器，定义文本内区块</li>\n<li>strike – 中划线</li>\n<li>strong – 粗体强调</li>\n<li>sub – 下标</li>\n<li>sup – 上标</li>\n<li>textarea – 多行文本输入框</li>\n<li>tt – 电传文本</li>\n<li>u – 下划线</li>\n</ul>\n<h4 id=\"172-块元素\"><a class=\"anchor\" href=\"#172-块元素\">#</a> 1.7.2 块元素</h4>\n<p>块元素和内联元素的基本差异是块元素一般都从新行开始，相邻的块级元素将会在不同行显示。</p>\n<p>块级元素的特点：</p>\n<ol>\n<li>独霸一行，总是在新行上开始</li>\n<li>宽度缺省是它父级元素的 100%，除非设定一个宽度</li>\n<li>高度、行高、外边距、内边距都可以设置</li>\n<li>可以容纳其他内联元素或者其他块元素</li>\n</ol>\n<p>以下是常见的块级元素：</p>\n<ul>\n<li>address – 地址</li>\n<li>blockquote – 块引用</li>\n<li>center – 举中对齐块</li>\n<li>dir – 目录列表</li>\n<li>div – 常用块级容易，也是 CSS layout 的主要标签</li>\n<li>dl – 定义列表</li>\n<li>fieldset – form 控制组</li>\n<li>form – 交互表单</li>\n<li>h1~h6 – 标题</li>\n<li>hr – 水平分隔线</li>\n<li>isindex – input prompt</li>\n<li>menu – 菜单列表</li>\n<li>noframes – frames 可选内容，（对于不支持 frame 的浏览器显示此区块内容</li>\n<li>noscript – 可选脚本内容（对于不支持 script 的浏览器显示此内容）</li>\n<li>ol – 有序表单</li>\n<li>p – 段落</li>\n<li>pre – 格式化文本</li>\n<li>table – 表格</li>\n<li>ul – 无序列表</li>\n</ul>\n<h4 id=\"173-行内块元素\"><a class=\"anchor\" href=\"#173-行内块元素\">#</a> 1.7.3 行内块元素</h4>\n<p>inline-block。整合了块元素和内联元素的优点，有以下特点：</p>\n<ol>\n<li>元素排列在一行</li>\n<li>宽度默认由内容决定</li>\n<li>元素间默认有间距</li>\n<li>支持宽高、外边距、内边距的所有样式的设置</li>\n</ol>\n<h3 id=\"18-position-定位\"><a class=\"anchor\" href=\"#18-position定位\">#</a> 1.8 position 定位：</h3>\n<p>​\t\t指定了元素的定位类型。通常与 <code>left</code>  等定位属性配合使用</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvcHItY2xhc3MtcG9zaXRpb24uaHRtbA==\">position</span>\n<ul>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3MvY3NzLXBvc2l0aW9uaW5nLmh0bWwjcG9zaXRpb24tc3RhdGlj\">static</span>：无特殊定位，遵循正常文档流，<strong>忽略 left、top、right、bottom 和 z-index 属性</strong></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3MvY3NzLXBvc2l0aW9uaW5nLmh0bWwjcG9zaXRpb24tcmVsYXRpdmU=\">relative</span>：相对于正常位置 (static) 移动， <code>left</code>  等属性设置的是移动值。</p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3MvY3NzLXBvc2l0aW9uaW5nLmh0bWwjcG9zaXRpb24tZml4ZWQ=\">fixed</span>：相对浏览器窗口固定，即使窗口滚动也不会动。<strong>适用于做浮窗</strong></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3MvY3NzLXBvc2l0aW9uaW5nLmh0bWwjcG9zaXRpb24tYWJzb2x1dGU=\">absolute</span>：绝对定位，其实是相对于<strong>父元素</strong>的坐标， <code>left</code>  等属性设置的是坐标值。</p>\n<ol>\n<li>\n<p>设置了 absolute 的元素如果存在有祖先元素设置了 position 属性为 relative 或者 absolute，则这时元素的定位对象为此已设置 position 属性的祖先元素。</p>\n</li>\n<li>\n<p>如果并没有设置了 position 属性的祖先元素，则此时相对于 body 进行定位。</p>\n</li>\n</ol>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3MvY3NzLXBvc2l0aW9uaW5nLmh0bWwjcG9zaXRpb24tc3RpY2t5\">sticky</span>：粘性定位，设置一个阈值，相对于浏览器窗口不会超出此阈值。可见<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3MvY3NzLXBvc2l0aW9uaW5nLmh0bWwjcG9zaXRpb24tc3RpY2t5\">示例</span></p>\n</li>\n</ul>\n</li>\n<li><code>left</code> 、 <code>right</code> 、 <code>bottom</code> 、 <code>top</code> ：设置距左、右、下、上的距离\n<ul>\n<li><code>auto</code></li>\n<li><code>length</code> ： <code>px</code>  或 <code>rem</code>  或其他</li>\n<li><code>%</code></li>\n<li><code>inherit</code></li>\n</ul>\n</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvcHItcG9zLXotaW5kZXguaHRtbA==\">z-index</span>：堆叠顺序。最大的在最上面</li>\n</ul>\n<h3 id=\"19-overflow-溢出设置\"><a class=\"anchor\" href=\"#19-overflow溢出设置\">#</a> 1.9 overflow 溢出设置：</h3>\n<p>​\t定义了当元素溢出容器时如何显示，如</p>\n<p><img data-src=\"/2021/05/19/note/%E5%89%8D%E7%AB%AF/CSS/C:%5CUsers%5CAdministrator.DESKTOP-R00PN9V%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210429162249569.png\" alt=\"image-20210429162249569\"></p>\n<ul>\n<li><code>overflow</code>\n<ul>\n<li><code>visible</code> \t默认值。内容不会被修剪，会呈现在<strong>元素框之外</strong>。</li>\n<li><code>hidden</code> \t内容会被修剪，并且其余内容是<strong>不可见</strong>的。</li>\n<li><code>scroll</code> \t内容会被修剪，但是浏览器会显示<strong>滚动条</strong>以便查看其余的内容。</li>\n<li><code>auto</code> \t如果内容被修剪，则浏览器会显示<strong>滚动条</strong>以便查看其余的内容。</li>\n<li><code>inherit</code> \t继承</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2-不常见属性\"><a class=\"anchor\" href=\"#2-不常见属性\">#</a> 2. 不常见属性</h2>\n<h5 id=\"动画\"><a class=\"anchor\" href=\"#动画\">#</a> 动画：</h5>\n<p>​\t用于设置元素动画。需要先定义动画规则 <code>@keyframes</code> （关键帧）</p>\n<ul>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvY3NzMy1wci1hbmltYXRpb24uaHRtbA==\">animation</span>：简写，语法如下</p>\n<blockquote>\n<p>animation: name duration timing-function delay iteration-count direction fill-mode play-state;。</p>\n</blockquote>\n<p>示例： <code>animation:mymove 5s infinite;</code></p>\n</li>\n<li>\n<p><em><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvY3NzMy1wci1hbmltYXRpb24tbmFtZS5odG1s\">animation-name</span></em>：指定要绑定到选择器的动画名称</p>\n</li>\n<li>\n<p><em><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvY3NzMy1wci1hbmltYXRpb24tZHVyYXRpb24uaHRtbA==\">animation-duration</span></em>：动画指定需要多少秒或毫秒完成。即一轮动画多少秒，0 表示不执行动画</p>\n</li>\n<li>\n<p><em><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvY3NzMy1wci1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uLmh0bWw=\">animation-timing-function</span></em>：设置动画将如何完成一个周期</p>\n<ul>\n<li><code>linear</code> \t动画从头到尾的速度是相同的。</li>\n<li><code>ease</code> \t默认。动画以低速开始，然后加快，在结束前变慢。</li>\n<li><code>ease-in</code> \t动画以低速开始。</li>\n<li><code>ease-out</code> \t动画以低速结束。</li>\n<li><code>ease-in-out</code> \t动画以低速开始和结束。</li>\n<li><code>cubic-bezier(n,n,n,n)</code> \t自定义。在 cubic-bezier 函数中自己的值。可能的值是从 0 到 1 的数值。</li>\n</ul>\n</li>\n<li>\n<p><em><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvY3NzMy1wci1hbmltYXRpb24tZGVsYXkuaHRtbA==\">animation-delay</span></em>：设置动画在启动前的延迟间隔。</p>\n</li>\n<li>\n<p><em><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvY3NzMy1wci1hbmltYXRpb24taXRlcmF0aW9uLWNvdW50Lmh0bWw=\">animation-iteration-count</span></em>：播放次数</p>\n<ul>\n<li><code>n</code> \t一个数字，定义应该播放多少次动画</li>\n<li><code>infinite</code> \t无限循环</li>\n</ul>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9jc3NyZWYvY3NzMy1wci1hbmltYXRpb24uaHRtbA==\">更多</span></p>\n</li>\n</ul>\n<blockquote>\n<p>定义动画规则 <code>@keyframes</code> （关键帧）</p>\n</blockquote>\n<p>如下</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> mymove</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token selector\">from</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">top</span><span class=\"token punctuation\">:</span>0px<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token selector\">to</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">top</span><span class=\"token punctuation\">:</span>200px<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>@-webkit-keyframes mymove <span class=\"token comment\">/* Safari and Chrome */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token selector\">from</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">top</span><span class=\"token punctuation\">:</span>0px<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token selector\">to</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">top</span><span class=\"token punctuation\">:</span>200px<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "笔记",
                "前端",
                "前端",
                "CSS"
            ]
        },
        {
            "id": "https://nitgod1996.com/2021/05/19/note/%E5%89%8D%E7%AB%AF/html/",
            "url": "https://nitgod1996.com/2021/05/19/note/%E5%89%8D%E7%AB%AF/html/",
            "title": "html常用功能手册",
            "date_published": "2021-05-19T08:29:28.979Z",
            "content_html": "<h1 id=\"一-简介\"><a class=\"anchor\" href=\"#一-简介\">#</a> 一、 简介</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>菜鸟教程(runoob.com)<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>我的第一个标题<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>我的第一个段落。<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ul>\n<li><strong>&lt;!DOCTYPE html&gt;</strong> 声明为 HTML5 文档</li>\n<li><strong>&lt;html&gt;</strong> 元素是 HTML 页面的根元素</li>\n<li><strong>&lt;head&gt;</strong> 元素包含了文档的元（meta）数据，如 <strong>&lt;meta charset=&quot;utf-8&quot;&gt;</strong> 定义网页编码格式为 <strong>utf-8</strong>。</li>\n<li><strong>&lt;title&gt;</strong> 元素描述了文档的标题</li>\n<li><strong>&lt;body&gt;</strong> 元素包含了可见的页面内容</li>\n<li><strong>&lt;h1&gt;</strong> 元素定义一个大标题</li>\n<li><strong>&lt;p&gt;</strong> 元素定义一个段落</li>\n</ul>\n<h1 id=\"二-标签\"><a class=\"anchor\" href=\"#二-标签\">#</a> 二、 标签</h1>\n<h2 id=\"1-标签类型\"><a class=\"anchor\" href=\"#1-标签类型\">#</a> 1. 标签类型</h2>\n<p>标签，也称元素，分为内联元素和块级元素。</p>\n<p>块级元素会换行，而内联元素不会，可以通过 CSS 的 <code>display</code>  属性修改设置。</p>\n<h3 id=\"11-内联元素\"><a class=\"anchor\" href=\"#11-内联元素\">#</a> 1.1 内联元素</h3>\n<p>​\t\t内联元素又名行内元素，和其对应的是块元素 (block element)，都是 html 规范中的概念。内联元素的显示，为了帮助理解，可以形象的称为 “文本模式”，即<strong>一个挨着一个，都在同一行按从左至右的顺序显示，不单独占一行</strong>。</p>\n<blockquote>\n<p>任何不是块级元素的可见元素都是内联元素。其表现的特性是 “行布局” 形式，这里的 “行布局” 的意思就是说其表现形式始终以行进行显示。</p>\n</blockquote>\n<p>内联元素有以下特点：</p>\n<ol>\n<li>和其他元素都在一行上，遇到父级元素边界会自动换行</li>\n<li>高、行高以及内外边距都<strong>不可以改变</strong></li>\n<li>宽度与内容一样宽，且<strong>不可改变</strong></li>\n<li>行内元素只能容纳文本或者其他行内元素</li>\n<li>对于行内元素，需要注意的是：设置宽度 width 无效，设置高度无效，可以通过设置 line-height 来设置，设置 margin 只有左右有效，上下无效，设置 padding 只有左右有效，上下无效</li>\n</ol>\n<p>常见的内联元素有：</p>\n<ul>\n<li><code>a</code>  – 锚点</li>\n<li><code>abbr</code>  – 缩写</li>\n<li><code>b</code>  – 粗体 (不推荐)</li>\n<li><code>big</code>  – 大字体</li>\n<li><code>br</code>  – 换行</li>\n<li><code>cite</code>  – 引用</li>\n<li><code>font</code>  – 字体设定 (不推荐)</li>\n<li><code>i </code> – 斜体</li>\n<li><code>img</code>  – 图片</li>\n<li><code>input</code>  – 输入框</li>\n<li><code>label</code>  – 表格标签</li>\n<li><code>select</code>  – 项目选择</li>\n<li><code>small</code>  – 小字体文本</li>\n<li><code>sub</code>  – 下标</li>\n<li><code>sup</code>  – 上标</li>\n<li><code>textarea</code>  – 多行文本输入框</li>\n<li><code>u</code>  – 下划线</li>\n</ul>\n<h3 id=\"12-块元素\"><a class=\"anchor\" href=\"#12-块元素\">#</a> 1.2 块元素</h3>\n<p>块元素和内联元素的基本差异是块元素一般都从新行开始，相邻的块级元素将会在不同行显示。</p>\n<p>块级元素的特点：</p>\n<ol>\n<li>独霸一行，总是在新行上开始</li>\n<li>宽度缺省是它父级元素的 100%，除非设定一个宽度</li>\n<li>高度、行高、外边距、内边距都可以设置</li>\n<li>可以容纳其他内联元素或者其他块元素</li>\n</ol>\n<p>以下是常见的块级元素：</p>\n<ul>\n<li><code>address</code>  – 地址</li>\n<li><code>center</code>  – 举中对齐块</li>\n<li><code>dir</code>  – 目录列表</li>\n<li><code>div</code>  – 常用块级容易，也是 CSS layout 的主要标签</li>\n<li><code>dl</code>  – 定义列表</li>\n<li><code>form</code>  – 交互表单</li>\n<li><code>h1~h6</code>  – 标题</li>\n<li><code>hr</code>  – 水平分隔线</li>\n<li><code>menu</code>  – 菜单列表</li>\n<li><code>ol</code>  – 有序表单</li>\n<li><code>p</code>  – 段落</li>\n<li><code>table</code>  – 表格</li>\n<li><code>ul</code>  – 无序列表</li>\n</ul>\n<h2 id=\"2-基本标签\"><a class=\"anchor\" href=\"#2-基本标签\">#</a> 2. 基本标签</h2>\n<h3 id=\"21-头部\"><a class=\"anchor\" href=\"#21-头部\">#</a> 2.1 头部</h3>\n<p><code>&lt;head&gt; </code> 元素包含了所有的头部标签元素。在  <code>&lt;head&gt;</code>  元素中你可以插入脚本（scripts）, 样式文件（CSS），及各种 meta 信息。</p>\n<p>可以添加在头部区域的元素标签为:  <code>&lt;title&gt;</code> ,  <code>&lt;style&gt;</code> ,  <code>&lt;meta&gt;</code> ,  <code>&lt;link&gt;</code> ,  <code>&lt;script&gt;</code> ,  <code>&lt;noscript&gt;</code>  和  <code>&lt;base&gt;</code> 。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">标签</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><code>&lt;head&gt;</code></td>\n<td style=\"text-align:left\">定义了文档的信息</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>&lt;title&gt;</code></td>\n<td style=\"text-align:left\">定义了文档的标题</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>&lt;base&gt;</code></td>\n<td style=\"text-align:left\">定义了页面链接标签的默认链接地址</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>&lt;link&gt;</code></td>\n<td style=\"text-align:left\">定义了一个文档和外部资源之间的关系</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>&lt;meta&gt;</code></td>\n<td style=\"text-align:left\">定义了 HTML 文档中的元数据</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>&lt;script&gt;</code></td>\n<td style=\"text-align:left\">定义了客户端的 JavaScript 脚本</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>&lt;style&gt;</code></td>\n<td style=\"text-align:left\">定义了 HTML 文档的 CSS 样式</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"22-ltbodygt\"><a class=\"anchor\" href=\"#22-body\">#</a> 2.2  <code>&lt;body&gt;</code></h3>\n<p>主要内容基本都写在 <code>&lt;body&gt;</code>  体内。很多时候 <code>&lt;body&gt;</code>  排版为 <code>&lt;header&gt;</code>  页眉， <code>&lt;main&gt;</code>  主体和 <code>&lt;footer&gt;</code>  页脚三段式。如下：</p>\n<p><img data-src=\"/2021/05/19/note/%E5%89%8D%E7%AB%AF/html/image-20210520175848867.png\" alt=\"image-20210520175848867\"></p>\n<p>当然也不一定全是这样。</p>\n<h2 id=\"3-文本-段落标签\"><a class=\"anchor\" href=\"#3-文本段落标签\">#</a> 3. 文本 / 段落标签</h2>\n<p>与文本相关的标签，也是用得最多的标签。如标题、字体、段落、换行等。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">标签</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><code>&lt;h1 - h6&gt;</code></td>\n<td style=\"text-align:left\">标题</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>&lt;hr&gt;</code></td>\n<td style=\"text-align:left\">水平线分隔。<strong>无结束标签</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>&lt;p&gt;</code></td>\n<td style=\"text-align:left\">段落</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>&lt;br&gt;</code></td>\n<td style=\"text-align:left\">换行。<strong>无结束标签</strong></td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td style=\"text-align:left\">标签</td>\n<td style=\"text-align:left\">描述</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">----------</td>\n<td style=\"text-align:left\">--------------</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>&lt;b&gt;</code></td>\n<td style=\"text-align:left\">定义粗体文本</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>&lt;em&gt;</code></td>\n<td style=\"text-align:left\">定义着重文字</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>&lt;i&gt;</code></td>\n<td style=\"text-align:left\">定义斜体字</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>&lt;small&gt;</code></td>\n<td style=\"text-align:left\">定义小号字</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>&lt;strong&gt;</code></td>\n<td style=\"text-align:left\">定义加重语气</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>&lt;sub&gt;</code></td>\n<td style=\"text-align:left\">定义下标字</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>&lt;sup&gt;</code></td>\n<td style=\"text-align:left\">定义上标字</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>&lt;ins&gt;</code></td>\n<td style=\"text-align:left\">定义插入字</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>&lt;del&gt;</code></td>\n<td style=\"text-align:left\">定义删除字</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>&lt;cite&gt;</code></td>\n<td style=\"text-align:left\">定义引用、引证</td>\n</tr>\n</tbody>\n</table>\n<p><strong>至于 font 以及对齐方式等，一般在 css 中设置</strong></p>\n<h2 id=\"4-锚点-链接\"><a class=\"anchor\" href=\"#4-锚点链接\">#</a> 4. 锚点 / 链接</h2>\n<h3 id=\"41-ltagt\"><a class=\"anchor\" href=\"#41-a\">#</a> 4.1  <code>&lt;a&gt;</code></h3>\n<p>Anchor Element：锚元素， <code>&lt;a&gt;</code>  标签定义超链接，用于从一个页面链接到另一个页面。</p>\n<p><code>&lt;a&gt;</code>  元素最重要的属性是 <code>href</code>  属性，它指定链接的目标。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://nitgod1996.github.io/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>进入宁理大神1996的快乐小屋!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>可用于：</p>\n<ul>\n<li>\n<p>打开新页面</p>\n</li>\n<li>\n<p>移动到文档指定位置（当目录用）。这需要用到 <code>PJAX</code>  或者使用插件，大致逻辑如下</p>\n<ol>\n<li>\n<p>在标题处建立一个锚点，并设置 <code>href</code></p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>anchor<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#2-创建虚拟机<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-pjax-state</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>anchor<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>#<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n<li>\n<p>目录出设置 <code>href</code>  属性与标题的 <code>href</code>  一致</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>toc-link<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#2-%E5%88%9B%E5%BB%BA%E8%99%9A%E6%8B%9F%E6%9C%BA<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-pjax-state</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>toc-text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> 2. 创建虚拟机<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ul>\n<p>主要属性如下：</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1hLWhyZWYuaHRtbA==\">href</span></td>\n<td><em>URL</em></td>\n<td>规定链接的目标 URL。</td>\n</tr>\n</tbody>\n</table>\n<p>其他属性如下：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">值</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1hLWNoYXJzZXQuaHRtbA==\">charset</span></td>\n<td style=\"text-align:left\"><em>char_encoding</em></td>\n<td style=\"text-align:left\">HTML5 不支持。规定目标 URL 的字符编码。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1hLWNvb3Jkcy5odG1s\">coords</span></td>\n<td style=\"text-align:left\"><em>coordinates</em></td>\n<td style=\"text-align:left\">HTML5 不支持。规定链接的坐标。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1hLWRvd25sb2FkLmh0bWw=\">download</span></td>\n<td style=\"text-align:left\"><em>filename</em></td>\n<td style=\"text-align:left\">指定下载链接</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1hLWhyZWZsYW5nLmh0bWw=\">hreflang</span></td>\n<td style=\"text-align:left\"><em>language_code</em></td>\n<td style=\"text-align:left\">规定目标 URL 的基准语言。仅在 href 属性存在时使用。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1hLW1lZGlhLmh0bWw=\">media</span></td>\n<td style=\"text-align:left\"><em>media_query</em></td>\n<td style=\"text-align:left\">规定目标 URL 的媒介类型。默认值：all。仅在 href 属性存在时使用。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1hLW5hbWUuaHRtbA==\">name</span></td>\n<td style=\"text-align:left\"><em>section_name</em></td>\n<td style=\"text-align:left\">HTML5 不支持。规定锚的名称。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1hLXJlbC5odG1s\">rel</span></td>\n<td style=\"text-align:left\">alternate author bookmark help license next nofollow noreferrer prefetch prev search tag</td>\n<td style=\"text-align:left\">规定当前文档与目标 URL 之间的关系。仅在 href 属性存在时使用。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1hLXJldi5odG1s\">rev</span></td>\n<td style=\"text-align:left\"><em>text</em></td>\n<td style=\"text-align:left\">HTML5 不支持。规定目标 URL 与当前文档之间的关系。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1hLXNoYXBlLmh0bWw=\">shape</span></td>\n<td style=\"text-align:left\">default rect circle poly</td>\n<td style=\"text-align:left\">HTML5 不支持。规定链接的形状。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1hLXRhcmdldC5odG1s\">target</span></td>\n<td style=\"text-align:left\">_blank _parent _self _top <em>framename</em></td>\n<td style=\"text-align:left\">规定在何处打开目标 URL。仅在 href 属性存在时使用。_blank：新窗口打开。_parent：在父窗口中打开链接。_self：默认，当前页面跳转。_top：在当前窗体打开链接，并替换当前的整个窗体 (框架页)。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1hLXR5cGUuaHRtbA==\">type</span></td>\n<td style=\"text-align:left\"><em>MIME_type</em></td>\n<td style=\"text-align:left\">规定目标 URL 的 MIME 类型。仅在 href 属性存在时使用。 注：MIME = Multipurpose Internet Mail Extensions。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"42-ltlinkgt\"><a class=\"anchor\" href=\"#42-link\">#</a> 4.2  <code>&lt;link&gt;</code></h3>\n<p><code>&lt;link&gt;</code>  主要用于外部资源的联系。最常见的用途是<strong>链接样式表</strong>。</p>\n<p>如：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>css/style.css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">media</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>all<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><code>link</code>  只能写在头部。属性和 <code>&lt;a&gt;</code>  差不多</p>\n<h2 id=\"5-ltimggt\"><a class=\"anchor\" href=\"#5-img\">#</a> 5.  <code>&lt;img&gt;</code></h2>\n<p>引入图片的标签</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">loading</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lazy<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>smiley-2.gif<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Smiley face<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>42<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>42<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>主要属性如下</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">值</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1pbWctbG9hZGluZy5odG1s\">loading</span></td>\n<td style=\"text-align:left\">eager：立即加载 lazy：延迟加载</td>\n<td style=\"text-align:left\">指定浏览器是应立即加载图像还是延迟加载图像。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1pbWctYWx0Lmh0bWw=\">alt</span></td>\n<td style=\"text-align:left\"><em>text</em></td>\n<td style=\"text-align:left\">如果加载不出，规定图像的替代文本。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1pbWctc3JjLmh0bWw=\">src</span></td>\n<td style=\"text-align:left\"><em>URL</em></td>\n<td style=\"text-align:left\">规定显示图像的 URL。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1pbWctaGVpZ2h0Lmh0bWw=\">height</span></td>\n<td style=\"text-align:left\"><em>pixels</em></td>\n<td style=\"text-align:left\">规定图像的高度。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1pbWctd2lkdGguaHRtbA==\">width</span></td>\n<td style=\"text-align:left\"><em>pixels</em></td>\n<td style=\"text-align:left\">规定图像的宽度。</td>\n</tr>\n</tbody>\n</table>\n<p>其实 <code>heigth</code>  和 <code>width</code>  均可在 CSS 中设置，真正重要的也就 <code>src</code>  和 <code>alt</code>  属性。</p>\n<p>java 项目的默认路径一般是 <code>src</code>  同名文件夹</p>\n<h2 id=\"6-列表标签\"><a class=\"anchor\" href=\"#6-列表标签\">#</a> 6. 列表标签</h2>\n<p>一般使用 <code>&lt;li&gt;</code>  标签做列表项，用 <code>&lt;ol&gt;</code>  或 <code>&lt;ul&gt;</code>  包裹 <code>&lt;li&gt;</code></p>\n<h3 id=\"61-ltolgt-有序列表\"><a class=\"anchor\" href=\"#61-ol有序列表\">#</a> 6.1  <code>&lt;ol&gt;</code>  有序列表</h3>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ol</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>a<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">start</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>吃饭<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>打游戏<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>学习<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ol</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>主要属性如下：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">值</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1vbC1yZXZlcnNlZC5odG1s\">reversed</span></td>\n<td style=\"text-align:left\">reversed</td>\n<td style=\"text-align:left\">指定列表倒序 (9,8,7...)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1vbC1zdGFydC5odG1s\">start</span></td>\n<td style=\"text-align:left\"><em>number</em></td>\n<td style=\"text-align:left\">一个整数值属性，指定了列表编号的起始值。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1vbC10eXBlLmh0bWw=\">type</span></td>\n<td style=\"text-align:left\"><code>a</code>  小写字母编号 &lt;br&gt; <code>A</code>  大写字母 &lt;br/&gt; <code>i</code>  小写罗马数字 &lt;br/&gt; <code>I</code>  大写罗马数字 &lt;br/&gt; <code>1</code>  表示数字编号（默认）</td>\n<td style=\"text-align:left\">规定列表的类型。<strong>但一般在 CSS 中设置</strong></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"62-ltulgt-无序列表\"><a class=\"anchor\" href=\"#62-ul无序列表\">#</a> 6.2  <code>&lt;ul&gt;</code>  无序列表</h3>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>吃饭<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>打游戏<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>学习<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"7-ltdivgtltspangt-无样式标签\"><a class=\"anchor\" href=\"#7-divspan无样式标签\">#</a> 7.  <code>&lt;div&gt;/&lt;span&gt;</code>  无样式标签</h2>\n<p><code>&lt;div&gt;</code>  和 <code>&lt;span&gt;</code>  没有特殊定义。</p>\n<p><code>&lt;div&gt;</code>  和 <code>&lt;span&gt;</code>  是最常用到的两个标签，因为 <code>html</code>  大部分时候仅仅写个文本就够了，排版、样式都是由 CSS 完成的。</p>\n<p><code>&lt;div&gt;</code>  和 <code>&lt;span&gt;</code>  的唯一区别是</p>\n<ul>\n<li><code>&lt;div&gt;</code>  是块级元素，单独成一行（也就是会自动换行）。适合做盒子或者对网页布局。</li>\n<li><code>&lt;span&gt;</code>  是内联元素，不会自动换行。可以做文本容器.</li>\n</ul>\n<p>一般用法是以 <code>&lt;div&gt;</code>  包裹 <code>&lt;span&gt;</code></p>\n<h2 id=\"8-ltformgt-表单接收用户输入\"><a class=\"anchor\" href=\"#8-form表单接收用户输入\">#</a> 8.  <code>&lt;form&gt;</code>  表单（接收用户输入）</h2>\n<p>HTML 表单用于收集不同类型的用户输入。以 <code>&lt;form&gt;</code>  标签包裹，里面设置如：文本域、下拉列表、单选框、复选框等。</p>\n<p>&lt;form&gt; 元素包含一个或多个如下的表单元素：</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL3RhZy1pbnB1dC5odG1s\">input</span>：规定了用户可以在其中输入数据的输入字段。</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL3RhZy10ZXh0YXJlYS5odG1s\">textarea</span>：定义一个多行的文本输入控件。</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL3RhZy1idXR0b24uaHRtbA==\">button</span>：按钮</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL3RhZy1zZWxlY3QuaHRtbA==\">select</span>：下拉框</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL3RhZy1vcHRpb24uaHRtbA==\">option</span>：下拉列表的选项，类似 <code>&lt;ul&gt;</code>  和 <code>&lt;li&gt;</code>  的关系</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL3RhZy1vcHRncm91cC5odG1s\">optgroup</span>：把相关的选项组合在一起。如图<img data-src=\"/2021/05/19/note/%E5%89%8D%E7%AB%AF/html/image-20210520204100133.png\" alt=\"image-20210520204100133\"></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL3RhZy1maWVsZHNldC5odG1s\">fieldset</span>：</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL3RhZy1sYWJlbC5odG1s\">label</span>：为 <code>input</code>  元素标注，如图<img data-src=\"/2021/05/19/note/%E5%89%8D%E7%AB%AF/html/image-20210520204504945.png\" alt=\"image-20210520204504945\">Male 和 Female 就是 `label</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>get<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    用户名：<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">name</span> <span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span> <span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span>\t\t</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    密码：<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span>\t\t\t<span class=\"token comment\">&lt;!-- 请求参数 --></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>登录<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>主要属性如下：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">值</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1mb3JtLWFjY2VwdC5odG1s\">accept</span></td>\n<td style=\"text-align:left\"><em>MIME_type</em></td>\n<td style=\"text-align:left\">HTML5 不支持。规定服务器接收到的文件的类型。（文件是通过文件上传提交的）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1mb3JtLWFjdGlvbi5odG1s\">action</span></td>\n<td style=\"text-align:left\"><em>URL</em></td>\n<td style=\"text-align:left\">规定当提交表单时向何处发送表单数据。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1mb3JtLW1ldGhvZC5odG1s\">method</span></td>\n<td style=\"text-align:left\">get/post</td>\n<td style=\"text-align:left\">规定用于发送表单数据的 HTTP 方法。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1mb3JtLW5hbWUuaHRtbA==\">name</span></td>\n<td style=\"text-align:left\"><em>text</em></td>\n<td style=\"text-align:left\">规定表单的名称。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1mb3JtLXRhcmdldC5odG1s\">target</span></td>\n<td style=\"text-align:left\">_blank/ _self /_parent /_top</td>\n<td style=\"text-align:left\">规定在何处打开 action URL。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"81-ltinputgt\"><a class=\"anchor\" href=\"#81-input\">#</a> 8.1  <code>&lt;input&gt;</code></h3>\n<p><code>&lt;input&gt;</code>  标签规定了用户可以在其中输入数据的输入字段。</p>\n<p><code>&lt;input&gt; </code> 元素在 <code> &lt;form&gt;</code>  元素中使用，用来声明允许用户输入数据的 input 控件。</p>\n<p>主要属性如下：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">值</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1pbnB1dC1uYW1lLmh0bWw=\">name</span></td>\n<td style=\"text-align:left\"><em>text</em></td>\n<td style=\"text-align:left\">name 属性规定 &lt;input&gt; 元素的名称。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1pbnB1dC1yZWFkb25seS5odG1s\">readonly</span></td>\n<td style=\"text-align:left\">readonly</td>\n<td style=\"text-align:left\">readonly 属性规定输入字段是只读的。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1pbnB1dC1zaXplLmh0bWw=\">size</span></td>\n<td style=\"text-align:left\"><em>number</em></td>\n<td style=\"text-align:left\">size 属性规定以字符数计的 &lt;input&gt; 元素的可见宽度。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1pbnB1dC12YWx1ZS5odG1s\">value</span></td>\n<td style=\"text-align:left\"><em>text</em></td>\n<td style=\"text-align:left\">指定 &lt;input&gt; 元素 value 的值。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1pbnB1dC10eXBlLmh0bWw=\">type</span></td>\n<td style=\"text-align:left\">button checkbox  image text 等</td>\n<td style=\"text-align:left\">type 属性规定要显示的 &lt;input&gt; 元素的类型。</td>\n</tr>\n</tbody>\n</table>\n<p>输入字段可通过多种方式改变，取决于  <code>type</code>  属性。 <code>type</code>  主要属性如下</p>\n<ul>\n<li>\n<p><code>button</code> ：定义可点击的按钮（通常与 JavaScript 一起使用来启动脚本）。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>点我<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>msg()<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><code>value</code>  - 按钮上显示的文字。 <code>onclick</code>  - 点击按钮事件执行的 <code>JavaScript</code>  代码<img data-src=\"/2021/05/19/note/%E5%89%8D%E7%AB%AF/html/image-20210521141334312.png\" alt=\"image-20210521141334312\"></p>\n</li>\n<li>\n<p><code>submit</code> ：定义提交按钮。<strong> <code>input</code>  除了 <code>button</code> ，任何需要提交的都需要用到 <code>submit</code> </strong></p>\n</li>\n<li>\n<p><code>checkbox</code> ：定义复选框。</p>\n<ul>\n<li>name：name 属性相同的单 / 复选框为一组</li>\n<li>value：指定被选中后提交的值</li>\n<li>checked：一开始默认选中的项</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>vehicle[]<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Bike<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> 自行车<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>vehicle[]<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Car<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> 小轿车<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>vehicle[]<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Boat<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> 船<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>提交<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><code>name</code>  相同的复选框为一组。<img data-src=\"/2021/05/19/note/%E5%89%8D%E7%AB%AF/html/image-20210521141823540.png\" alt=\"image-20210521141823540\"></p>\n</li>\n<li>\n<p><code>radio</code> ：定义单选按钮。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>gender<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>女<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> 女<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>提交<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><img data-src=\"/2021/05/19/note/%E5%89%8D%E7%AB%AF/html/image-20210521141852425.png\" alt=\"image-20210521141852425\"></p>\n</li>\n<li>\n<p><code>file</code> ：定义文件选择字段和 &quot;浏览...&quot; 按钮，供文件上传。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>选择一个文件: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>img<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><img data-src=\"/2021/05/19/note/%E5%89%8D%E7%AB%AF/html/image-20210521143325111.png\" alt=\"image-20210521143325111\"></p>\n</li>\n<li>\n<p><code>password</code> ：定义密码字段（字段中的字符会被遮蔽）。</p>\n<ul>\n<li>placeholder：指定输入框的提示信息，输入时会自动消失</li>\n<li>value：提示信息，不会自动消失</li>\n</ul>\n</li>\n<li>\n<p><code>text</code> ：默认。定义一个单行的文本字段（默认宽度为 20 个字符）。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Email: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>输入邮箱<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  Password: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pwd<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">maxlength</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>8<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>输入密码<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><img data-src=\"/2021/05/19/note/%E5%89%8D%E7%AB%AF/html/image-20210521143529935.png\" alt=\"image-20210521143529935\"></p>\n</li>\n</ul>\n<h3 id=\"82-ltlabelgt-标签文本绑定\"><a class=\"anchor\" href=\"#82-label标签文本绑定\">#</a> 8.2  <code>&lt;label&gt;</code>  标签文本绑定</h3>\n<p>label 元素不会向用户呈现任何特殊效果。不过，它为鼠标用户改进了可用性。如果您在 label 元素内点击文本，就会触发此控件。</p>\n<p><code>&lt;label&gt;</code>  标签的 for 属性应当与相关元素的 id 属性相同。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>male<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Male<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sex<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>male<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>male<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>female<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Female<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sex<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>female<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>female<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><img data-src=\"/2021/05/19/note/%E5%89%8D%E7%AB%AF/html/image-20210521143934294.png\" alt=\"image-20210521143934294\"> 如图，点击 Male 文本即可选中</p>\n<h3 id=\"83-ltselectgt-下拉框\"><a class=\"anchor\" href=\"#83-select下拉框\">#</a> 8.3  <code>&lt;select&gt;</code>  下拉框</h3>\n<p><code>&lt;select&gt;</code>  元素用来创建下拉列表。<strong>不需要被 <code>&lt;form&gt;</code>  包裹</strong></p>\n<p><code>&lt;select&gt;</code>  元素中的 <code>&lt;option&gt;</code>  标签定义了列表中的可用选项。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>volvo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Volvo<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>saab<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Saab<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>opel<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Opel<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>audi<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Audi<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><img data-src=\"/2021/05/19/note/%E5%89%8D%E7%AB%AF/html/image-20210521144307414.png\" alt=\"image-20210521144307414\"></p>\n<p>主要属性如下：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">值</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1zZWxlY3QtZGlzYWJsZWQuaHRtbA==\">disabled</span></td>\n<td style=\"text-align:left\">disabled</td>\n<td style=\"text-align:left\">当该属性为 true 时，会禁用下拉列表。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1zZWxlY3QtbmFtZS5odG1s\">name</span></td>\n<td style=\"text-align:left\"><em>text</em></td>\n<td style=\"text-align:left\">定义下拉列表的名称。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1zZWxlY3QtcmVxdWlyZWQuaHRtbA==\">required</span><strong>New</strong></td>\n<td style=\"text-align:left\">required</td>\n<td style=\"text-align:left\">规定用户在提交表单前必须选择一个下拉列表中的选项。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1zZWxlY3Qtc2l6ZS5odG1s\">size</span></td>\n<td style=\"text-align:left\"><em>number</em></td>\n<td style=\"text-align:left\">规定下拉列表中可见选项的数目。</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"ltoptiongt-主要属性如下\"><a class=\"anchor\" href=\"#option主要属性如下\">#</a>  <code>&lt;option&gt;</code>  主要属性如下</h4>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">值</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1vcHRpb24tZGlzYWJsZWQuaHRtbA==\">disabled</span></td>\n<td style=\"text-align:left\">disabled</td>\n<td style=\"text-align:left\">规定此选项应在首次加载时被禁用。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1vcHRpb24tc2VsZWN0ZWQuaHRtbA==\">selected</span></td>\n<td style=\"text-align:left\">selected</td>\n<td style=\"text-align:left\">规定选项（在首次显示在列表中时）表现为选中状态。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC1vcHRpb24tdmFsdWUuaHRtbA==\">value</span></td>\n<td style=\"text-align:left\"><em>text</em></td>\n<td style=\"text-align:left\">定义送往服务器的选项值。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"84-lttextareagt\"><a class=\"anchor\" href=\"#84-textarea\">#</a> 8.4  <code>&lt;textarea&gt;</code></h3>\n<p><code>&lt;textarea&gt;</code>  标签定义一个<strong>多行</strong>的文本输入控件。</p>\n<p>和 <code>&lt;input type=&quot;text&quot;&gt;</code>  不同， <code>textarea</code>  一般用来接收整段的文字</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">rows</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cols</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>30<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>我是一个文本框。</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><img data-src=\"/2021/05/19/note/%E5%89%8D%E7%AB%AF/html/image-20210521145011381.png\" alt=\"image-20210521145011381\"></p>\n<p>其主要属性如下：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">值</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC10ZXh0YXJlYS1hdXRvZm9jdXMuaHRtbA==\">autofocus</span><strong>New</strong></td>\n<td style=\"text-align:left\">autofocus</td>\n<td style=\"text-align:left\">规定当页面加载时，文本区域自动获得焦点。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC10ZXh0YXJlYS1yb3dzLmh0bWw=\">rows</span></td>\n<td style=\"text-align:left\"><em>number</em></td>\n<td style=\"text-align:left\">规定文本区域内可见的行数。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC10ZXh0YXJlYS1jb2xzLmh0bWw=\">cols</span></td>\n<td style=\"text-align:left\"><em>number</em></td>\n<td style=\"text-align:left\">规定文本区域内可见的宽度。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC10ZXh0YXJlYS1kaXNhYmxlZC5odG1s\">disabled</span></td>\n<td style=\"text-align:left\">disabled</td>\n<td style=\"text-align:left\">规定禁用文本区域。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC10ZXh0YXJlYS1tYXhsZW5ndGguaHRtbA==\">maxlength</span><strong>New</strong></td>\n<td style=\"text-align:left\"><em>number</em></td>\n<td style=\"text-align:left\">规定文本区域允许的最大字符数。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC10ZXh0YXJlYS1uYW1lLmh0bWw=\">name</span></td>\n<td style=\"text-align:left\"><em>text</em></td>\n<td style=\"text-align:left\">规定文本区域的名称。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC10ZXh0YXJlYS1wbGFjZWhvbGRlci5odG1s\">placeholder</span><strong>New</strong></td>\n<td style=\"text-align:left\"><em>text</em></td>\n<td style=\"text-align:left\">规定一个简短的提示，描述文本区域期望的输入值。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC10ZXh0YXJlYS1yZWFkb25seS5odG1s\">readonly</span></td>\n<td style=\"text-align:left\">readonly</td>\n<td style=\"text-align:left\">规定文本区域为只读。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS90YWdzL2F0dC10ZXh0YXJlYS1yZXF1aXJlZC5odG1s\">required</span><strong>New</strong></td>\n<td style=\"text-align:left\">required</td>\n<td style=\"text-align:left\">规定文本区域是必需的 / 必填的。</td>\n</tr>\n</tbody>\n</table>\n<p>可在 CSS 中设置文本框不可拉伸</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">textarea</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">resize</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span><span class=\"token comment\">/* 设置文本框不可拉伸 */</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"9-lttablegt-表格\"><a class=\"anchor\" href=\"#9-table表格\">#</a> 9.  <code>&lt;table&gt;</code>  表格</h2>\n<p>表格也可以用来页面布局</p>\n<p>表格由 <code> &lt;table&gt;</code>  标签来定义。每个表格均有若干行（由 <code>&lt;tr&gt;</code>  标签定义），每行被分割为若干单元格（由  <code>&lt;td&gt;</code>  标签定义）。字母 td 指表格数据（table data），即数据单元格的内容。数据单元格可以包含文本、图片、列表、段落、表单、水平线、表格等等。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span> <span class=\"token attr-name\">border</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>row 1, cell 1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>row 1, cell 2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>row 2, cell 1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>row 2, cell 2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><img data-src=\"/2021/05/19/note/%E5%89%8D%E7%AB%AF/html/image-20210521145541432.png\" alt=\"image-20210521145541432\"></p>\n",
            "tags": [
                "前端",
                "前端",
                "html"
            ]
        },
        {
            "id": "https://nitgod1996.com/2021/05/18/note/Java/java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E5%8F%8A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/",
            "url": "https://nitgod1996.com/2021/05/18/note/Java/java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E5%8F%8A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/",
            "title": "java基础语法及特性",
            "date_published": "2021-05-18T11:43:42.000Z",
            "content_html": "<h1 id=\"一-java-基础知识\"><a class=\"anchor\" href=\"#一-java基础知识\">#</a> 一、 Java 基础知识</h1>\n<h2 id=\"1-java-与-c-异同\"><a class=\"anchor\" href=\"#1-java与c异同\">#</a> 1. Java 与 C++ 异同</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Java</th>\n<th>C++</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>常  量</td>\n<td>final</td>\n<td>const</td>\n<td></td>\n</tr>\n<tr>\n<td>布尔值</td>\n<td>boolean：不与 0/1 或者指针联系</td>\n<td>bool：0/null 表示 false</td>\n<td></td>\n</tr>\n<tr>\n<td>判断相等</td>\n<td>.equals()</td>\n<td>==</td>\n<td>C++ 大多类重载了 ==  而 Java 中则是重载.equals () 方法</td>\n</tr>\n<tr>\n<td>数组</td>\n<td>长度可以是变量  int [] a=new int [n];</td>\n<td>长度只能是常数  int a [100];</td>\n<td>实际上 Java 类似 C++ 中用指针创建    int* a; a=new int [n];</td>\n</tr>\n<tr>\n<td>整型最值</td>\n<td>Integer.<em>MAX_VALUE</em></td>\n<td>INT_MAX</td>\n<td></td>\n</tr>\n<tr>\n<td>泛型</td>\n<td>集合要用 Integer 装箱</td>\n<td>直接 vector&lt;int&gt;</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"2-java-编程前置知识\"><a class=\"anchor\" href=\"#2-java编程前置知识\">#</a> 2. Java 编程前置知识</h2>\n<h3 id=\"21-jdk-java-development-kitjava-开发工具包\"><a class=\"anchor\" href=\"#21-jdk-java-development-kitjava开发工具包\">#</a> 2.1 jdk--java development kit：Java 开发工具包</h3>\n<p>Java 开发工具包，定义了 Java 各版本语法及功能，以及 Java 的编译运行环境（javac、jvm、jre 等）。</p>\n<p>建立项目前需要导入 / 选择要使用的 jdk</p>\n<p>运行 Java 时，jdk 真正起作用的主要是以下 4 个文件夹：</p>\n<ol>\n<li>bin：最主要的是编译器 (javac.exe)</li>\n<li>include：java 和 JVM 交互用的头文件</li>\n<li>lib：类库</li>\n<li>jre：java 运行环境</li>\n</ol>\n<h3 id=\"22-jvm-java-virtual-machinejava-虚拟机\"><a class=\"anchor\" href=\"#22-jvm-java-virtual-machinejava虚拟机\">#</a> 2.2 jvm--java virtual machine：Java 虚拟机</h3>\n<p>用于运行 Java 程序，Java 文件运行的步骤如下：</p>\n<ol>\n<li>写好的.java 文件经过 javac 编译器编译后生成.class 类文件（也叫字节码文件）</li>\n<li>再通过 jvm 运行.class 文件启动程序</li>\n<li>jvm 通过分析.class 的字节码对操作系统传达命令</li>\n</ol>\n<blockquote>\n<p>class 并不直接与机器的操作系统相对应，而是经过虚拟机间接与操作系统交互，由虚拟机将程序解释给本地系统执行。</p>\n</blockquote>\n<h3 id=\"23-jre-java-runtime-environmentjava-运行环境\"><a class=\"anchor\" href=\"#23-jre-java-runtime-environmentjava运行环境\">#</a> 2.3 jre--java runtime environment：Java 运行环境</h3>\n<p>​\t\t光有 JVM 还不能成 class 的执行，因为在解释 class 的时候 JVM 需要调用解释所需要的<strong>类库 lib（library）</strong>。</p>\n<p>​\t\t在 JDK 的安装目录里你可以找到 jre 目录，里面有两个文件夹 bin 和 lib，在这里可以认为 bin 里的就是 jvm，lib 中则是 jvm 工作所需要的类库，而 jvm 和 lib 和起来就称为 jre。</p>\n<p>​\t\t所以，在你写完 java 程序编译成.class 之后，你可以把这个.class 文件和 jre 一起打包发给朋友，这样你的朋友就可以运行你写程序了。（jre 里有运行.class 的 java.exe）</p>\n<blockquote>\n<p>此处环境主要是运行所需的 jar 等各种条件</p>\n</blockquote>\n<h2 id=\"3-java-运行时内存\"><a class=\"anchor\" href=\"#3-java运行时内存\">#</a> 3. Java 运行时内存</h2>\n<ol>\n<li>\n<p>方法区：存放各种类的方法信息，主要是存.class 文件</p>\n</li>\n<li>\n<p>堆（长时存放）：用于存放程序运行时产生的各种临时变量信息（主要是成员变量本身，和成员方法在方法区中的地址）。在 new 对象时建立，在 set 时写入，get 时读出。</p>\n</li>\n<li>\n<p>栈（临时存放）：存放局部变量信息。</p>\n<p>堆 -- 背包\t方法区 -- 口袋\t栈 -- 操作台</p>\n</li>\n</ol>\n<h2 id=\"4-基础知识\"><a class=\"anchor\" href=\"#4-基础知识\">#</a> 4. 基础知识</h2>\n<h3 id=\"41-基础类型与引用类型\"><a class=\"anchor\" href=\"#41-基础类型与引用类型\">#</a> 4.1 基础类型与引用类型</h3>\n<table>\n<thead>\n<tr>\n<th>基础类型</th>\n<th>引用类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>byte</td>\n<td>Byte</td>\n</tr>\n<tr>\n<td>short</td>\n<td>Short</td>\n</tr>\n<tr>\n<td>int</td>\n<td>Integer</td>\n</tr>\n<tr>\n<td>double</td>\n<td>Double</td>\n</tr>\n<tr>\n<td>long</td>\n<td>Long</td>\n</tr>\n<tr>\n<td>float</td>\n<td>Float</td>\n</tr>\n<tr>\n<td>boolean</td>\n<td>Boolean</td>\n</tr>\n<tr>\n<td>char</td>\n<td>Character</td>\n</tr>\n<tr>\n<td>不能为 null</td>\n<td>可以是 null</td>\n</tr>\n</tbody>\n</table>\n<p>以及所有 new 出来的对象都是引用类型。（附：以上列举的其实是基础类型对应的<strong>包装类</strong>）</p>\n<p>其他注意事项：</p>\n<ol>\n<li>小数默认 double，如果要 float 需要注明 3.14F 或 3.14f</li>\n<li>整数默认 int，long 需要注明 10L 或 10l</li>\n<li>数学运算时任何类型均转为 int 和 double</li>\n</ol>\n<h3 id=\"42-转义字符及其-unicode\"><a class=\"anchor\" href=\"#42-转义字符及其unicode\">#</a> 4.2 转义字符及其 Unicode</h3>\n<p>Unicode 即 utf-8 编码， 特殊字符需要用转义符 '\\'+ 其他字符得出，常见操作如下表：</p>\n<table>\n<thead>\n<tr>\n<th>转义序列</th>\n<th>名称</th>\n<th>Unicode 值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\\b</td>\n<td>退格</td>\n<td>\\u0008</td>\n</tr>\n<tr>\n<td>\\t</td>\n<td>制表</td>\n<td>\\u0009</td>\n</tr>\n<tr>\n<td>\\n</td>\n<td>换行</td>\n<td>\\u000a</td>\n</tr>\n<tr>\n<td>\\r</td>\n<td>回车</td>\n<td>\\u000d</td>\n</tr>\n<tr>\n<td>\\”</td>\n<td>双引号</td>\n<td>\\u0022</td>\n</tr>\n<tr>\n<td>\\’</td>\n<td>单引号</td>\n<td>\\u0027</td>\n</tr>\n<tr>\n<td>\\</td>\n<td>反斜杠</td>\n<td>\\u005c</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"43-数组创建\"><a class=\"anchor\" href=\"#43-数组创建\">#</a> 4.3 数组创建</h3>\n<ol>\n<li>\n<p>动态创建：</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">int [] array=new int [10];//创建初始值为0长度为10的数组\n</code></pre>\n</li>\n<li>\n<p>静态创建：</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">int [] array=new int [] &#123;1,2,3,4,5&#125;;\n//或者直接\nint [] array=&#123;1,2,3,4,5&#125;;\n</code></pre>\n</li>\n</ol>\n<h3 id=\"44-不确定参数数量的函数构建方法\"><a class=\"anchor\" href=\"#44-不确定参数数量的函数构建方法\">#</a> 4.4 不确定参数数量的函数构建方法</h3>\n<p>当不明确函数需要几个参数时，可以按如下方法创建</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">public static int sum(int...arr)&#123;//arr实际上是个数组\n    int sum1=0;\n    for(int i:arr) sum1+=i;\n    return sum1;\n&#125;\n//调用\nsum(1,2,3,4,5);\n</code></pre>\n<p>可变参数只能有一个数组，下面的方法是 **&lt;font color=red&gt; 错误 &lt;/font&gt;** 的</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">public static int sum(int...arr，String...str)//Error\n</code></pre>\n<h2 id=\"5-java-类的三大基本方法\"><a class=\"anchor\" href=\"#5-java类的三大基本方法\">#</a> 5. java 类的三大基本方法</h2>\n<p>java 所有类均继承自 Object 类，这个类有几个方法常常需要重载</p>\n<h3 id=\"51-tostring-方法\"><a class=\"anchor\" href=\"#51-tostring方法\">#</a> 5.1  <code>toString（）</code> 方法</h3>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">String toString(); //返回该对象的字符串表示。\n</code></pre>\n<p>​\t\t这个方法用于将该类转换成字符形式， <code>System.out.println</code>  也是自动识别对象的 <code>.toString</code>  方法将其输出</p>\n<h3 id=\"52-equals-方法\"><a class=\"anchor\" href=\"#52-equals方法\">#</a> 5.2  <code>equals()</code>  方法</h3>\n<pre class=\" language-language-java\"><code class=\"language-language-java\"> boolean equals(Object obj) //指示其他某个对象是否与此对象“相等”。\n</code></pre>\n<p>​\t\tjava 对象的判断一般不用 <code>==</code> ，而是用 <code>.equals()</code>  判断两个对象的<strong>值</strong>是否相等。</p>\n<blockquote>\n<p>因为 <code>==</code>  会比较对象的地址，只有同一个对象才可能返回 <code>true</code> ，但这并没有什么意义</p>\n</blockquote>\n<p>&lt;font color=red size=5&gt; 此外，也可使用 <code>Objects.equals(a,b)</code>  判断，这样即使是 <code>null</code>  也不会空指针异常 &lt;/font&gt;</p>\n<h3 id=\"53-hashcode-方法\"><a class=\"anchor\" href=\"#53-hashcode方法\">#</a> 5.3  <code>hashCode()</code>  方法</h3>\n<p>返回该对象的哈希码，<strong>相当于是标记该对象的唯一的 ID 值</strong></p>\n<h2 id=\"6-类型互相转换\"><a class=\"anchor\" href=\"#6-类型互相转换\">#</a> 6. 类型互相转换</h2>\n<p>类型互相转换一般有 2 种情况：</p>\n<ol>\n<li>有<strong>基础类型</strong>的转换</li>\n<li>各种<strong>对象</strong>的转换</li>\n</ol>\n<p>对象之间的转换一般直接在对象前添加 <code>(想要转换的类型)</code>  即可，如下</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">User usr=new User();\nSystem.out.println((UserDemo)usr);\n</code></pre>\n<p>这种方法需要两个类之间有<strong>继承</strong>关系。</p>\n<p>而有基础类型的转换一般用通过包装类进行，最常见 / 常用的便是 <code>int</code>  和 <code>String</code>  的转换了</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">//以下为Integer静态方法\nstatic Integer valueOf(int i) //int转Integer\nstatic Integer valueOf(String s) //String转Integer\nstatic int\tparseInt(String s) //把String转换成int\n</code></pre>\n<p>详细的包装类方法在之后介绍</p>\n<h2 id=\"7-命名规范及代码风格\"><a class=\"anchor\" href=\"#7-命名规范及代码风格\">#</a> 7. 命名规范及代码风格</h2>\n<ol>\n<li>类名：以大写字母开头，每个单词第一个字母大写</li>\n<li>方法名 / 变量名：以小写字母开头，每个单词第一个字母大写</li>\n<li>常量：全用大写，每个单词之间以 '_' 分隔</li>\n<li>当参数名重复或找不到合适的时，可以以 aName、aSalary 之类</li>\n</ol>\n<h2 id=\"8-idea-相关\"><a class=\"anchor\" href=\"#8-idea相关\">#</a> 8. IDEA 相关</h2>\n<h3 id=\"81-快捷键\"><a class=\"anchor\" href=\"#81-快捷键\">#</a> 8.1 快捷键</h3>\n<ol>\n<li>\n<p>System.out.println(); //sout</p>\n</li>\n<li>\n<p>public static void main(String[] args) {//psvm</p>\n</li>\n<li>\n<p>Alt+Enter：自动修复代码</p>\n</li>\n<li>\n<p>Alt+Insert：自动生成成员函数</p>\n</li>\n<li>\n<p>Ctrl+Y：删除光标所在行</p>\n</li>\n<li>\n<p>Ctrl+D：复制光标所在行内容，插入光标位置下面</p>\n</li>\n<li>\n<p>Ctrl+Alt+L：格式化代码</p>\n</li>\n<li>\n<p>Ctrl+/：单行注释，再按取消注释</p>\n</li>\n<li>\n<p>Ctrl+Shift+/：选中代码注释。多行注释，再按取消</p>\n</li>\n<li>\n<p>Alt+Shift + 上下箭头：移动当前代码行</p>\n</li>\n<li>\n<p>Ctrl+Alt+Shift+S：打开工程配置 Project Settings</p>\n</li>\n</ol>\n<h3 id=\"82-debug-调试\"><a class=\"anchor\" href=\"#82-debug调试\">#</a> 8.2 debug 调试</h3>\n<ol>\n<li>\n<p>设置断点</p>\n</li>\n<li>\n<p>右键 debug 调试</p>\n</li>\n<li>\n<p><strong>快捷键：</strong></p>\n<p>f8：逐行执行</p>\n<p>f7：进入方法</p>\n<p>shift+f8：跳出方法</p>\n<p>f9：跳到下一个断点</p>\n<p>Ctrl+f2：退出 debug 模式</p>\n<p>左下角 console：切换到控制台</p>\n</li>\n</ol>\n<h3 id=\"83-idea-配置\"><a class=\"anchor\" href=\"#83-idea配置\">#</a> 8.3 IDEA 配置</h3>\n<ul>\n<li>\n<p>字体</p>\n<p>File-Setting-Editor-Font</p>\n<p>Font:consoles</p>\n<p>Size:16</p>\n</li>\n<li>\n<p>自动补全</p>\n<p>File-Setting-Keymap-Main menu-Code-Complication-Basic</p>\n<p>设置快捷键为 Alt+/</p>\n</li>\n<li>\n<p>配置 jsp 模板</p>\n<p>File-Setting-Editor-File and Code Templates</p>\n</li>\n</ul>\n<h1 id=\"二-面向对象\"><a class=\"anchor\" href=\"#二-面向对象\">#</a> 二、 面向对象</h1>\n<h2 id=\"1-基础知识\"><a class=\"anchor\" href=\"#1-基础知识\">#</a> 1. 基础知识</h2>\n<ol>\n<li>new 操作符的返回值是一个引用（对 new 出来的对象的引用，new 其实就是构造函数调用方法）</li>\n<li>在类的内部用 <code>this</code>  调用其方法（包括构造方法），用 <code>super</code>  调用父类方法</li>\n</ol>\n<h2 id=\"2-初始化块-静态代码块\"><a class=\"anchor\" href=\"#2-初始化块静态代码块\">#</a> 2. 初始化块 / 静态代码块</h2>\n<ol>\n<li>初始化块</li>\n</ol>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">public class demo01 &#123;\n    &#123;\n        //可以操作静态字段用于计数等\n    &#125;//初始化块\n&#125;\n</code></pre>\n<p>在类内创建一个 <code>&#123;&#125;</code> ，块内的代码<strong>该类 new 一个对象执行一次</strong>，常用来计数</p>\n<ol start=\"2\">\n<li>静态代码块</li>\n</ol>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">public class demo01 &#123;\n    static&#123;\n        //典型用途，用来一次性对静态变量进行赋值\n    &#125;//静态初始化块\n&#125;\n</code></pre>\n<p>在类内创建一个 <code>static&#123;&#125;</code> ，块内代码<strong>进在第一次使用该类时执行一次</strong>，常用于对静态变量赋值</p>\n<h2 id=\"3-静态-static\"><a class=\"anchor\" href=\"#3-静态static\">#</a> 3. 静态 static</h2>\n<p><code>static</code>  关键字表示<strong>即使不创建对象也可以调用</strong></p>\n<p>静态 static 是属于类的，所有对象共享的，不随对象动态变化的。</p>\n<p><code>static</code>  位于内存的方法区</p>\n<h3 id=\"31-静态字段\"><a class=\"anchor\" href=\"#31-静态字段\">#</a> 3.1 静态字段</h3>\n<p>类的专有成员变量，是该类所有对象共享的变量，可以被任意对象的成员函数修改。</p>\n<h3 id=\"32-静态方法\"><a class=\"anchor\" href=\"#32-静态方法\">#</a> 3.2 静态方法</h3>\n<p>可以直接由类名调用的，不需要先创建对象。<em>静态方法指定访问静态字段</em></p>\n<h3 id=\"33-静态代码块\"><a class=\"anchor\" href=\"#33-静态代码块\">#</a> 3.3 静态代码块</h3>\n<p>如上所讲</p>\n<h2 id=\"4-设计类的注意事项\"><a class=\"anchor\" href=\"#4-设计类的注意事项\">#</a> 4. 设计类的注意事项</h2>\n<ol>\n<li>一定要保证数据私有</li>\n<li>一定要对数据进行初始化（主要是静态数据吧）</li>\n<li>不要在类中使用过多的基本类型</li>\n<li>不是所有字段都需要单独的 get/set 方法</li>\n<li>分解具有过多职责的类（<strong>解耦</strong>）</li>\n<li>类名和方法名要能够体现他们的职责</li>\n<li>优先使用不可变的类（即不能修改对象的类）</li>\n</ol>\n<h1 id=\"三-继承与多态\"><a class=\"anchor\" href=\"#三-继承与多态\">#</a> 三、 继承与多态</h1>\n<h2 id=\"1-基础知识\"><a class=\"anchor\" href=\"#1-基础知识-2\">#</a> 1. 基础知识</h2>\n<ol>\n<li>\n<p>私有变量可以<strong>被继承</strong>但不能被访问。<em>其实可通过父类方法访问。 <code>super</code>  调用</em></p>\n</li>\n<li>\n<p>构造函数不被继承，可在子类通过 <code>super()</code>  引用父类构造器</p>\n</li>\n<li>\n<p>静态字段和方法可以<strong>被继承</strong>，但<strong>不能被重写</strong>。</p>\n</li>\n<li>\n<p><code>final</code>  关键字标记的类<strong>不能被继承</strong>， <code>final</code>  标记的方法 / 字段<strong>不能被重写</strong></p>\n</li>\n<li>\n<p>成员方法引用时，成员方法在哪个类定义，就引用哪个类的成员变量。如下</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">public class Father &#123;\n    private int a=1;\n    public  int getA() &#123;\n        return a;\n    &#125;\n&#125;\npublic class Child extends Father &#123;\n    private int a=2;\n&#125;\npublic class demo01 &#123;\n    public static void main(String[] args) &#123;\n        Father demo=new Child();\n        System.out.println(demo.getA());\n        System.out.println(demo.getClass());\n        //输出结果：1\n        //class com.example.demo.Child\n    &#125;\n&#125;\n</code></pre>\n<p>但如果 <code>Child</code>  中重写了 <code>getA()</code> ，那么输出结果即为<strong> 2</strong></p>\n</li>\n</ol>\n<h2 id=\"2-覆盖重写-override\"><a class=\"anchor\" href=\"#2-覆盖重写override\">#</a> 2. 覆盖重写 override</h2>\n<h3 id=\"21-重写成员变量不建议\"><a class=\"anchor\" href=\"#21-重写成员变量不建议\">#</a> 2.1 重写成员变量（不建议）</h3>\n<p>成员方法在哪个类定义，引用的就是哪个类的成员变量。</p>\n<p>所以重定义子类字段不会对继承的方法产生影响。</p>\n<p>一般来说，<strong>字段只用于定义它的那个类。</strong></p>\n<p>子类的字段和父类的字段即使名字一样，也相当于两个字段了</p>\n<p>所以，<strong>除了静态字段，一般不在类中直接定义成员变量的值，也不在子类重写成员变量。</strong></p>\n<h3 id=\"22-重写成员方法\"><a class=\"anchor\" href=\"#22-重写成员方法\">#</a> 2.2 重写成员方法</h3>\n<p>重新定义一个与父类函数相同返回类型、方法名、参数类型、参数名、参数数量的函数，即为重写。</p>\n<p>可用 <code>@Override</code>  检测是否成功覆盖该方法</p>\n<p>重写时如果仅仅是添加功能，可以利用 <code>super</code>  调用父类方法，如下</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">public void thisMethod()&#123;\n   super.thisMethod();\n   //新功能1;\n   //新功能2;\n&#125;\n</code></pre>\n<h2 id=\"3-多态\"><a class=\"anchor\" href=\"#3-多态\">#</a> 3. 多态</h2>\n<blockquote>\n<p>一个对象变量可以指示多种实际类型的现象即成为多态</p>\n</blockquote>\n<p>实际操作上是：以父类声明，以父类 / 子类 a / 子类 b 构造，如下</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">Father demo=new Child();\n</code></pre>\n<p>此时的 <code>demo</code>  是 Child 类型的对象，可调用 Child 重写 / 增加的方法和 Father 类自带的方法。</p>\n<ol>\n<li>继承 / 多态是为了类型解耦，不要把过多功能写在一个类</li>\n<li>一般父类需要被重写的方法以抽象函数 <code>abstract</code>  定义</li>\n<li>有时候父类直接写成接口 <code>interface</code> ，子类作为实现类 <code>implement</code></li>\n</ol>\n<p>程序中，可以通过 <code>instanceof</code>  来判别对象属于哪个类，如下</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">if(demo instanceof Father)\n</code></pre>\n<h2 id=\"4-抽象-abstract\"><a class=\"anchor\" href=\"#4-抽象abstract\">#</a> 4. 抽象 abstract</h2>\n<blockquote>\n<p>抽象是接口的核心，也是多态的一种应用</p>\n</blockquote>\n<p>在定义父类时暂时不想定义该方法（可能是还没想好怎么定义，或者各子类的实现方法不一样），但该类必须要有这个方法时，就设置为 <code>abstract</code> ，在特定的子类实现。（同时父类也要定义成 <code>abstract</code>  类或者接口）</p>\n<p>如下</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">public abstract class Father &#123;\n    public abstract int abstractmethod();\n&#125;\n</code></pre>\n<p>如果定义了抽象方法，那么子类<strong>必须实现所有抽象方法，否则子类也要定义成抽象类</strong></p>\n<h1 id=\"四-接口\"><a class=\"anchor\" href=\"#四-接口\">#</a> 四、 接口</h1>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">public interface InterDemo &#123;//接口的所有成员默认是public\n    static int a=1;//接口可以定义静态字段，static可省略\n    \n    public static int getA()&#123;//接口可以定义静态方法\n        return a;\n    &#125;\n    \n    default int getDoubleA()&#123;//接口可以定义非抽象方法，需要用default标记\n        return a*2;\n    &#125;\n    \n    public abstract void interfaceMethod();\n&#125;\n</code></pre>\n<h2 id=\"1-接口的性质\"><a class=\"anchor\" href=\"#1-接口的性质\">#</a> 1. 接口的性质</h2>\n<ol>\n<li>接口不是类，不能 new 一个接口，只能 new 一个接口的实现类。但可以以接口定义对象</li>\n<li>可以用 <code>instanceof</code>  检查对象是否实现某个接口</li>\n<li>接口可以继承别的接口</li>\n<li>一个类可以实现多个接口</li>\n<li>接口中的方法默认是 <code>public abstract</code></li>\n<li>接口的实现类必须实现所有抽象方法</li>\n<li>接口没有静态代码块 <code>static&#123;&#125;</code>  和构造方法</li>\n<li>接口可以定义非抽象方法，如静态方法和普通方法（需要以 <code>default</code>  标记），非抽象方法一般被继承不被重写。</li>\n</ol>\n<h2 id=\"2-接口的定义和实现\"><a class=\"anchor\" href=\"#2-接口的定义和实现\">#</a> 2. 接口的定义和实现</h2>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">//接口定义\npublic interface InterDemo &#123;\n    public abstract void interfaceMethod();\n&#125;\n//实现类\npublic class ImplDemo implements InterDemo&#123;\n    private int id;\n    public ImplDemo() &#123;\n    &#125;\n\n    public ImplDemo(int id) &#123;\n        this.id = id;\n    &#125;\n\n    public int getId() &#123;\n        return id;\n    &#125;\n\n    public void setId(int id) &#123;\n        this.id = id;\n    &#125;\n\n    @Override\n    public void interfaceMethod() &#123;\n        System.out.println(\"this is a implement Class\");\n    &#125;\n&#125;\n//调用\nInterDemo demo1=new ImplDemo(1);\n</code></pre>\n<ol>\n<li>实现类除了必须实现接口抽象方法，其他和普通类并无二致</li>\n<li>可以以抽象类 / 新接口实现接口，这样不需要实现所有抽象类</li>\n<li>调用方法一般是 <code>接口 对象名=new 实现类构造器();</code></li>\n</ol>\n<h2 id=\"4-lambda-表达式\"><a class=\"anchor\" href=\"#4-lambda表达式\">#</a> 4. lambda 表达式</h2>\n<p>lambda 表达式极大的方便了接口的使用，它省略实现类的定义，直接在调用接口的过程中实现接口。</p>\n<p>lambda 表达式不会生成单独的.class 文件，因此效率比匿名内部类高</p>\n<h3 id=\"41-使用场景\"><a class=\"anchor\" href=\"#41-使用场景\">#</a> 4.1 使用场景</h3>\n<pre><code>\t1. 有些方法需要调用接口**（传参是接口/方法）**，如`Array.sort()`函数，其第二个参数需要调用`Comparator`比较器，而非普通的变量/对象\n\t2. 接口**仅有一个**抽象方法，且该方法有**返回值**\n</code></pre>\n<h3 id=\"42-使用规则\"><a class=\"anchor\" href=\"#42-使用规则\">#</a> 4.2 使用规则</h3>\n<ol>\n<li>\n<p>一些参数：多个参数用逗号分隔</p>\n</li>\n<li>\n<p>一个箭头：把参数传递给方法体</p>\n</li>\n<li>\n<p>一段代码：重写接口的抽象方法</p>\n</li>\n</ol>\n<p 一些代码>(参数列表)-&gt;</p>\n<p><code>method(参数1,(接口参数1,接口参数2)-&gt;&#123;方法实现代码;&#125;);</code></p>\n<p>如下：</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">Arrays.sort(string s, (String s1,String s2)-> &#123;\n    return s1.length()-s2.length();\n&#125;);\n</code></pre>\n<h3 id=\"43-简化-lambda-表达式\"><a class=\"anchor\" href=\"#43-简化lambda表达式\">#</a> 4.3 简化 lambda 表达式</h3>\n<ol>\n<li>\n<p>如果参数类型可以推断出，可以不写</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">Arrays.sort(strings, (s1,s2)-> &#123;\n    return s1.length()-s2.length();\n&#125;);//此例就可根据strings判断出s1和s2是String类型变量\n</code></pre>\n</li>\n<li>\n<p>如果只有一行代码，可省略 <code>&#123;&#125;</code>  和 <code>return</code></p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">Arrays.sort(strings, (s1,s2)-> s1.length()-s2.length());\n</code></pre>\n</li>\n<li>\n<p>如果只有一个参数，且可推断出类型， <code>()</code>  可省略</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">new JButton().addActionListener(event-> System.out.println(\"a\"));\n</code></pre>\n</li>\n</ol>\n<h3 id=\"44-方法引用比-lambda-更简\"><a class=\"anchor\" href=\"#44-方法引用比lambda更简\">#</a> 4.4 方法引用（比 lambda 更简）</h3>\n<p>使用前提：</p>\n<pre><code>1. 能用`lambda`表达式，且抽象方法只有一个参数。即在4.3.3的前提下\n2. 方法体内仅调用一个方法，且参数为抽象方法的参数。（相当于是用其他方法描述了抽象方法，或者说抽象方法引用该方法）\n</code></pre>\n<p>使用方法：已存在的对象名：：方法名代替接口实现</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">//lambda表达式：如4.3.3\nnew JButton().addActionListener(event-> System.out.println(\"a\"));\n//方法引用：     \nnew JButton().addActionListener(System.out::println);\n\n//即\nmethod(event-> System.out.println(event));\n//可用\nmethod(System.out::println);//替代\n</code></pre>\n<p>示例：</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">public static void main(String[] args) &#123;\n    method(\"hello\",event-> System.out.println(event));\n    method(\"hello\",System.out::println);\n&#125;\npublic static void memthod(String s,Consumer p)&#123;\n    p.accept(s);//传入hello\n&#125;\n</code></pre>\n<p>输出：</p>\n<p>​\t\thello</p>\n<p>​\t\thello</p>\n<h3 id=\"45-构造器引用这个用到不多没什么印象了\"><a class=\"anchor\" href=\"#45-构造器引用这个用到不多没什么印象了\">#</a> 4.5 构造器引用（这个用到不多，没什么印象了）</h3>\n<p>类名::new</p>\n<p>lambda 表达式：x-&gt;new int [x]</p>\n<p>构造器引用：int []::new</p>\n<p>对于使用哪个构造器，取决于上下文。（其实对应传递式 lambda 表达式的参数数量）</p>\n<p>创建一个 Person 类</p>\n<p>(a,b)-&gt;new Person(a,b)</p>\n<p>等价于</p>\n<p>Person::new</p>\n<h2 id=\"5-内部类\"><a class=\"anchor\" href=\"#5-内部类\">#</a> 5. 内部类</h2>\n<p>即在类的内部再次定义一个类</p>\n<ol>\n<li>可以为 <code>private</code> ，则该类对同一个包内的其他类隐藏</li>\n<li>内部类可以<strong>直接</strong>访问外部类的所有成员</li>\n<li>在外部类使用内部类方法需要先 new 一个内部类对象</li>\n</ol>\n<h3 id=\"51-内部类的引用\"><a class=\"anchor\" href=\"#51-内部类的引用\">#</a> 5.1 内部类的引用</h3>\n<ol>\n<li>\n<p>在内部类引用外部类： <code>外部类.this</code></p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">Demo01.this.method1();\n</code></pre>\n</li>\n<li>\n<p>在外部类<strong>内</strong>引用内部类：直接 new 一个内部类对象即可</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">new Inner1();\n</code></pre>\n</li>\n<li>\n<p>在外部类<strong>外</strong>引用内部类： <code>外部类.内部类</code> （前提是内部类是 public，否则无法引用）</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">System.out.println(Demo01.Inner1.class);\n</code></pre>\n</li>\n<li>\n<p>在外部类<strong>外</strong>构造内部类： <code>外部类对象.new 内部类()</code> （前提是内部类是 public）</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">new Demo01().new Inner1();\n</code></pre>\n</li>\n</ol>\n<h3 id=\"52-当内部类中出现重名变量时\"><a class=\"anchor\" href=\"#52-当内部类中出现重名变量时\">#</a> 5.2 当内部类中出现重名变量时</h3>\n<ul>\n<li>局部变量<strong>直接用</strong></li>\n<li>内部类变量用<strong> this 关键字</strong></li>\n<li>外部类变量用<strong>外部类.this. 变量名</strong></li>\n</ul>\n<h3 id=\"53-局部内部类\"><a class=\"anchor\" href=\"#53-局部内部类\">#</a> 5.3 局部内部类</h3>\n<p>在方法体内定义的类，为局部内部类。该类仅在方法内部有效</p>\n<ul>\n<li>\n<p>外部类修饰符：public/（default）</p>\n</li>\n<li>\n<p>内部类修饰符：public/protected/（default）/private</p>\n</li>\n<li>\n<p>局部内部类：什么都不能写</p>\n</li>\n</ul>\n<p>局部内部类仅能访问方法内部的局部变量。</p>\n<h3 id=\"54-匿名内部类\"><a class=\"anchor\" href=\"#54-匿名内部类\">#</a> 5.4 匿名内部类</h3>\n<p>前提：当该类仅需使用一次</p>\n<p>含义：不定义实现类，直接在使用接口时重写抽象类。</p>\n<p>​\t\t<strong>一般有多个抽象方法的接口使用匿名类，仅有一个方法的使用 lambda 表达式更简便</strong></p>\n<p>好处：省掉一个类的单独定义，使项目更加轻便</p>\n<p>匿名类的对象则可用多次使用，如下</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">Runnable runnable=new Runnable() &#123;\n    @Override\n    public void run() &#123;\n        \n    &#125;\n&#125;;//runnable可用多次使用\n</code></pre>\n<h3 id=\"55-匿名对象\"><a class=\"anchor\" href=\"#55-匿名对象\">#</a> 5.5 匿名对象</h3>\n<p>即 new 一个对象时不给他命名，该对象就仅能使用一次。</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">new Thread(new Runnable() &#123;//匿名线程对象(匿名实现类).start()\n    @Override\n    public void run() &#123;\n        \n    &#125;\n&#125;).start();\n</code></pre>\n<h1 id=\"五-异常-断言-日志\"><a class=\"anchor\" href=\"#五-异常-断言-日志\">#</a> 五、 异常、断言、日志</h1>\n<h2 id=\"1-异常\"><a class=\"anchor\" href=\"#1-异常\">#</a> 1. 异常</h2>\n<p>即处理程序运行过程中出现的各种 bug，避免不必要的程序中断。</p>\n<p><strong>目的</strong>：程序产生异常会中断，造成数据丢失，因此需要对可能出现的异常进行处理</p>\n<p><strong>做法</strong>：编写程序时声明可能产生的异常，抛出给 jvm 处理或者自行处理。避免不必要的中断</p>\n<h3 id=\"11-检查性异常和非检查性异常\"><a class=\"anchor\" href=\"#11-检查性异常和非检查性异常\">#</a> 1.1 检查性异常和非检查性异常</h3>\n<p><strong>非检查性异常</strong>：</p>\n<p>编译器不会检查的异常，如下：</p>\n<ol>\n<li>\n<p>错误的强制类型转换</p>\n</li>\n<li>\n<p>数组访问越界      <code>ArrayIndexOutOfBoundsException</code></p>\n</li>\n<li>\n<p>访问 null 指针      <code>NullPointerException</code></p>\n</li>\n</ol>\n<p>这些异常往往是编写的<strong>逻辑错误</strong>导致，应尽量避免，<strong>不需要声明抛出</strong></p>\n<p><strong>检查性异常</strong>：</p>\n<p>编译器会检查的异常，主要是用户错误操作导致，所以需要程序有处理该异常的机制</p>\n<p>如：</p>\n<ol>\n<li>文件路径访问错误</li>\n<li>参数类型错误</li>\n<li>...</li>\n</ol>\n<p><strong>我们需要处理的异常主要是检查性异常</strong></p>\n<h3 id=\"12-处理异常的方法\"><a class=\"anchor\" href=\"#12-处理异常的方法\">#</a> 1.2 处理异常的方法</h3>\n<ol>\n<li>直接 <code>throw</code>  抛出异常，交给调用该方法的地方处理或者由 jvm 处理</li>\n<li>用 <code>try-catch</code>  捕获异常，进行处理。如下</li>\n</ol>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">try&#123;\n    var in=new FileInputStream(...);//创建一个输入流\n    method1(\"c://name.tx\");//可能抛出异常的代码\ncode...\n&#125;catch (IOException e)&#123;//可能的异常类型\n    e.printStackTrace();//处理字段\n&#125;\n</code></pre>\n<p>一般来说最常见的处理方法就是输出异常信息</p>\n<h4 id=\"13-释放资源\"><a class=\"anchor\" href=\"#13-释放资源\">#</a> 1.3 释放资源</h4>\n<h4 id=\"131-关键字-finally\"><a class=\"anchor\" href=\"#131-关键字finally\">#</a> 1.3.1 关键字 finally</h4>\n<p>使用 finally 表示<strong>无论是否发生异常执行</strong>。适用于必须执行的代码，如输入输入流的关闭 <code>close</code></p>\n<p>如下：</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">try&#123;\n    var in=new FileInputStream(...);//创建一个输入流\n    method1(\"c://name.tx\");//可能抛出异常的代码\ncode...\n&#125;catch (IOException e)&#123;//可能的异常类型\n    e.printStackTrace();//处理字段\n&#125;finally &#123;\n    in.close();//关闭输入流\n&#125;\n</code></pre>\n<h4 id=\"132-自动释放资源\"><a class=\"anchor\" href=\"#132-自动释放资源\">#</a> 1.3.2 自动释放资源</h4>\n<p>在 try 后的 () 中声明资源，在 try 块退出时会自动释放该资源</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">try(var in=new FileInputStream(...);)&#123;//可以创建多个\n        \n&#125;catch (IOException e)&#123;//可能的异常类型\n    e.printStackTrace();//处理字段\n&#125;\n</code></pre>\n<h3 id=\"14-自定义异常很少用不太记得了\"><a class=\"anchor\" href=\"#14-自定义异常很少用不太记得了\">#</a> 1.4 自定义异常（很少用，不太记得了）</h3>\n<p>如果遇到了标准异常类无法描述清楚的问题，则需要自己定义异常类</p>\n<p>格式：</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">public class ExceptionCustom extends 父类异常&#123;\n    //就和最简单的子类继承父类一样\n    public ExceptionCustom() &#123;//一个无参构造函数\n    &#125;\n\n    public ExceptionCustom(String message) &#123;//一个一参构造函数\n        super(message);//message是自定义的异常描述\n    &#125;\n&#125;\n</code></pre>\n<p>用法和 Java 自带异常对象一样</p>\n<h2 id=\"2-断言缺省\"><a class=\"anchor\" href=\"#2-断言缺省\">#</a> 2. 断言（缺省）</h2>\n<ul>\n<li>编写代码时，我们总是会做出一些假设，断言就是用于在代码中捕捉这些假设。</li>\n<li>可以将断言看作是异常处理的一种高级形式。</li>\n<li>断言表示为一些布尔表达式，程序员相信在程序中的某个特定点该表达式值为真。</li>\n<li>单元测试必须使用断言 (Junit/JunitX)。</li>\n</ul>\n<h2 id=\"3-日志缺省\"><a class=\"anchor\" href=\"#3-日志缺省\">#</a> 3. 日志（缺省）</h2>\n<h1 id=\"六-反射不是很清楚\"><a class=\"anchor\" href=\"#六-反射不是很清楚\">#</a> 六、 反射（不是很清楚）</h1>\n<p>将类的各个组成部分（成员变量、成员函数、构造函数等）封装为对象。也可以被称之为专用于分析类的程序。</p>\n<p>简单点说就是把方法之类的当做变量处理。</p>\n<blockquote>\n<p>反射是框架的核心技术</p>\n</blockquote>\n<h2 id=\"1-获取类的信息\"><a class=\"anchor\" href=\"#1-获取类的信息\">#</a> 1. 获取类的信息</h2>\n<p>类在创建好后有 3 个阶段：</p>\n<ul>\n<li>\n<p>source 源码阶段：以 <code>.java</code>  和 <code>.class</code>  字节码字段的形式存储与硬盘</p>\n<ul>\n<li>\n<p>通过 <code>Class.forName(&quot;全类名&quot;)</code>  获取</p>\n</li>\n<li>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">Class.forName(\"全类名\");//全类名：包名+.类名。\n\t//返回与带有给定字符串名的类或接口相关联的 Class 对象。\n\t//加载源代码阶段的.class字节码\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>Class 类对象阶段：在 java 程序中 <code>import</code>  导包，导入该类时</p>\n<ul>\n<li>\n<p>通过 <code>类名.class</code>  获取</p>\n</li>\n<li>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">Person.class;//此处Person是自定义的一个类\n\t//加载于Class类对象阶段，即导包后\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>runtime 运行时阶段：创建该类的对象参与运行时</p>\n<ul>\n<li>\n<p>通过 <code>类对象.getClass()</code>  获取</p>\n</li>\n<li>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">new Person().getClass();\n\t//加载与runtime阶段，即创建类对象时加载\n</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"/2021/05/18/note/Java/java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E5%8F%8A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/image-20210519140330233.png\" alt=\"image-20210519140330233\"></p>\n<p>同一.class 字节码在一次程序运行过程中只会<strong>加载一次</strong>。所以以上 123 获取的 Class 对象 ==，即内存地址值是同一个</p>\n<h2 id=\"2-获取成员变量\"><a class=\"anchor\" href=\"#2-获取成员变量\">#</a> 2. 获取成员变量</h2>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">java.lang.Object\n  java.lang.reflect.AccessibleObject\n      java.lang.reflect.Field\n</code></pre>\n<p>java 中通过 <code>Field类</code>  提供有关类或接口的单个字段的信息，以及对它的动态访问权限。</p>\n<p><strong>通过 Class 类获取 Field 对象</strong></p>\n<table>\n<thead>\n<tr>\n<th>返回类型</th>\n<th>函数（Class 对象的函数）</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code> </code> [Field](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/reflect/Field.html)</td>\n<td>[<strong>getField</strong>](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/Class.html#getField (java.lang.String)) <code>(</code> [String](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/String.html) <code> name)</code>  返回指定公共成员字段。（Java 中不同数据类型的变量也不可重名）</td>\n</tr>\n<tr>\n<td><code> </code> [Field](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/reflect/Field.html) <code>[]</code></td>\n<td>[<strong>getFields</strong>](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/Class.html#getFields ()) <code>()</code>  返回所有可访问公共字段。</td>\n</tr>\n<tr>\n<td><code> </code> [Field](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/reflect/Field.html)</td>\n<td>[<strong>getDeclaredField</strong>](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/Class.html#getDeclaredField (java.lang.String)) <code>(</code> [String](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/String.html) <code> name)</code>  返回指定已声明字段。（所有修饰符）  <em>//declared</em>*：v. 公布；宣布；宣告；表明；宣称；断言；申报 (收益)*</td>\n</tr>\n<tr>\n<td><code> </code> [Field](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/reflect/Field.html) <code>[]</code></td>\n<td>[<strong>getDeclaredFields</strong>](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/Class.html#getDeclaredFields ()) <code>()</code>  返回所有字段。</td>\n</tr>\n</tbody>\n</table>\n<p><strong>通过 Field 对象操作成员变量</strong></p>\n<table>\n<thead>\n<tr>\n<th>返回类型</th>\n<th>函数（Field 对象的函数）</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code> </code> [Object](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/Object.html)</td>\n<td>[<strong>get</strong>](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/reflect/Field.html#get (java.lang.Object)) <code>(</code> [Object](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/Object.html) <code> obj)</code>  返回指定对象上该字段的值。</td>\n</tr>\n<tr>\n<td><code> </code> [String](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/String.html)</td>\n<td>[<strong>getName</strong>](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/reflect/Field.html#getName ()) <code>()</code>  返回此字段的名称。</td>\n</tr>\n<tr>\n<td><code> void</code></td>\n<td>[<strong>set</strong>](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/reflect/Field.html#set (java.lang.Object, java.lang.Object)) <code>(</code> [Object](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/Object.html) <code>obj,</code> [Object](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/Object.html) <code> value)</code>  将指定对象变量设置为指定的新值。</td>\n</tr>\n<tr>\n<td><code>void</code></td>\n<td>[<strong>setAccessible</strong>](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/reflect/AccessibleObject.html#setAccessible (boolean)) <code>(boolean flag)</code>  设置字段的 <code>accessible</code> 。 &lt;br&gt; <em>accessible：暴力反射。 <code>true</code>  表示可访问（包括 private）</em></td>\n</tr>\n</tbody>\n</table>\n<p>用法如下：</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">Class personClass= Person.class;\n//获取一个Class对象，表示的是Person类\nField field=personClass.getField(\"value1\");//value1是Person类的字段名\nSystem.out.println(field);\n//输出：public java.lang.String Person.value1\nfield.get(new Person());//获取new Person的value1的值\nfield.set(new Person(),\"字段新值\");//将new Person的value1设为新的值\n</code></pre>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">Field field1=personClass.getDeclaredField(\"value2\");\nfield1.setAccessible(true);\n//value2是私有变量，加上此句后可get/set访问\nfield1.get(person);//合法\nfield1.set(person,'c');//合法\n</code></pre>\n<h2 id=\"3-获取构造器\"><a class=\"anchor\" href=\"#3-获取构造器\">#</a> 3. 获取构造器</h2>\n<p>java 通过 <code>Constructor类</code> 来捕获类的构造器。</p>\n<p><strong>以 Class 类获取 Constructor</strong></p>\n<p>以下 <code>T</code>  表示类名</p>\n<table>\n<thead>\n<tr>\n<th>返回类型</th>\n<th>函数（Class 对象的函数）</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code> </code> [Constructor](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/reflect/Constructor.html) <code>&lt;</code> [T](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/Class.html) <code>&gt;</code></td>\n<td>[<strong>getConstructor</strong>](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/Class.html#getConstructor (java.lang.Class...)) <code>(</code> [Class](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/Class.html) <code>&lt;?&gt;... parameterTypes)</code>  返回指定公共构造方法。</td>\n</tr>\n<tr>\n<td><code> </code> [Constructor](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/reflect/Constructor.html) <code>&lt;?&gt;[]</code></td>\n<td>[<strong>getConstructors</strong>](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/Class.html#getConstructors ()) <code>()</code>  返回所有公共构造方法。</td>\n</tr>\n<tr>\n<td><code> </code> [Constructor](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/reflect/Constructor.html) <code>&lt;</code> [T](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/Class.html) <code>&gt;</code></td>\n<td>[<strong>getDeclaredConstructor</strong>](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/Class.html#getDeclaredConstructor (java.lang.Class...)) <code>(</code> [Class](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/Class.html) <code>&lt;?&gt;... parameterTypes)</code>  返回指定构造方法。</td>\n</tr>\n<tr>\n<td><code> </code> [Constructor](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/reflect/Constructor.html) <code>&lt;?&gt;[]</code></td>\n<td>[<strong>getDeclaredConstructors</strong>](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/Class.html#getDeclaredConstructors ()) <code>()</code>  返回所有构造方法。</td>\n</tr>\n</tbody>\n</table>\n<p><strong>用 Constructor 的方法使用构造器</strong></p>\n<table>\n<thead>\n<tr>\n<th>返回类型</th>\n<th>函数（Constructor 对象的函数）</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code> </code> [T](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/reflect/Constructor.html)</td>\n<td>[<strong>newInstance</strong>](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/reflect/Constructor.html#newInstance (java.lang.Object...)) <code>(</code> [Object](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/Object.html) <code>... initargs)</code>  使用此构造器构造对象</td>\n</tr>\n</tbody>\n</table>\n<p>如下</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">Constructor constructor=\npersonClass.getConstructor(int.class,String.class,char.class);\n//获取person类的指定参数的构造器\nObject p=constructor.newInstance(56,\"新值\",'c');\n//根据构造器构造一个Person类对象\n输出：\n\tPerson&#123;value=56, value1='新值', value2=c&#125;\n\n//空参构造可以直接用Class的newInstance方法\nObject p1=personClass.newInstance();//已过时\n</code></pre>\n<h2 id=\"4-获取成员函数\"><a class=\"anchor\" href=\"#4-获取成员函数\">#</a> 4. 获取成员函数</h2>\n<p>java 通过 <code>Method类</code> 来捕获操作成员函数</p>\n<p><strong>以 Class 对象获取 Method</strong></p>\n<table>\n<thead>\n<tr>\n<th>返回类型</th>\n<th>函数（Class 对象的函数）</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code> </code> [Method](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/reflect/Method.html)</td>\n<td>[<strong>getMethod</strong>](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/Class.html#getMethod (java.lang.String, java.lang.Class...)) <code>(</code> [String](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/String.html) <code>name,</code> [Class](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/Class.html) <code>&lt;?&gt;... parameterTypes)</code> &lt;br&gt; 根据指定<strong>方法名</strong>和<strong>参数类型</strong>返回指定公共方法（空参可不写参数类型）&lt;br&gt; 如 <code>personClass.getMethod(&quot;myMethod&quot;);//myMethod是个空参方法</code></td>\n</tr>\n<tr>\n<td><code> </code> [Method](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/reflect/Method.html) <code>[]</code></td>\n<td>[<strong>getMethods</strong>](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/Class.html#getMethods ()) <code>()</code>  返回所有（包括接口、从超类和超接口继承）的公共 方法。</td>\n</tr>\n<tr>\n<td><code> </code> [Method](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/reflect/Method.html)</td>\n<td>[<strong>getDeclaredMethod</strong>](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/Class.html#getDeclaredMethod (java.lang.String, java.lang.Class...)) <code>(</code> [String](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/String.html) <code>name,</code> [Class](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/Class.html) <code>&lt;?&gt;... parameterTypes)</code>  返回指定已声明方法。</td>\n</tr>\n<tr>\n<td><code> </code> [Method](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/reflect/Method.html) <code>[]</code></td>\n<td>[<strong>getDeclaredMethods</strong>](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/Class.html#getDeclaredMethods ()) <code>()</code>  返回所有方法，包括公共、保护、默认（包）访问和私有方法，但不包括继承的方法。</td>\n</tr>\n</tbody>\n</table>\n<p><strong>以 Method 对象操作方法</strong></p>\n<table>\n<thead>\n<tr>\n<th>返回类型</th>\n<th>函数（Method 对象的函数）</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code> </code> [String](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/String.html)</td>\n<td>[<strong>getName</strong>](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/reflect/Method.html#getName ()) <code>()</code>  返回此  <code>Method</code>  对象表示的方法名称。</td>\n</tr>\n<tr>\n<td><code> </code> [Object](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/Object.html)</td>\n<td>[<strong>invoke</strong>](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/reflect/Method.html#invoke (java.lang.Object, java.lang.Object...)) <code>(</code> [Object](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/Object.html) <code>obj,</code> [Object](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/Object.html) <code>... args)</code>  根据指定对象和指定参数调用此方法。</td>\n</tr>\n<tr>\n<td><code> boolean</code></td>\n<td>[<strong>isAnnotationPresent</strong>](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/reflect/AccessibleObject.html#isAnnotationPresent (java.lang.Class)) <code>(</code> [Class](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/Class.html) <code>&lt;? extends </code> [Annotation](mk:@MSITStore:C:\\Users\\nitgod\\Desktop\\JDK API 1.6.0 中文版.chm::/java/lang/annotation/Annotation.html) <code>&gt; annotationClass)</code>  如果指定类型的注释存在于此元素上，则返回 true，否则返回 false。</td>\n</tr>\n</tbody>\n</table>\n<p>如下：</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">Method method=personClass.getMethod(\"myMethod1\",String.class);\nmethod.invoke(new Person(),\"这是一个方法\");\n输出：\n\t这是一个方法\n\npublic void myMethod1(String s)&#123;\n    System.out.println(s);\n&#125;\n</code></pre>\n<h2 id=\"5-反射的意义\"><a class=\"anchor\" href=\"#5-反射的意义\">#</a> 5. 反射的意义</h2>\n<p>反射是写框架的核心技术，而框架则需要不改动代码的情况下使用任意的对象和方法</p>\n<p>∴ 反射 - 将改动代码 -&gt; 改动配置文件</p>\n<p>通过可 IO 集合的<strong>类</strong> <strong>Properties</strong> 读取配置文件，利用反射调用任意类对象的方法</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">//1.加载配置文件\n//1.1创建properties对象\nProperties pro=new Properties();\n//1.2获取class目录下的配置文件\nClassLoader classLoader=Reflect.class.getClassLoader();\n    //获取配置文件的输入流\nInputStream is=classLoader.getResourceAsStream(\"pro.properties\");\npro.load(is);//加载\n\n//2.获取配置文件中的数据\nString className=pro.getProperty(\"className\");\nString methodName=pro.getProperty(\"methodName\");\n\n//3.加载该类进内存\nClass cls=Class.forName(className);\n\n//4.创建对象\nObject obj=cls.newInstance();\n\n//5.获取方法对象\nMethod method1=cls.getMethod(methodName,String.class);\n\n//6.调用方法\nmethod1.invoke(obj,\"调用方法\");\n//5、6两处，需要知道方法的参数类型才可\n</code></pre>\n<h1 id=\"七-测试-test\"><a class=\"anchor\" href=\"#七-测试test\">#</a> 七、 测试 Test</h1>\n<h2 id=\"1-测试一般步骤\"><a class=\"anchor\" href=\"#1-测试一般步骤\">#</a> 1. 测试一般步骤</h2>\n<ol>\n<li>定义一个测试类\n<ol>\n<li>测试类名：被测试的类名 + Test</li>\n<li>包名：xxx.xxx.xx.test。一般在 Test 总包下</li>\n</ol>\n</li>\n<li>定义测试函数\n<ol>\n<li>方法名：test + 测试的方法名。或者方法名 + Test</li>\n<li>返回值：一般为 void</li>\n<li>参数列表：空参。实际上是当做 main 函数测试</li>\n<li>在方法上加上 <code>@Test</code>  注解</li>\n</ol>\n</li>\n<li>导入 <code>Junit</code>  依赖，即 <code>@Test</code>  所需的依赖包</li>\n</ol>\n<h2 id=\"2-测试技巧用断言-assert-判定结果\"><a class=\"anchor\" href=\"#2-测试技巧用断言assert判定结果\">#</a> 2. 测试技巧：用断言 assert 判定结果</h2>\n<p>一般来说，测试结果</p>\n<pre><code>1. 红色：失败\n2. 绿色：成功\n</code></pre>\n<p>用断言 assert 来处理判定结果 Assert.assertEquals (期望值，实际值);</p>\n<p>如下：</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">@Test\npublic void testAdd()&#123;\n    int res=new demo01().add(1,2);\n    Assert.assertEquals(3,res);\n&#125;\n</code></pre>\n<p>如果 res 和期望值不同，则会显示</p>\n<p>java.lang.AssertionError:</p>\n<p>Expected :3</p>\n<p>Actual  :2</p>\n<h2 id=\"3-测试技巧注解-after-和-before\"><a class=\"anchor\" href=\"#3-测试技巧注解after和before\">#</a> 3. 测试技巧：注解 <code>@after</code>  和 <code>@before</code></h2>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">@Before\npublic void before()&#123;\n    System.out.println(\"该方法会在所有测试方法执行之前执行\");\n&#125;\n\n@After\npublic void after()&#123;\n    System.out.println(\"该方法会在所有测试方法执行之后执行\");\n&#125;\n</code></pre>\n<p><code>@Before</code>  一般用来申请资源</p>\n<p><code>@After</code>  一般用来释放资源</p>\n<h1 id=\"七-集合\"><a class=\"anchor\" href=\"#七-集合\">#</a> 七、 集合</h1>\n<p>相当于 C++ 中的容器，jdk 定义好各种数据结构，提供相应接口，程序员只需使用特定接口而不用管底层原理</p>\n<p>集合采用接口与实现分离的方式。</p>\n<p><strong>接口</strong>是指一个数据结构的大类（栈、队列、散列表等）</p>\n<p><strong>实现类</strong>是细化功能（如用数组还是链表）</p>\n<p>即使用多态</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">List<integer>list=new ArrayList<>();\n</integer></code></pre>\n<h2 id=\"1-collection-接口\"><a class=\"anchor\" href=\"#1-collection接口\">#</a> 1. Collection 接口</h2>\n<p>除了 <code>map</code> ，其他所有的集合都继承了 <code>collection</code>  接口</p>\n<p><code>list</code>  接口（有序）： <code>ArrayList</code> 、 <code>LinkedList</code> 、 <code>Vector</code>  实现类</p>\n<p><code>set</code>  接口（无序）： <code>HashSet</code> -&gt; <code>LinkedHashSet</code> 、 <code>TreeSet</code>  实现类</p>\n<p><code>queue</code>  接口： <code>deque</code></p>\n<h3 id=\"11-collection-接口通用方法\"><a class=\"anchor\" href=\"#11-collection接口通用方法\">#</a> 1.1 Collection 接口通用方法</h3>\n<table>\n<thead>\n<tr>\n<th>返回类型</th>\n<th>函数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code> boolean</code></td>\n<td><code>add(E e)</code>  将元素添加到集合尾，成功返回 true</td>\n</tr>\n<tr>\n<td><code> boolean</code></td>\n<td><code>addAll(Collection&lt;? extends E&gt; c)</code>  将指定 collection 中的所有元素都添加到此 collection 中（可选操作）。</td>\n</tr>\n<tr>\n<td><code> void</code></td>\n<td><code>clear()</code>  清空</td>\n</tr>\n<tr>\n<td><code> boolean</code></td>\n<td><code>contains(Object o)</code>  查找</td>\n</tr>\n<tr>\n<td><code> boolean</code></td>\n<td><code>containsAll(Collection&lt;?&gt; c) 是否包含c的所有元素</code></td>\n</tr>\n<tr>\n<td><code> boolean</code></td>\n<td><code>equals(Object o) 元素是否对应相等（set中重载）</code></td>\n</tr>\n<tr>\n<td><code> int</code></td>\n<td><code>hashCode()</code>  返回此 collection 的哈希码值。</td>\n</tr>\n<tr>\n<td><code> boolean</code></td>\n<td><code>isEmpty()</code>  是否为空</td>\n</tr>\n<tr>\n<td><code> Iterator&lt;E&gt;</code></td>\n<td><code>iterator()</code>  返回迭代器。*//*<em> 默认从第一个元素之前开始</em></td>\n</tr>\n<tr>\n<td><code> boolean</code></td>\n<td><code>remove(Object o)</code>  按元素移除</td>\n</tr>\n<tr>\n<td><code> boolean</code></td>\n<td><code>removeAll(Collection&lt;?&gt; c) 移除c在此集合中的元素</code></td>\n</tr>\n<tr>\n<td><code> int</code></td>\n<td><code>size()</code>  返回长度</td>\n</tr>\n<tr>\n<td><code> Object[]</code></td>\n<td><code>toArray()</code>  返回数组。</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"2-迭代器-iterator\"><a class=\"anchor\" href=\"#2-迭代器iterator\">#</a> 2. 迭代器 iterator</h2>\n<p>类似指针的用法</p>\n<p>获取：</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">Iterator<integer>iterator=collection.iterator();//迭代器的泛型和集合一致\n</integer></code></pre>\n<table>\n<thead>\n<tr>\n<th>返回类型</th>\n<th>函数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code> boolean</code></td>\n<td><code>hasNext()</code>  如果仍有元素可以迭代，则返回  <code>true</code> 。</td>\n</tr>\n<tr>\n<td><code> E</code></td>\n<td><code>next()</code>  返回迭代的下一个元素，并且迭代到下一个元素。</td>\n</tr>\n<tr>\n<td><code> void</code></td>\n<td><code>remove()</code>  移除迭代器指向的元素</td>\n</tr>\n</tbody>\n</table>\n<p>示例：用迭代器遍历集合</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">while(iterator.hasNext())\n    iterator.next();\n</code></pre>\n<h2 id=\"3-集合概览\"><a class=\"anchor\" href=\"#3-集合概览\">#</a> 3. 集合概览</h2>\n<p>详细的集合使用在之后的文档中列出，也可参考 jdk 文档</p>\n<table>\n<thead>\n<tr>\n<th>集合名</th>\n<th>特点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ArrayList</td>\n<td>可以动态增长和缩减的一个索引序列</td>\n</tr>\n<tr>\n<td>LinkedList</td>\n<td>可以在任何位置高效插入和删除的有序序列</td>\n</tr>\n<tr>\n<td>HashSet</td>\n<td>没有重复元素的无序集合</td>\n</tr>\n<tr>\n<td>HashMap</td>\n<td>哈希表</td>\n</tr>\n<tr>\n<td><strong>以上 4 个较为常用</strong></td>\n<td></td>\n</tr>\n<tr>\n<td>ArrayDeque</td>\n<td>实现为循环数组的一个双端队列</td>\n</tr>\n<tr>\n<td>TreeSet</td>\n<td>一个有序集</td>\n</tr>\n<tr>\n<td>EnumSet</td>\n<td>包含枚举类型的集</td>\n</tr>\n<tr>\n<td>LinkedHashSet</td>\n<td>可记住元素插入次序的集</td>\n</tr>\n<tr>\n<td>PriorityQueue</td>\n<td>允许高效删除最小元素的集合</td>\n</tr>\n<tr>\n<td>TreeMap</td>\n<td>键有序的映射</td>\n</tr>\n<tr>\n<td>EnumMap</td>\n<td>键属于枚举类型的映射</td>\n</tr>\n<tr>\n<td>LinkedHashMap</td>\n<td>可以记住键 / 值对添加次序的映射</td>\n</tr>\n<tr>\n<td>WeakHashMap</td>\n<td>值不会在别处使用时就可以被垃圾回收的映射</td>\n</tr>\n<tr>\n<td>IdentityHashMap</td>\n<td>用 == 而不是用 equals 比较键的映射</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"4-泛型\"><a class=\"anchor\" href=\"#4-泛型\">#</a> 4. 泛型</h2>\n<p>当创建集合时不知道用什么类型定义，则可以用泛型</p>\n<p>Java 泛型中的标记符含义：</p>\n<ul>\n<li>\n<p>E - Element (在集合中使用，因为集合中存放的是元素)</p>\n</li>\n<li>\n<p>T - Type（Java 类）</p>\n</li>\n<li>\n<p>K - Key（键）</p>\n</li>\n<li>\n<p>V - Value（值）</p>\n</li>\n<li>\n<p>N - Number（数值类型）</p>\n</li>\n<li>\n<p>？ - 表示不确定的 java 类型</p>\n</li>\n</ul>\n<p>如 <code>ArrayList&lt;E&gt;、Collection&lt;E&gt;</code> ……</p>\n<p>泛型在创建对象时确定，如下：</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">List<integer>list=new ArrayList<>();//此时E为Integer\n</integer></code></pre>\n<p>把数据类型作为参数传递，复制给泛型 E</p>\n<h3 id=\"41-不适用泛型创建集合\"><a class=\"anchor\" href=\"#41-不适用泛型创建集合\">#</a> 4.1 不适用泛型创建集合</h3>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">ArrayList array=new ArrayList();\narray.add(1);\narray.add(\"ssss\");\n</code></pre>\n<p>好处：可以添加任意类型元素</p>\n<p>坏处：不安全，容易引起异常（如类型转换等）</p>\n<p>对应的迭代器也不适用泛型。</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">Iterator iterator=array.iterator();//对应的迭代器也不使用泛型\n</code></pre>\n<h3 id=\"42-使用泛型创建集合对象\"><a class=\"anchor\" href=\"#42-使用泛型创建集合对象\">#</a> 4.2 使用泛型创建集合对象</h3>\n<p>好处：</p>\n<ol>\n<li>\n<p>简单，避免了类型转换的异常</p>\n</li>\n<li>\n<p>把运行期异常提前到了编译器（运行时才发现的错误编译的时候就给你报错）</p>\n</li>\n</ol>\n<p>坏处：只能存单一类型的元素</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">ArrayList<integer> array2=new ArrayList<>();\n\n//而对应的迭代器也要用泛型\nIterator<integer> iterator=array2.iterator();\n</integer></integer></code></pre>\n<h2 id=\"5-自定义泛型类\"><a class=\"anchor\" href=\"#5-自定义泛型类\">#</a> 5. 自定义泛型类</h2>\n<h3 id=\"51-创建类\"><a class=\"anchor\" href=\"#51-创建类\">#</a> 5.1 创建类</h3>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">class GenericClass<e>&#123;\n    private String name;\n    private E id;\n    private E classId;\n\n..............................\n//各种方法\n&#125;\n</e></code></pre>\n<h3 id=\"52-新建对象并使用\"><a class=\"anchor\" href=\"#52-新建对象并使用\">#</a> 5.2 新建对象并使用</h3>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">GenericClass<integer>student=new GenericClass<>(\"小明\",65,152);\n//该对象的泛型E就变成了Integer类型\nstudent.setId(73);\nSystem.out.println(student.getClassId()+\" \"+student.getId());\n//152 73\n</integer></code></pre>\n<h3 id=\"53-创建普通类中的泛型方法\"><a class=\"anchor\" href=\"#53-创建普通类中的泛型方法\">#</a> 5.3 创建普通类中的泛型方法</h3>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">class GenericMethod&#123;\n    public <m> void method(M m)&#123;\n        System.out.println(m);\n    &#125;\n&#125;\n\n//泛型M在调用方法时传入的参数是什么类型就变为什么类型\nGenericMethod demo=new GenericMethod();\ndemo.method(\"hahaha\");\n//M可以是任何字符，甚至可以是中文\npublic <泛型> void method1(泛型 泛型)&#123;\n    System.out.println(泛型);\n&#125;\n\n//静态方法也可以用泛型\npublic static <泛型> void method2(泛型 泛型)&#123;\n    System.out.println(泛型);\n&#125;\n//调用\nGenericMethod.method2(\"泛型\");//输出：泛型\n\n</泛型></泛型></m></code></pre>\n<h3 id=\"54-创建有泛型的接口\"><a class=\"anchor\" href=\"#54-创建有泛型的接口\">#</a> 5.4 创建有泛型的接口</h3>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">public interface GenericInterface <e>&#123;\n    public abstract void method(E e);\n&#125;\n</e></code></pre>\n<ol>\n<li>\n<p>泛型在实现类中确定类型，如 <code>Iterator</code>  接口</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">public class GenericInterfaceImp implements GenericInterface <integer>&#123;\n    @Override\n    public void method(Integer integer) &#123;\n\n    &#125;\n&#125;\nGenericInterface pp=new GenericInterfaceImp();\npp.method(4456);//4456\n</integer></code></pre>\n</li>\n<li>\n<p>在创建对象时确定泛型，如 <code>ArrayList</code></p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">public class GenericInterfaceImp2 implements GenericInterface&#123;\n    @Override\n    public void method(Object o) &#123;\n        System.out.println(o);\n    &#125;\n&#125;\nGenericInterface<integer>pq=new GenericInterfaceImp2();\npq.method(4567);//4567\n</integer></code></pre>\n</li>\n</ol>\n<h3 id=\"55-泛型通配符\"><a class=\"anchor\" href=\"#55-泛型通配符\">#</a> 5.5 泛型通配符：?</h3>\n<p>？：代表任意数据类型。不能创建对象使用，只能作为方法的参数使用</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">public static void pra(ArrayList<?> list)&#123;\n    System.out.println(list);\n&#125;\n//主函数：\n    ArrayList<string> str=new ArrayList<>();\n    str.add(\"122\");\n    ArrayList<integer> in=new ArrayList<>();\n    in.add(123);\n    pra(str);\n    pra(in);\n</integer></string></code></pre>\n",
            "tags": [
                "笔记",
                "Java",
                "Java",
                "面向对象"
            ]
        },
        {
            "id": "https://nitgod1996.com/2021/05/17/note/%E9%9A%8F%E7%AC%94/%E9%9A%8F%E7%AC%94-Java%E8%B0%83%E7%94%A8Python%E8%84%9A%E6%9C%AC/",
            "url": "https://nitgod1996.com/2021/05/17/note/%E9%9A%8F%E7%AC%94/%E9%9A%8F%E7%AC%94-Java%E8%B0%83%E7%94%A8Python%E8%84%9A%E6%9C%AC/",
            "title": "随笔-Java调用Python脚本",
            "date_published": "2021-05-17T04:24:00.000Z",
            "content_html": "<h1 id=\"一-rest\"><a class=\"anchor\" href=\"#一-rest\">#</a> 一、 REST</h1>\n<h2 id=\"1-什么是-rest-以及-restful\"><a class=\"anchor\" href=\"#1-什么是rest以及restful\">#</a> 1. 什么是 REST 以及 RESTful</h2>\n<blockquote>\n<p>REST 指的是一组架构约束条件和原则。&quot; 如果一个架构符合 REST 的约束条件和原则，我们就称它为 RESTful 架构。</p>\n</blockquote>\n<p>​\t\t相当于是编写 API 的一套规则，像高德地图提供的 API。</p>\n<table>\n<thead>\n<tr>\n<th>URL</th>\n<th><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yZXN0YXBpLmFtYXAuY29tL3YzL3BsYWNlL3RleHQ/cGFyYW1ldGVycw==\">https://restapi.amap.com/v3/place/text?parameters</span></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>请求方式</td>\n<td>GET</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>上面是高德地图提供的 API，返回的是 json 格式的数据信息。</p>\n</blockquote>\n<p>以下介绍 REST 的几大概念：</p>\n<ul>\n<li>资源与 URI</li>\n<li>统一资源接口</li>\n<li>资源的表述</li>\n<li>资源的链接</li>\n<li>状态的转移</li>\n</ul>\n<h3 id=\"11-资源与-uri\"><a class=\"anchor\" href=\"#11-资源与uri\">#</a> 1.1 资源与 URI</h3>\n<p>URI 是用于标记网络上的资源的<em>唯一标识</em></p>\n<blockquote>\n<p>要让一个资源可以被识别，需要有个唯一标识，在 Web 中这个唯一标识就是 URI (Uniform Resource Identifier)。</p>\n</blockquote>\n<p>URI 既可以看成是资源的地址，也可以看成是资源的名称。</p>\n<p>以下是 URI 的编写技巧：</p>\n<ul>\n<li>使用_或 - 分隔单词。如 http://www.oschina.net/news/38119/oschina-translate-reward-plan。</li>\n<li>使用 / 来表示资源的层级关系</li>\n<li>使用？用来参数传递，&amp; 分隔参数\n<ul>\n<li>如 https://restapi.amap.com/v3/place/text?keywords = 北京大学 &amp; city=beijing&amp;output=xml&amp;offset=20&amp;page=1&amp;key=&lt;用户的 key&gt;&amp;extensions=all</li>\n</ul>\n</li>\n<li>, 或；可以用来表示同级资源的关系</li>\n</ul>\n<h3 id=\"12-统一资源接口\"><a class=\"anchor\" href=\"#12-统一资源接口\">#</a> 1.2 统一资源接口</h3>\n<blockquote>\n<p>RESTful 架构应该遵循统一接口原则，接口应该使用标准的 HTTP 方法如 GET，PUT 和 POST，并遵循这些方法的语义。</p>\n</blockquote>\n<h3 id=\"13-资源的表述\"><a class=\"anchor\" href=\"#13-资源的表述\">#</a> 1.3 资源的表述</h3>\n<blockquote>\n<p>客户端通过 HTTP 方法可以获取资源。确切的说，客户端获取的只是资源的表述而已。</p>\n</blockquote>\n<p>​\t\t资源在外界的具体呈现，可以有多种形式。在客户端和服务端之间传送的也是资源的表述，而不是资源本身。</p>\n<p>​\t\t 例如文本资源可以采用 html、xml、json 等格式，图片可以使用 PNG 或 JPG 展现出来。</p>\n<blockquote>\n<p>资源的表述包括数据和元数据（描述数据的数据），例如，HTTP 头 &quot;Content-Type&quot; 就是这样一个元数据属性。</p>\n</blockquote>\n<p>​\t\t客户端需要在 <code>Request</code>  头通过 <code>Accept</code>  说明自己需要的格式，而服务端在 <code>Content-Type</code>  返回该格式。如果不支持返回该格式，则报<strong> 406 错误</strong></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS93M2Nub3RlL3Jlc3RmdWwtYXJjaGl0ZWN0dXJlLmh0bWw=\">参考菜鸟教程</span></p>\n<h2 id=\"2-python-编写简单的-restful-api\"><a class=\"anchor\" href=\"#2-python编写简单的restful-api\">#</a> 2. python 编写简单的 RESTful API</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTIyMTIxNTcvYXJ0aWNsZS9kZXRhaWxzLzc4MjE2MjY3\">参考博客</span></p>\n<h3 id=\"21-安装-flask-库\"><a class=\"anchor\" href=\"#21-安装flask库\">#</a> 2.1 安装 flask 库</h3>\n<p>使用豆瓣源</p>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">pip install flask -i http://pypi.douban.com/simple/ --trusted-host pypi.douban.com\n</code></pre>\n<h3 id=\"22-编写简单代码测试一下\"><a class=\"anchor\" href=\"#22-编写简单代码测试一下\">#</a> 2.2 编写简单代码测试一下</h3>\n<pre class=\" language-language-python\"><code class=\"language-language-python\">from flask import Flask\napp = Flask(__name__)\n@app.route('/')  \ndef hello_world():\n    return \"hello world\"\nif __name__=='__main__':\n    app.run()\n</code></pre>\n<h3 id=\"23-访问-localhost5000\"><a class=\"anchor\" href=\"#23-访问localhost5000\">#</a> 2.3 访问 localho​st:50​00</h3>\n<p><img data-src=\"/2021/05/17/note/%E9%9A%8F%E7%AC%94/%E9%9A%8F%E7%AC%94-Java%E8%B0%83%E7%94%A8Python%E8%84%9A%E6%9C%AC/image-20210516142311629.png\" alt=\"image-20210516142311629\"></p>\n<h3 id=\"24-flask-介绍\"><a class=\"anchor\" href=\"#24-flask介绍\">#</a> 2.4 Flask 介绍</h3>\n<blockquote>\n<p>Flask 是一个使用 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9QeXRob24=\">Python</span> 编写的轻量级 Web 应用框架。它可以很好地结合<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9NVkMlRTYlQTglQTElRTUlQkMlOEYvNzEzMTQ3\"> MVC 模式</span>进行开发，开发人员分工合作，小型团队在短时间内就可以完成功能丰富的中小型网站或<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9XZWIlRTYlOUMlOEQlRTUlOEElQTEvMjgzNzU5Mw==\"> Web 服务</span>的实现。</p>\n</blockquote>\n<h3 id=\"25-总结\"><a class=\"anchor\" href=\"#25-总结\">#</a> 2.5 总结</h3>\n<p>​\t\t此方法是通过调用 flask 部署到线上的 API 实现的 Java-Python 交互。</p>\n<ol>\n<li>\n<p>优点：</p>\n<ol>\n<li>调用方便，直接调取 API 即可获取数据。</li>\n<li>减少耦合度</li>\n</ol>\n</li>\n<li>\n<p>缺点是需要提前部署，且不能断开</p>\n</li>\n</ol>\n<h1 id=\"二-rpc\"><a class=\"anchor\" href=\"#二-rpc\">#</a> 二、 RPC</h1>\n<h2 id=\"1-什么是-rpc\"><a class=\"anchor\" href=\"#1-什么是rpc\">#</a> 1. 什么是 RPC</h2>\n<p>RPC：Remote Procedure Call 远程过程调用</p>\n<blockquote>\n<p>RPC 就是要像调用本地的函数一样去调远程函数。</p>\n</blockquote>\n<p>在远程调用时，我们需要执行的函数体是在远程的机器上的。以下是一些 RPC 的概念</p>\n<h3 id=\"11-call-id-映射\"><a class=\"anchor\" href=\"#11-call-id映射\">#</a> 1.1 Call ID 映射</h3>\n<p>​\t我们如何告诉远程机器我们要调用哪个函数？</p>\n<ul>\n<li>\n<p>在本地调用中：函数体是直接通过函数指针来指定的。</p>\n</li>\n<li>\n<p>在 RPC 中：每个函数都有自己的一个 ID，这个 ID 是所有进程中都是唯一确定的。<strong>客户端在做远程过程调用时，必须附上这个 ID。</strong></p>\n</li>\n</ul>\n<h3 id=\"12-序列化和反序列化\"><a class=\"anchor\" href=\"#12-序列化和反序列化\">#</a> 1.2 序列化和反序列化</h3>\n<p>​\t\t客户端怎么把参数值传给远程的函数呢？</p>\n<ul>\n<li>本地调用中：我们只需要把参数压到栈里，然后让函数自己去栈里读就行。</li>\n<li>RPC 中：需要客户端把<strong>参数</strong>先转成一个字节流，传给服务端后，再把字节流转成自己能读取的格式。这个过程叫序列化和反序列化。</li>\n</ul>\n<h3 id=\"13-网络传输\"><a class=\"anchor\" href=\"#13-网络传输\">#</a> 1.3 网络传输</h3>\n<p>​\t\t客户端和服务端是通过网络连接的。所有的数据都需要通过网络传输，因此就需要有一个网络传输层。</p>\n<p>​\t\t尽管大部分 RPC 框架都使用 TCP 协议，但其实 UDP 也可以。</p>\n<h2 id=\"2-rpc-与-rest-的区别\"><a class=\"anchor\" href=\"#2-rpc与rest的区别\">#</a> 2. RPC 与 REST 的区别</h2>\n<blockquote>\n<p>REST 是一种架构风格，指的是一组架构约束条件和原则。满足这些约束条件和原则的应用程序或设计就是 RESTful。</p>\n</blockquote>\n<p>大部分的 REST 的实现中使用了 RPC 的机制，大致与有三部分组成：</p>\n<ol>\n<li>\n<p>method：访问方式， <code>get</code> ， <code>post</code>  之类的</p>\n</li>\n<li>\n<p>Host/post：URI (统一资源标识)、服务器，端口</p>\n</li>\n<li>\n<p>Path：路径</p>\n</li>\n</ol>\n<blockquote>\n<p>RPC 是远程过程调用，就是像调用本地方法一样调用远程方法</p>\n</blockquote>\n<p>通常的调用过程，把函数序列化，远端收到后，再把函数反序列化，完成函数调用。</p>\n<table>\n<thead>\n<tr>\n<th>比较项</th>\n<th>REST</th>\n<th>RPC</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>通信协议</td>\n<td>HTTP</td>\n<td>一般使用 TCP</td>\n</tr>\n<tr>\n<td>性能</td>\n<td>低</td>\n<td>高</td>\n</tr>\n<tr>\n<td>灵活度</td>\n<td>高</td>\n<td>低</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"2-实现-java-调用-python-函数\"><a class=\"anchor\" href=\"#2-实现java调用python函数\">#</a> 2. 实现 Java 调用 Python 函数</h2>\n<p>主要 RPC 适用 C/S 模式的项目，还需要搭配 Netty，所以暂时放弃此方法。</p>\n<h1 id=\"三-直接使用-runtime-推荐\"><a class=\"anchor\" href=\"#三-直接使用runtime推荐\">#</a> 三、 直接使用 Runtime (推荐)</h1>\n<p>​\t\t在 Java 中如果需要调用第三方程序 / 脚本，可以直接通过 Runtime 实现，这也是最直接最粗暴的做法。</p>\n<h2 id=\"1-无参调用\"><a class=\"anchor\" href=\"#1-无参调用\">#</a> 1. 无参调用</h2>\n<h3 id=\"11-python-代码\"><a class=\"anchor\" href=\"#11-python代码\">#</a> 1.1 Python 代码</h3>\n<p><code>runtimeDemo2.py</code></p>\n<pre class=\" language-language-python\"><code class=\"language-language-python\">import sys\nsys.path.append('../')  # 新加入的\nfrom Java_connect_Python.funDemo import hello\nimport numpy as np\na=np.array([1,2,3])\n\nif __name__ == '__main__':\n    print(a)\n    hello()\n</code></pre>\n<p><code>funDemo.py</code></p>\n<pre class=\" language-language-python\"><code class=\"language-language-python\">def hello():\n    print('Hello,Python')\n</code></pre>\n<h3 id=\"12-java-代码\"><a class=\"anchor\" href=\"#12-java代码\">#</a> 1.2 java 代码</h3>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">package com.example.simpleDemo;\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\n \npublic class RuntimeDemo02 &#123;\n\n    public static void main(String[] args) &#123;\n        String executer = \"python\";\n        // python绝对路径\n        String file_path = \"F:\\\\project\\\\demo01\\\\Java_connect_Python\\\\runtimeDemo2.py\";\n        String[] command_line = new String[] &#123;executer, file_path&#125;;\n        try &#123;\n          //  Process process = Runtime.getRuntime().exec(command_line);\n            Process process = Runtime.getRuntime().exec(command_line,null,new File(\"F:\\\\project\\\\demo01\\\\Java_connect_Python\"));\n            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream(),\"GBK\"));\n            String line;\n            while ((line = in.readLine()) != null) &#123;\n                System.out.println(line);\n            &#125;\n            in.close();\n            // java代码中的 process.waitFor() 返回值（和我们通常意义上见到的0与1定义正好相反）\n            // 返回值为0 - 表示调用python脚本成功；\n            // 返回值为1 - 表示调用python脚本失败。\n            int re = process.waitFor();\n            System.out.println(\"调用 python 脚本是否成功：\" + re);\n        &#125; catch (IOException e1) &#123;\n            e1.printStackTrace();\n        &#125; catch (InterruptedException e) &#123;\n            e.printStackTrace();\n        &#125;\n    &#125;\n&#125;\n</code></pre>\n<h2 id=\"2-传参调用\"><a class=\"anchor\" href=\"#2-传参调用\">#</a> 2. 传参调用</h2>\n<h3 id=\"21-python-代码\"><a class=\"anchor\" href=\"#21-python代码\">#</a> 2.1 Python 代码</h3>\n<p><code>add.py</code></p>\n<pre class=\" language-language-python\"><code class=\"language-language-python\"># coding=utf-8\nfrom sys import argv\n \na = argv[1]\nb = argv[2]\nres = int(a) + int(b)\nprint(res)\n</code></pre>\n<h3 id=\"22-java-代码\"><a class=\"anchor\" href=\"#22-java代码\">#</a> 2.2 Java 代码</h3>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">package com.example.simpleDemo;\n\nimport java.io.DataInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\n\npublic class RuntimeDemo01 &#123;\n    public static void main(String[] args) throws IOException, InterruptedException &#123;\n        String exe = \"python\";\n        String command = \"F:\\\\project\\\\demo01\\\\Java_connect_Python\\\\add.py\";\n        String num1 = \"1\";\n        String num2 = \"2\";\n        String[] cmdArr = new String[] &#123;exe, command, num1, num2&#125;;\n        Process process = Runtime.getRuntime().exec(cmdArr);\n        InputStream is = process.getInputStream();\n        DataInputStream dis = new DataInputStream(is);\n        String str = dis.readLine();\n        process.waitFor();\n        System.out.println(str);\n    &#125;\n&#125;\n</code></pre>\n<h2 id=\"3-解析\"><a class=\"anchor\" href=\"#3-解析\">#</a> 3. 解析</h2>\n<h3 id=\"31-当-py-调用其他-py-函数时\"><a class=\"anchor\" href=\"#31-当py调用其他py函数时\">#</a> 3.1 当 py 调用其他 py 函数时</h3>\n<p>​\t\t当 Java 需要调用的 py 脚本，其内部引用了其他 py 脚本定义的函数时，需要指定其包的路径，否则找不到模块。</p>\n<ol>\n<li>\n<p>在 py 文件添加</p>\n<pre class=\" language-language-python\"><code class=\"language-language-python\">import sys\nsys.path.append('../')  # 新加入的\n</code></pre>\n</li>\n<li>\n<p>Java 调用时，使用 <code>Runtime.getRuntime().exec(cmd,null,new File(path));</code>  方法</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">String executer = \"python\";\n// python绝对路径\nString file_path = \"F:\\\\project\\\\demo01\\\\Java_connect_Python\\\\runtimeDemo2.py\";\nString[] command_line = new String[] &#123;executer, file_path&#125;;\nProcess process = Runtime.getRuntime().exec(command_line,null,new File(\"F:\\\\project\\\\demo01\\\\Java_connect_Python\"));\n</code></pre>\n</li>\n</ol>\n<h3 id=\"32-步骤解析\"><a class=\"anchor\" href=\"#32-步骤解析\">#</a> 3.2 步骤解析</h3>\n<ol>\n<li>\n<p>通过 <code>Runtime.getRuntime().exec()</code>  创建进程类 <code>Process</code> 。</p>\n<ol>\n<li>\n<p>定义命令行执行脚本的语句 <code>command_line</code></p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">String executer = \"python\";// python绝对路径\nString file_path = \"F:\\\\project\\\\demo01\\\\Java_connect_Python\\\\runtimeDemo2.py\";\nString[] command_line = new String[] &#123;executer, file_path&#125;;\n</code></pre>\n<p><strong>如果是需要传参的，那么在 <code>command_line</code>  中添加，如下</strong></p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">String num1 = \"1\";\nString num2 = \"2\";\nString[] command_line = new String[] &#123;executer, file_path,num1,num2&#125;;\n</code></pre>\n</li>\n<li>\n<p>定义模块路径（py 的项目路径） <code>module_path</code></p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">String module_path=\"F:\\\\project\\\\demo01\\\\Java_connect_Python\";\n</code></pre>\n</li>\n<li>\n<p>创建进程类 <code>process</code></p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">Process process = Runtime.getRuntime().exec(command_line,null,new File(module_path));\n</code></pre>\n</li>\n</ol>\n</li>\n<li>\n<p>捕获 <code>process</code>  的输出流，读取输出内容</p>\n<ol>\n<li>\n<p>创建 <code>process</code>  的输入流，此处选择 <code>reader</code> ，可以识别汉语字码</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">InputStreamReader is = new InputStreamReader(process.getInputStream(),\"GBK\");\n</code></pre>\n</li>\n<li>\n<p>捕获输出流</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">BufferedReader in = new BufferedReader(is);\n</code></pre>\n</li>\n<li>\n<p>读取输出内容</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">String line;\nwhile ((line = in.readLine()) != null) &#123;\n    System.out.println(line);\n&#125;\n</code></pre>\n</li>\n<li>\n<p>关闭输出流</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">in.close();\n</code></pre>\n</li>\n</ol>\n</li>\n<li>\n<p>打印状态信息</p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">// java代码中的 process.waitFor() 返回值（和我们通常意义上见到的0与1定义正好相反）\n// 返回值为0 - 表示调用python脚本成功；\n// 返回值为1 - 表示调用python脚本失败。\nint re = process.waitFor();\nSystem.out.println(\"调用 python 脚本是否成功：\" + re);\n</code></pre>\n</li>\n</ol>\n<p><strong>完整代码如下</strong></p>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">String executer = \"python\";// python绝对路径\nString file_path = \"F:\\\\project\\\\demo01\\\\Java_connect_Python\\\\runtimeDemo2.py\";\nString num1 = \"1\";\nString num2 = \"2\";\nString[] command_line = new String[] &#123;executer, file_path,num1,num2&#125;;\nString module_path=\"F:\\\\project\\\\demo01\\\\Java_connect_Python\";\ntry &#123;\n    Process process = Runtime.getRuntime().exec(command_line,null,new File(module_path));\n    InputStreamReader is = new InputStreamReader(process.getInputStream(),\"GBK\");\n    BufferedReader in = new BufferedReader(is);\n    String line;\n    while ((line = in.readLine()) != null) &#123;\n        System.out.println(line);\n    &#125;\n    in.close();\n    // java代码中的 process.waitFor() 返回值（和我们通常意义上见到的0与1定义正好相反）\n    // 返回值为0 - 表示调用python脚本成功；\n    // 返回值为1 - 表示调用python脚本失败。\n    int re = process.waitFor();\n    System.out.println(\"调用 python 脚本是否成功：\" + re);\n&#125; catch (IOException e1) &#123;\n    e1.printStackTrace();\n&#125; catch (InterruptedException e) &#123;\n    e.printStackTrace();\n&#125;\n</code></pre>\n<h3 id=\"33-函数解析\"><a class=\"anchor\" href=\"#33-函数解析\">#</a> 3.3 函数解析</h3>\n<h4 id=\"331-类-runtime\"><a class=\"anchor\" href=\"#331-类runtime\">#</a> 3.3.1 类 <code>Runtime</code></h4>\n<p>每个 Java 应用程序都有一个  <code>Runtime</code>  类实例，使应用程序能够与其运行的环境相连接。可以通过   <code>getRuntime</code>  方法获取当前运行时。</p>\n<table>\n<thead>\n<tr>\n<th>返回值类型</th>\n<th>函数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>static Runtime</code></td>\n<td><code>Runtime.getRuntime()</code>  &lt;br/&gt;        返回与当前 Java 应用程序相关的运行时对象。</td>\n</tr>\n<tr>\n<td><code>Process</code></td>\n<td><code>Runtime.getRuntime().exec(String[] cmdarray, String[] envp, File dir) </code>          &lt;br&gt;        在指定环境和工作目录的独立进程中执行指定的命令和变量。</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"332-类-process\"><a class=\"anchor\" href=\"#332-类process\">#</a> 3.3.2 类 <code>Process</code></h4>\n<p>可通过 <code>ProcessBuilder.start()</code>  和  <code>Runtime.exec </code> 方法创建一个本机进程，并返回  <code>Process</code>  子类的一个实例，该实例可用来控制进程并获得相关信息。</p>\n<p><code>Process </code> 类提供了执行从<strong>进程输入、执行输出到进程、等待进程完成、检查进程的退出状态以及销毁（杀掉）进程</strong>的方法。</p>\n<table>\n<thead>\n<tr>\n<th>返回值类型</th>\n<th>函数（以下 process 是 Process 的对象）</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>abstract  InputStream</code></td>\n<td><code>process.getInputStream() </code>  &lt;br/&gt;        获取子进程的输入流。</td>\n</tr>\n<tr>\n<td><code>abstract  OutputStream</code></td>\n<td><code>process.getOutputStream() </code>          &lt;br&gt;        获取子进程的输出流。</td>\n</tr>\n<tr>\n<td><code>abstract  int</code> &lt;br&gt; 返回：进程的出口值。&lt;br&gt;0 表示正常终止，1 表示有错误</td>\n<td><code>process.waitFor()</code>  &lt;br&gt;        导致当前线程等待，如有必要，一直要等到由该 Process 对象表示的进程已经终止。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"34-总结\"><a class=\"anchor\" href=\"#34-总结\">#</a> 3.4 总结</h3>\n<p>比起前面的，显然 Java 自带的 Runtime 更加方便、简单粗暴。此方法适用于离线项目。</p>\n<ol>\n<li>优点：\n<ol>\n<li>简单、方便</li>\n<li>不需要部署，相当于直接内嵌在 Java 项目</li>\n<li>jdk 自带功能，不需要其他外部依赖支持</li>\n</ol>\n</li>\n<li>缺点：\n<ol>\n<li>耦合度过大，每次调用 Python 脚本都需要重写一次</li>\n</ol>\n</li>\n</ol>\n",
            "tags": [
                "笔记",
                "随笔",
                "java",
                "python"
            ]
        },
        {
            "id": "https://nitgod1996.com/2021/05/14/%E9%99%88%E5%BA%B7%E4%B8%9C%E5%92%8C%E7%8E%8B%E5%86%B0%E5%86%B0%E7%9A%84%E5%BF%AB%E4%B9%90%E5%B0%8F%E5%B1%8B/",
            "url": "https://nitgod1996.com/2021/05/14/%E9%99%88%E5%BA%B7%E4%B8%9C%E5%92%8C%E7%8E%8B%E5%86%B0%E5%86%B0%E7%9A%84%E5%BF%AB%E4%B9%90%E5%B0%8F%E5%B1%8B/",
            "title": "陈康东和王冰冰的快乐小屋",
            "date_published": "2021-05-14T04:55:52.000Z",
            "content_html": "",
            "tags": [
                "ckd"
            ]
        },
        {
            "id": "https://nitgod1996.com/2021/05/12/note/Linux/VMware%E5%AE%89%E8%A3%85%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9F/",
            "url": "https://nitgod1996.com/2021/05/12/note/Linux/VMware%E5%AE%89%E8%A3%85%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9F/",
            "title": "VMware安装中标麒麟",
            "date_published": "2021-05-12T07:06:25.000Z",
            "content_html": "<h1 id=\"一-创建虚拟机\"><a class=\"anchor\" href=\"#一-创建虚拟机\">#</a> 一、 创建虚拟机</h1>\n<h2 id=\"1-安装-vmware\"><a class=\"anchor\" href=\"#1-安装vmware\">#</a> 1. 安装 VMware</h2>\n<h2 id=\"2-创建虚拟机\"><a class=\"anchor\" href=\"#2-创建虚拟机\">#</a> 2. 创建虚拟机</h2>\n<ol>\n<li>启动 VMware，点击添加新的虚拟机</li>\n</ol>\n<p><img data-src=\"/2021/05/12/note/Linux/VMware%E5%AE%89%E8%A3%85%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9F/image-20210512152433725.png\" alt=\"image-20210512152433725\"></p>\n<ol start=\"2\">\n<li>\n<p><img data-src=\"/2021/05/12/note/Linux/VMware%E5%AE%89%E8%A3%85%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9F/image-20210512152520550.png\" alt=\"image-20210512152520550\"></p>\n</li>\n<li>\n<p>选择操作系统</p>\n</li>\n</ol>\n<p>Ubuntu<img data-src=\"/2021/05/12/note/Linux/VMware%E5%AE%89%E8%A3%85%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9F/image-20210512152529854.png\" alt=\"image-20210512152529854\"></p>\n<p>中标麒麟<img data-src=\"/2021/05/12/note/Linux/VMware%E5%AE%89%E8%A3%85%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9F/image-20210512171113381.png\" alt=\"image-20210512171113381\"></p>\n<ol start=\"4\">\n<li>\n<p><img data-src=\"/2021/05/12/note/Linux/VMware%E5%AE%89%E8%A3%85%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9F/image-20210512152535974.png\" alt=\"image-20210512152535974\"></p>\n<p>中标麒麟</p>\n<p><img data-src=\"/2021/05/12/note/Linux/VMware%E5%AE%89%E8%A3%85%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9F/image-20210512171148853.png\" alt=\"image-20210512171148853\"></p>\n<blockquote>\n<p>主要是这时候我 F 盘已经快满了，所以把麒麟放到了 E 盘</p>\n</blockquote>\n</li>\n<li>\n<p><img data-src=\"/2021/05/12/note/Linux/VMware%E5%AE%89%E8%A3%85%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9F/image-20210512152546230.png\" alt=\"image-20210512152546230\"></p>\n</li>\n<li>\n<p><img data-src=\"/2021/05/12/note/Linux/VMware%E5%AE%89%E8%A3%85%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9F/image-20210512152618175.png\" alt=\"image-20210512152618175\"></p>\n</li>\n<li>\n<p><img data-src=\"/2021/05/12/note/Linux/VMware%E5%AE%89%E8%A3%85%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9F/image-20210512152651959.png\" alt=\"image-20210512152651959\"></p>\n</li>\n<li>\n<p>点击关闭，退出硬件设置</p>\n</li>\n<li>\n<p>返回安装向导，点击 <code>完成</code></p>\n</li>\n</ol>\n<h1 id=\"二-安装中标麒麟\"><a class=\"anchor\" href=\"#二-安装中标麒麟\">#</a> 二、 安装中标麒麟</h1>\n<ol>\n<li>\n<p>点击，启动此虚拟机</p>\n</li>\n<li>\n<p>直接安装</p>\n<p><img data-src=\"/2021/05/12/note/Linux/VMware%E5%AE%89%E8%A3%85%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9F/image-20210512153013169.png\" alt=\"image-20210512153013169\"></p>\n</li>\n<li>\n<p>开始安装</p>\n<p><img data-src=\"/2021/05/12/note/Linux/VMware%E5%AE%89%E8%A3%85%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9F/image-20210512153051379.png\" alt=\"image-20210512153051379\"></p>\n</li>\n<li>\n<p>选择全盘安装，开始安装</p>\n<p><img data-src=\"/2021/05/12/note/Linux/VMware%E5%AE%89%E8%A3%85%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9F/image-20210512153159036.png\" alt=\"image-20210512153159036\"></p>\n</li>\n<li>\n<p>安装好后重启</p>\n</li>\n<li>\n<p>重启后一些简单的设置，直接下一步即可</p>\n</li>\n</ol>\n<h1 id=\"三-安装-ubuntu\"><a class=\"anchor\" href=\"#三-安装ubuntu\">#</a> 三、 安装 Ubuntu</h1>\n<ol>\n<li>\n<p>开启虚拟机</p>\n</li>\n<li>\n<p><img data-src=\"/2021/05/12/note/Linux/VMware%E5%AE%89%E8%A3%85%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9F/image-20210512160738603.png\" alt=\"image-20210512160738603\"></p>\n</li>\n<li>\n<p><img data-src=\"/2021/05/12/note/Linux/VMware%E5%AE%89%E8%A3%85%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9F/image-20210512160742071.png\" alt=\"image-20210512160742071\"></p>\n</li>\n<li>\n<p><img data-src=\"/2021/05/12/note/Linux/VMware%E5%AE%89%E8%A3%85%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9F/image-20210512160746099.png\" alt=\"image-20210512160746099\"></p>\n</li>\n<li>\n<p><img data-src=\"/2021/05/12/note/Linux/VMware%E5%AE%89%E8%A3%85%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9F/image-20210512160751073.png\" alt=\"image-20210512160751073\"></p>\n</li>\n<li>\n<p><img data-src=\"/2021/05/12/note/Linux/VMware%E5%AE%89%E8%A3%85%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9F/image-20210512160754961.png\" alt=\"image-20210512160754961\"></p>\n</li>\n<li>\n<p><img data-src=\"/2021/05/12/note/Linux/VMware%E5%AE%89%E8%A3%85%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9F/image-20210512160758973.png\" alt=\"image-20210512160758973\"></p>\n</li>\n<li>\n<p><img data-src=\"/2021/05/12/note/Linux/VMware%E5%AE%89%E8%A3%85%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9F/image-20210512160802897.png\" alt=\"image-20210512160802897\"></p>\n</li>\n<li>\n<p><img data-src=\"/2021/05/12/note/Linux/VMware%E5%AE%89%E8%A3%85%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9F/image-20210512160821429.png\" alt=\"image-20210512160821429\"></p>\n</li>\n<li>\n<p><img data-src=\"/2021/05/12/note/Linux/VMware%E5%AE%89%E8%A3%85%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9F/image-20210512160824959.png\" alt=\"image-20210512160824959\"></p>\n</li>\n<li>\n<p>重启好后</p>\n<p><img data-src=\"/2021/05/12/note/Linux/VMware%E5%AE%89%E8%A3%85%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9F/image-20210512160843236.png\" alt=\"image-20210512160843236\"></p>\n<p>点击跳过</p>\n</li>\n<li>\n<p><img data-src=\"/2021/05/12/note/Linux/VMware%E5%AE%89%E8%A3%85%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9F/image-20210512160851663.png\" alt=\"image-20210512160851663\"></p>\n<p>后面全都点前进</p>\n</li>\n<li>\n<p><img data-src=\"/2021/05/12/note/Linux/VMware%E5%AE%89%E8%A3%85%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9F/image-20210512160915841.png\" alt=\"image-20210512160915841\"></p>\n<p>完成</p>\n</li>\n</ol>\n<h1 id=\"四-ssh-设置\"><a class=\"anchor\" href=\"#四-ssh设置\">#</a> 四、 ssh 设置</h1>\n<ol>\n<li>\n<p>首先要知道，百度的 IP 是外网 IP，本机查到的 IP 是内网 IP。通过 NAT 技术使用外网 IP 访问互联网</p>\n</li>\n<li>\n<p>VMnet1 为桥接模式提供服务，VMnet2 为 NAT 模式提供服务</p>\n</li>\n<li>\n<p>在网络连接中右键本地网 - 状态 - 详细信息，获取 IP、DNS、网关等信息</p>\n</li>\n</ol>\n<h2 id=\"1-xshell-连接-ubuntu\"><a class=\"anchor\" href=\"#1-xshell连接ubuntu\">#</a> 1. Xshell 连接 Ubuntu</h2>\n<h3 id=\"11-ubuntu-安装-ssh\"><a class=\"anchor\" href=\"#11-ubuntu安装ssh\">#</a> 1.1 Ubuntu 安装 SSH</h3>\n<p>注意，由于 xshell 远程连接 ubuntu 是通过 ssh 协议的，所以，确保 ubuntu 安装 ssh 服务器：</p>\n<p>输入以下命令进行安装远程 ssh 服务</p>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">sudo apt-get install openssh-server\n</code></pre>\n<p>若没有 ssh，需要执行</p>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\"> sudo apt-get install ssh\n</code></pre>\n<h3 id=\"12-配置-xshell-连接\"><a class=\"anchor\" href=\"#12-配置xshell连接\">#</a> 1.2 配置 xshell 连接</h3>\n<p><img data-src=\"/2021/05/12/note/Linux/VMware%E5%AE%89%E8%A3%85%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9F/ssh1.png\" alt=\"image-20210512161405917\"><img data-src=\"/2021/05/12/note/Linux/VMware%E5%AE%89%E8%A3%85%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9F/ssh2.png\" alt=\"image-20210512161421188\"></p>\n<h3 id=\"13-以-root-权限连接\"><a class=\"anchor\" href=\"#13-以root权限连接\">#</a> 1.3 以 root 权限连接</h3>\n<p>因为 sshd 默认设置不允许 root 用户远程登录，所以需要手动开启一下。</p>\n<ol>\n<li>切换到 root</li>\n</ol>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">su root\n</code></pre>\n<ol start=\"2\">\n<li>先备份一下配置文件</li>\n</ol>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">cp /etc/ssh/sshd_config /etc/ssh/sshd_config.2\n</code></pre>\n<ol start=\"3\">\n<li>编译 sshd 的配置文件</li>\n</ol>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">gedit /etc/ssh/sshd_config\n</code></pre>\n<p>把下面这一行</p>\n<pre><code>#PermitRootLogin prohibit-password\n</code></pre>\n<p>改成:</p>\n<pre><code>PermitRootLogin yes\n</code></pre>\n<p>注意前面<strong>不要</strong>加 #号</p>\n<ol start=\"4\">\n<li>重启 ssh 服务</li>\n</ol>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">service ssh restart\n</code></pre>\n<ol start=\"5\">\n<li>完毕</li>\n</ol>\n<h2 id=\"2-xshell-连接中标麒麟\"><a class=\"anchor\" href=\"#2-xshell连接中标麒麟\">#</a> 2. Xshell 连接中标麒麟</h2>\n<p>中标麒麟已经把 SSH 安装好了，直接连接即可</p>\n",
            "tags": [
                "笔记",
                "Linux",
                "Linux",
                "VMware"
            ]
        },
        {
            "id": "https://nitgod1996.com/2021/05/09/test/",
            "url": "https://nitgod1996.com/2021/05/09/test/",
            "title": "my hexo",
            "date_published": "2021-05-09T12:48:40.000Z",
            "content_html": "<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n<p>1</p>\n",
            "tags": [
                "计算机科学",
                "Java",
                "零基础学Java语言-浙江大学-翁恺",
                "test"
            ]
        },
        {
            "id": "https://nitgod1996.com/2021/05/08/note/hexo/Hexo%E6%90%AD%E5%BB%BAGitHub%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/",
            "url": "https://nitgod1996.com/2021/05/08/note/hexo/Hexo%E6%90%AD%E5%BB%BAGitHub%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/",
            "title": "Hexo搭建GitHub静态博客",
            "date_published": "2021-05-08T10:43:42.884Z",
            "content_html": "<h1 id=\"一-安装环境\"><a class=\"anchor\" href=\"#一-安装环境\">#</a> 一、 安装环境</h1>\n<h2 id=\"1-安装-git\"><a class=\"anchor\" href=\"#1-安装git\">#</a> 1. 安装 Git</h2>\n<p>官网 https://git-scm.com/downloads</p>\n<p>本人上传了 CSDN：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tcC5jc2RuLm5ldC9jb25zb2xlL3VwRGV0YWlsZWQ=\">https://mp.csdn.net/console/upDetailed</span></p>\n<h2 id=\"2-安装-nodejs\"><a class=\"anchor\" href=\"#2-安装nodejs\">#</a> 2. 安装 node.js</h2>\n<p>官网<span class=\"exturl\" data-url=\"aHR0cDovL25vZGVqcy5vcmcvZG93bmxvYWQ=\"> http://nodejs.org/download</span></p>\n<p>本人上传了 CSDN：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tcC5jc2RuLm5ldC9jb25zb2xlL3VwRGV0YWlsZWQ=\">https://mp.csdn.net/console/upDetailed</span></p>\n<p>可以下载 node-v0.10.33-x64.msi</p>\n<p>安装时直接保持默认配置即可。</p>\n<blockquote>\n<p>NOTE：Hexo 3.9.0 要求 nodejs 版本 &gt; 6.9.0</p>\n</blockquote>\n<p>Ubuntu 下，直接执行下面的命令安装即可：</p>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">sudo apt-get install nodejs\nsudo apt-get install npm\n</code></pre>\n<h1 id=\"二-配置-github\"><a class=\"anchor\" href=\"#二-配置github\">#</a> 二、 配置 Github</h1>\n<h2 id=\"1-建立-repository\"><a class=\"anchor\" href=\"#1-建立repository\">#</a> 1. 建立 Repository</h2>\n<p>建立与你用户名对应的仓库，仓库名必须为【your_user_name**.github.io**】</p>\n<h2 id=\"2-配置-ssh-key\"><a class=\"anchor\" href=\"#2-配置ssh-key\">#</a> 2. 配置 SSH-Key</h2>\n<p>为什么要配置这个呢？因为你提交代码肯定要拥有你的 github 权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用 ssh key 来解决本地和服务器的连接问题。</p>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">$ cd ~/. ssh #检查本机已存在的ssh密钥\n</code></pre>\n<p>如果提示：No such file or directory 说明你是第一次使用 git。</p>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">ssh-keygen -t rsa -C \"邮件地址\"\n</code></pre>\n<p>然后连续 3 次回车，最终会生成一个文件在用户目录下，打开用户目录，找到 <code>.ssh\\id_rsa.pub</code>  文件，记事本打开并复制里面的内容，打开你的 github 主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：</p>\n<p><img data-src=\"http://image.liuxianan.com/201608/20160818_143914_495_9084.png\" alt=\"img\"></p>\n<p>将刚复制的内容粘贴到 key 那里，title 随便填，保存。</p>\n<h2 id=\"3-测试是否成功\"><a class=\"anchor\" href=\"#3-测试是否成功\">#</a> 3. 测试是否成功</h2>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">$ ssh -T git@github.com \n</code></pre>\n<p>如果提示 <code>Are you sure you want to continue connecting (yes/no)?</code> ，输入 yes，然后会看到：</p>\n<blockquote>\n<p>Hi username! You've successfully authenticated, but GitHub does not provide shell access.</p>\n</blockquote>\n<p>看到这个信息说明 SSH 已配置成功！</p>\n<p>此时你还需要配置：</p>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">$ git config --global user.name \"nitgod1996\"// 你的github用户名，非昵称\n$ git config --global user.email  \"xxx@qq.com\"// 填写你的github注册邮箱\n</code></pre>\n<h1 id=\"三-安装-hexo\"><a class=\"anchor\" href=\"#三-安装hexo\">#</a> 三、 安装 Hexo</h1>\n<h2 id=\"1-installation\"><a class=\"anchor\" href=\"#1-installation\">#</a> 1. Installation</h2>\n<p>打开 Git 命令行，执行如下命令</p>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">$ npm install -g hexo\n</code></pre>\n<h2 id=\"2-quick-start\"><a class=\"anchor\" href=\"#2-quick-start\">#</a> 2. Quick Start</h2>\n<p><strong>1. 初始化</strong></p>\n<p>在电脑中建立一个名字叫「Hexo」的文件夹（比如我建在了 F:\\Workspaces\\hexo），然后在此文件夹中右键打开 Git Bash。执行下面的命令</p>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">$ hexo init\n</code></pre>\n<p>hexo 会自动下载一些文件到这个目录。</p>\n<blockquote>\n<p>此时，在 source/_posts 下有一个 hello-world.md 文件，这是 hexo 生成的初始化博客。</p>\n<p>以后的博客以 md 文件放在此目录下。</p>\n</blockquote>\n<p><strong>2. 生成并部署</strong></p>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">$ hexo g # 生成\n$ hexo s # 启动服务\n</code></pre>\n<ul>\n<li><code>g</code> ：将 source 下的 md 生成博客，对应的 html、css 文件放在 public 目录下</li>\n<li><code>s</code> ：在本地部署，启动服务。</li>\n</ul>\n<p>执行以上命令之后，hexo 就会在 public 文件夹生成相关 html 文件，这些文件将来都是要提交到 github 去的：</p>\n<p>在浏览器中打开 <span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo0MDAw\">http://localhost:4000</span></p>\n<p>​\t这时可以看到 Hexo 已为你生成了一篇 blog。</p>\n<p><strong>3. 新建博客</strong></p>\n<p>新打开一个 git bash 命令行窗口，cd 到 / F:\\Workspaces\\hexo 下，执行下面的命令</p>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">$ hexo new \"My New Post\"\n</code></pre>\n<p><em>也可以手动创建 md 文件</em>，需要 <code>stop server</code>  并重新 <code>generate</code>  生成一下静态网页。</p>\n<p>执行下面的命令，将 markdown 文件生成静态网页。</p>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">$ hexo generate\n</code></pre>\n<p>该命令执行完后，会在 D:\\Hexo\\public\\ 目录下生成一系列 html，css 等文件。</p>\n<p><strong>4. 部署到 Github</strong></p>\n<p>部署到 Github 前需要配置_config.yml 文件，首先找到下面的内容</p>\n<pre class=\" language-language-yaml\"><code class=\"language-language-yaml\"># Deployment\n## Docs: http://hexo.io/docs/deployment.html\ndeploy:\n  type:\n</code></pre>\n<p>然后将它们修改为</p>\n<pre class=\" language-language-yaml\"><code class=\"language-language-yaml\"># Deployment\n## Docs: http://hexo.io/docs/deployment.html\ndeploy:\n  type: github\n  repository: git@github.com:nitgod1996/nitgod1996.github.io.git\n  branch: master\n</code></pre>\n<p>还需要安装一个插件：</p>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">npm install hexo-deployer-git --save\n</code></pre>\n<p>其它命令不确定，部署这个命令一定要用 git bash，否则会提示 <code>Permission denied (publickey).</code></p>\n<p>打开你的 git bash，输入 <code>hexo d</code>  就会将本次有改动的代码全部提交，没有改动的不会：</p>\n<p><strong>5. 验证</strong></p>\n<p>当部署完成后，在浏览器中打开 http://nitgod1996.github.io/，正常显示网页，表明部署成功。</p>\n<p><strong>6. 总结：部署步骤</strong></p>\n<p>每次部署的步骤，可按以下三步来进行。</p>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">hexo clean\nhexo generate\nhexo deploy\n</code></pre>\n<ol>\n<li>在执行下面的命令后，</li>\n</ol>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">$ hexo g #生成\n$ hexo s #启动本地服务，进行文章预览调试\n</code></pre>\n<p>浏览器输入 http://localhost:4000，查看搭建效果。此后的每次变更_config.yml 文件或者新建文件都可以先用此命令调试，尤其是当你想调试新添加的主题时。</p>\n<ol start=\"2\">\n<li>可以用简化的一条命令</li>\n</ol>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">hexo s -g\n</code></pre>\n<h1 id=\"四-hexo-介绍\"><a class=\"anchor\" href=\"#四-hexo介绍\">#</a> 四、 Hexo 介绍</h1>\n<h2 id=\"1-配置文件-_configxml-介绍\"><a class=\"anchor\" href=\"#1-配置文件_configxml介绍\">#</a> 1. 配置文件 <code>_config.xml</code>  介绍</h2>\n<p><code>_config.xml</code> ，也称 <code>站点配置文件</code> ，是 hexo 的主要配置文件。以下主要介绍一些常用并且本人比较熟悉的配置</p>\n<h3 id=\"11-site-站点基本信息\"><a class=\"anchor\" href=\"#11-site站点基本信息\">#</a> 1.1 Site 站点基本信息</h3>\n<pre class=\" language-language-yaml\"><code class=\"language-language-yaml\">title: 宁理大神1996 #网站标题\nsubtitle: '' #网站副标题\ndescription: '宁理大神的个人博客' #网站描述\nkeywords: #网站的关键词。支援多个关键词。\nauthor: 宁理大神1996 #作者名字\nlanguage: zh-Hans #网站使用的语言,按照主题设置，如next是zh-Hans，shoka是zh-CN。\ntimezone: 'Asia/Shanghai'#网站时区\n</code></pre>\n<h3 id=\"12-url-路径信息\"><a class=\"anchor\" href=\"#12-url路径信息\">#</a> 1.2  URL 路径信息</h3>\n<pre class=\" language-language-yaml\"><code class=\"language-language-yaml\"># URL\n## Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project'\nurl: https://nitgod1996.com\npermalink: :year/:month/:day/:title/ #文章的 永久链接 格式。如https://nitgod1996.github.io/2021/05/08/maven%E5%A4%8D%E4%B9%A0/的2021/05/08/maven%E5%A4%8D%E4%B9%A0/部分\npermalink_defaults: #永久链接中各部分的默认值\npretty_urls: #改写 permalink 的值来美化 URL\n  trailing_index: true # 是否在永久链接中保留尾部的 index.html，设置为 false 时去除\n  trailing_html: true # 是否在永久链接中保留尾部的 .html, 设置为 false 时去除 (对尾部的 index.html无效)\n</code></pre>\n<h3 id=\"13-directory-文件目录信息\"><a class=\"anchor\" href=\"#13-directory文件目录信息\">#</a> 1.3 Directory 文件目录信息</h3>\n<p>​\t\t是 hexo 的文件目录格式，而非文章或站点的目录。</p>\n<pre class=\" language-language-yaml\"><code class=\"language-language-yaml\">source_dir: source #资源文件夹，这个文件夹用来存放内容。\npublic_dir: public #公共文件夹，这个文件夹用于存放生成的站点文件。\ntag_dir: tags #标签文件夹\narchive_dir: archives #归档文件夹\ncategory_dir: categories #分类文件夹\n</code></pre>\n<p>对应目录结构如下：</p>\n<ul>\n<li>source：资源文件夹，博客的 md 文件及图片都放在此目录</li>\n<li>public：公共文件夹， <code>hexo g</code>  生成的站点 <code>html\\css\\js</code>  文件均放在此目录</li>\n<li>tags：实际上是在 <code>source\\tag</code> ，存放用于排版 <code>tag</code>  页面的 <code>index.md</code> 。</li>\n<li>archives：同上，归档一般是按时间轴将博客排列显示的页面</li>\n<li>categories：同上。</li>\n</ul>\n<p>另外，根目录下的 <code>node_modules</code>  文件夹一般是放插件的</p>\n<blockquote>\n<p>这些配置一般不需要特别设置，默认即可</p>\n</blockquote>\n<h3 id=\"14-writing-文章信息\"><a class=\"anchor\" href=\"#14-writing文章信息\">#</a> 1.4 Writing 文章信息</h3>\n<pre class=\" language-language-yaml\"><code class=\"language-language-yaml\">new_post_name: :title.md # 新创建的文章名称，默认是title.md\ndefault_layout: post #预设布局，除了post还有page和draft\npost_asset_folder: true #启动 Asset 文件夹\nfuture: true #显示下一篇博客\nhighlight: #字体高亮设置\n  enable: false\n  line_number: true\n  auto_detect: false\n  tab_replace: ''\n  wrap: true\n  hljs: false\nprismjs: #也是字体高亮相关的代码块，与特定主题/插件结合使用\n  enable: false\n  preprocess: true\n  line_number: true\n  tab_replace: ''\n</code></pre>\n<h4 id=\"141-asset-资源文件\"><a class=\"anchor\" href=\"#141-asset资源文件\">#</a> 1.4.1  <code>Asset</code>  资源文件</h4>\n<p>​\t\t<em>特别解释 <code>post_asset_folder</code>  及 <code>Asset</code> 。Asset 是资源文件管理</em>资源，代表  <code>source</code>  文件夹中除了文章以外的所有文件，例如图片、CSS、JS 文件等。</p>\n<p>​\t\t启用 Asset 后，Hexo 将会在你每一次通过  <code>hexo new &quot;postName&quot;</code>  命令创建新文章时自动创建同名一个文件夹。</p>\n<p>​\t\t将所有与该文章有关的资源放在这个关联文件夹中之后，你可以通过 <code>相对路径</code> 来引用它们。</p>\n<p>​\t\t如将图片放该文件夹。</p>\n<p><img data-src=\"/2021/05/08/note/hexo/Hexo%E6%90%AD%E5%BB%BAGitHub%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/image-20210511194207607.png\" alt=\"image-20210511194207607\"></p>\n<h3 id=\"15-category-amp-tag-分类及标签配置\"><a class=\"anchor\" href=\"#15-category-tag分类及标签配置\">#</a> 1.5 Category &amp; Tag 分类及标签配置</h3>\n<pre class=\" language-language-yaml\"><code class=\"language-language-yaml\">default_category: uncategorized #默认分类\n\n# 配置首页分类表\ncategory_map: #将分类名与特定的key关联，key如笔记的note可作为文件目录。\n\t#可以通过在该目录下方图片设置分类封面等\n  笔记: note\n  计算机科学: computer-science\n  Java: java\n  C++: cpp\n  二进制杂谈: note\n  计算机程序设计（C++）-西安交通大学: course-1\ntag_map:\n</code></pre>\n<h3 id=\"16-pagination-分页\"><a class=\"anchor\" href=\"#16-pagination分页\">#</a> 1.6  Pagination 分页</h3>\n<pre class=\" language-language-yaml\"><code class=\"language-language-yaml\">per_page: 10 ## 每页显示的文章量 (0 = 关闭分页功能)\npagination_dir: page #分页目录\n</code></pre>\n<h3 id=\"17-其他\"><a class=\"anchor\" href=\"#17-其他\">#</a> 1.7 其他</h3>\n<h4 id=\"theme\"><a class=\"anchor\" href=\"#theme\">#</a> theme:</h4>\n<p>​\t\t选择主题</p>\n<h4 id=\"theme_config\"><a class=\"anchor\" href=\"#theme_config\">#</a> theme_config:</h4>\n<p>​\t\t主题的配置文件。在这里放置的配置会覆盖主题目录下的 _config.yml 中的配置。</p>\n<p>​\t\t一般不需要设置，<strong>默认名称即为 theme_config.yml</strong></p>\n<h4 id=\"includeexclude\"><a class=\"anchor\" href=\"#includeexclude\">#</a> include/exclude：</h4>\n<p>​\tinclude\tHexo 默认会忽略隐藏文件和文件夹，include 导入这些文件</p>\n<p>​\texclude\tHexo 会忽略这些文件和目录</p>\n<p>如下：</p>\n<pre class=\" language-language-yaml\"><code class=\"language-language-yaml\">include:\n  # 包括 'source/css/_typing.css'\n  - \"css/_typing.css\"\n  # 包括 'source/_css/' 中的任何文件，但不包括子目录及其其中的文件。\n  - \"_css/*\"\n  # 包含 'source/_css/' 中的任何文件和子目录下的任何文件\n  - \"_css/**/*\"\n\nexclude:\n  # 不包括 'source/js/test.js'\n  - \"js/test.js\"\n  # 不包括 'source/js/' 中的文件、但包括子目录下的所有目录和文件\n  - \"js/*\"\n  # 不包括 'source/js/' 中的文件和子目录下的任何文件\n  - \"js/**/*\"\n  # 不包括 'source/js/' 目录下的所有文件名以 'test' 开头的文件，但包括其它文件和子目录下的单文件\n  - \"js/test*\"\n  # 不包括 'source/js/' 及其子目录中任何以 'test' 开头的文件\n  - \"js/**/test*\"\n  # 不要用 exclude 来忽略 'source/_posts/' 中的文件。你应该使用 'skip_render'，或者在要忽略的文件的文件名之前加一个下划线 '_'\n  # 在这里配置一个 - \"_posts/hello-world.md\" 是没有用的。\n</code></pre>\n<h4 id=\"deploy\"><a class=\"anchor\" href=\"#deploy\">#</a> deploy：</h4>\n<p>​\t\t设置 GitHub 上的 repository 路径，以便部署</p>\n<pre class=\" language-language-yaml\"><code class=\"language-language-yaml\">deploy:\n  type: git\n  repository: git@github.com:nitgod1996/nitgod1996.github.io.git\n  branch: master  \n</code></pre>\n<h2 id=\"2-命令总结\"><a class=\"anchor\" href=\"#2-命令总结\">#</a> 2. 命令总结</h2>\n<h3 id=\"21-常用命令\"><a class=\"anchor\" href=\"#21-常用命令\">#</a> 2.1 常用命令</h3>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">hexo new \"postName\" #新建文章\nhexo new page \"pageName\" #新建页面\nhexo generate #生成静态页面至public目录\nhexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）\nhexo deploy #将.deploy目录部署到GitHubhexo help  # 查看帮助hexo version  #查看Hexo的版本\n</code></pre>\n<p>特别一提</p>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">hexo new [layout] <title> #指定布局方式创建文件\n</title></code></pre>\n<p>默认为  <code>post</code> ，可以通过修改  <code>_config.yml</code>  中的  <code>default_layout</code>  参数来指定默认布局。</p>\n<p>Hexo 有三种默认布局： <code>post</code> 、 <code>page</code>  和  <code>draft</code> 。在创建这三种不同类型的文件时，它们将会被保存到不同的路径；而您自定义的其他布局和  <code>post</code>  相同，都将储存到  <code>source/_posts</code>  文件夹。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">布局</th>\n<th style=\"text-align:left\">路径</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><code>post</code></td>\n<td style=\"text-align:left\"><code>source/_posts</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>page</code></td>\n<td style=\"text-align:left\"><code>source</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>draft</code></td>\n<td style=\"text-align:left\"><code>source/_drafts</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"22-复合命令\"><a class=\"anchor\" href=\"#22-复合命令\">#</a> 2.2 复合命令</h3>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">hexo deploy -g  #生成加部署\nhexo server -g  #生成加预览\n</code></pre>\n<p>命令的简写为：</p>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">hexo n == hexo new\nhexo g == hexo generate\nhexo s == hexo server\nhexo d == hexo deploy\n</code></pre>\n<h2 id=\"3-写作相关\"><a class=\"anchor\" href=\"#3-写作相关\">#</a> 3. 写作相关</h2>\n<h3 id=\"31-创建文章\"><a class=\"anchor\" href=\"#31-创建文章\">#</a> 3.1 创建文章</h3>\n<ol>\n<li>建议，将 <code>站点配置文件</code> 设置 <code>post_asset_folder: true</code> 。以便创建文章同时创建同名目录</li>\n<li>建议，以 <code>hexo new &quot;postName&quot;</code>  新建文章。用命令建的 md 文件会自带文章头 front-matter，否则还需手动设置。</li>\n<li>建议，使用 typora 编辑 md 文件。</li>\n<li>打开.md 文件，编辑 <code>Front-matter</code> ，设置 <code>title\\data\\tags</code>  等信息。</li>\n</ol>\n<h3 id=\"32-图片插入设置\"><a class=\"anchor\" href=\"#32-图片插入设置\">#</a> 3.2 图片插入设置</h3>\n<h4 id=\"321-编辑器-typora-设置\"><a class=\"anchor\" href=\"#321-编辑器typora设置\">#</a> 3.2.1 编辑器 Typora 设置</h4>\n<blockquote>\n<p>为了方便图片的插入，设置图片以相对路径插入。</p>\n</blockquote>\n<ol>\n<li>\n<p>文件 - 编号设置 - 图像</p>\n<p><img data-src=\"/2021/05/08/note/hexo/Hexo%E6%90%AD%E5%BB%BAGitHub%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/image-20210511202233799.png\" alt=\"image-20210511202233799\"></p>\n</li>\n<li>\n<p>此后图片便保存在文章同一目录的同名文件夹中了<strong>也就是刚刚命令创建的 Asset 文件夹</strong></p>\n</li>\n</ol>\n<h4 id=\"322-安装-hexo-asset-image-插件\"><a class=\"anchor\" href=\"#322-安装hexo-asset-image插件\">#</a> 3.2.2 安装 hexo-asset-image 插件</h4>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">npm install hexo-asset-image --save\n</code></pre>\n<p>注：该插件需要 <code>post_asset_folder: true</code></p>\n<h4 id=\"323-编辑插件的-indexjs\"><a class=\"anchor\" href=\"#323-编辑插件的indexjs\">#</a> 3.2.3 编辑插件的 index.js</h4>\n<p>打开 /node_modules/hexo-asset-image/index.js</p>\n<p>将内容更换为一下代码</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> cheerio <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cheerio'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">str<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">return</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">var</span> version <span class=\"token operator\">=</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>hexo<span class=\"token punctuation\">.</span>version<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>hexo<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token string\">'after_post_render'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">var</span> config <span class=\"token operator\">=</span> hexo<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>post_asset_folder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">var</span> link <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>permalink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>version<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>version<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>       <span class=\"token keyword\">var</span> beginPos <span class=\"token operator\">=</span> <span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">,</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>       <span class=\"token keyword\">var</span> beginPos <span class=\"token operator\">=</span> <span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">,</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">// In hexo 3.1.1, the permalink of \"about\" page is like \".../about/index.html\".</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">var</span> endPos <span class=\"token operator\">=</span> link<span class=\"token punctuation\">.</span><span class=\"token function\">lastIndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    link <span class=\"token operator\">=</span> link<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>beginPos<span class=\"token punctuation\">,</span> endPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">var</span> toprocess <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'excerpt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'more'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'content'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> toprocess<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token keyword\">var</span> key <span class=\"token operator\">=</span> toprocess<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre> </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token keyword\">var</span> $ <span class=\"token operator\">=</span> cheerio<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        ignoreWhitespace<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        xmlMode<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        lowerCaseTags<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        decodeEntities<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token comment\">// For windows style path, we replace '\\' to '/'.</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token keyword\">var</span> src <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\\\'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">http[s]*.*|\\/\\/.*</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>               <span class=\"token operator\">!</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^\\s*\\/</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>              <span class=\"token comment\">// For \"about\" page, the first part of \"src\" can't be removed.</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>              <span class=\"token comment\">// In addition, to support multi-level local directory.</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>              <span class=\"token keyword\">var</span> linkArray <span class=\"token operator\">=</span> link<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">elem</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                <span class=\"token keyword\">return</span> elem <span class=\"token operator\">!=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>              <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>              <span class=\"token keyword\">var</span> srcArray <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">elem</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                <span class=\"token keyword\">return</span> elem <span class=\"token operator\">!=</span> <span class=\"token string\">''</span> <span class=\"token operator\">&amp;&amp;</span> elem <span class=\"token operator\">!=</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>              <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>              <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>srcArray<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                srcArray<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>              src <span class=\"token operator\">=</span> srcArray<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>              <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>root <span class=\"token operator\">+</span> link <span class=\"token operator\">+</span> src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>              console<span class=\"token punctuation\">.</span>info<span class=\"token operator\">&amp;&amp;</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"update link as:-->\"</span><span class=\"token operator\">+</span>config<span class=\"token punctuation\">.</span>root <span class=\"token operator\">+</span> link <span class=\"token operator\">+</span> src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            console<span class=\"token punctuation\">.</span>info<span class=\"token operator\">&amp;&amp;</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"no src attr, skipped...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            console<span class=\"token punctuation\">.</span>info<span class=\"token operator\">&amp;&amp;</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>      data<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> $<span class=\"token punctuation\">.</span><span class=\"token function\">html</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>&lt;font color=red size=5&gt; 注意！如果是 shoka 主题的话，在 53 行加上以下代码 &lt;/font&gt;</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-src'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token keyword\">var</span> src <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-src'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\\\'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">http[s]*.*|\\/\\/.*</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>               <span class=\"token operator\">!</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^\\s*\\/</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>              <span class=\"token comment\">// For \"about\" page, the first part of \"src\" can't be removed.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>              <span class=\"token comment\">// In addition, to support multi-level local directory.</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>              <span class=\"token keyword\">var</span> linkArray <span class=\"token operator\">=</span> link<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">elem</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token keyword\">return</span> elem <span class=\"token operator\">!=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>              <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>              <span class=\"token keyword\">var</span> srcArray <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">elem</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token keyword\">return</span> elem <span class=\"token operator\">!=</span> <span class=\"token string\">''</span> <span class=\"token operator\">&amp;&amp;</span> elem <span class=\"token operator\">!=</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>              <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>              <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>srcArray<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                srcArray<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>              src <span class=\"token operator\">=</span> srcArray<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>              <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-src'</span><span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>root <span class=\"token operator\">+</span> link <span class=\"token operator\">+</span> src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>              console<span class=\"token punctuation\">.</span>info<span class=\"token operator\">&amp;&amp;</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"update link as:-->\"</span><span class=\"token operator\">+</span>config<span class=\"token punctuation\">.</span>root <span class=\"token operator\">+</span> link <span class=\"token operator\">+</span> src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>​\t\t因为 shoka 的 md 文章生成后图片的 <code>src</code>  属性名是 <code>data-src</code> ， <code>hexo-asset-image</code>  插件找不到。</p>\n<h4 id=\"324-插入图片\"><a class=\"anchor\" href=\"#324-插入图片\">#</a> 3.2.4 插入图片</h4>\n<p>之后即可按照相对路径插入图片，和本地 typora 一样即可。</p>\n<h2 id=\"4-front-matter-介绍\"><a class=\"anchor\" href=\"#4-front-matter介绍\">#</a> 4. Front-matter 介绍</h2>\n<p>Front-matter 是 md 的文件头，用于设置博客的一些信息。</p>\n<p>​\t\t如果设置了 <code>post_asset_folder: true</code> ，那么命令创建文章时自动设置了一部分 <code>Front-matter</code> 。如果是用编辑器创建的 md 文件，则需要手动添加一下 <code>Front-matter</code> 。</p>\n<p>​\t\t添加方法如下：语法和 yaml 差不多</p>\n<pre class=\" language-language-markdown\"><code class=\"language-language-markdown\">---\ntitle: 文章标题\ndate: 建立日期\ncategories: 分类\n---\n</code></pre>\n<p>hexo 自带的参数如下</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数</th>\n<th style=\"text-align:left\">描述</th>\n<th style=\"text-align:left\">默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><code>layout</code></td>\n<td style=\"text-align:left\">布局</td>\n<td style=\"text-align:left\"><a href=\"https://hexo.io/zh-cn/docs/configuration#%E6%96%87%E7%AB%A0\"> <code>config.default_layout</code> </a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>title</code></td>\n<td style=\"text-align:left\">标题</td>\n<td style=\"text-align:left\">文章的文件名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>date</code></td>\n<td style=\"text-align:left\">建立日期</td>\n<td style=\"text-align:left\">文件建立日期</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>updated</code></td>\n<td style=\"text-align:left\">更新日期</td>\n<td style=\"text-align:left\">文件更新日期</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>comments</code></td>\n<td style=\"text-align:left\">开启文章的评论功能</td>\n<td style=\"text-align:left\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>tags</code></td>\n<td style=\"text-align:left\">标签（不适用于分页）</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>categories</code></td>\n<td style=\"text-align:left\">分类（不适用于分页）</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>permalink</code></td>\n<td style=\"text-align:left\">覆盖文章网址</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>excerpt</code></td>\n<td style=\"text-align:left\">Page excerpt in plain text. Use <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdGFnLXBsdWdpbnMjUG9zdC1FeGNlcnB0\">this plugin</span> to format the text</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>disableNunjucks</code></td>\n<td style=\"text-align:left\">Disable rendering of Nunjucks tag  <code>&#123;&#123; &#125;&#125;</code> / <code>&#123;% %&#125;</code>  and <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdGFnLXBsdWdpbnM=\">tag plugins</span> when enabled</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>lang</code></td>\n<td style=\"text-align:left\">Set the language to override <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvaW50ZXJuYXRpb25hbGl6YXRpb24jUGF0aA==\">auto-detection</span></td>\n<td style=\"text-align:left\">Inherited from  <code>_config.yml</code></td>\n</tr>\n</tbody>\n</table>\n<p>如果你需要为文章添加多个分类，可以尝试以下 list 中的方法。</p>\n<pre class=\" language-language-yaml\"><code class=\"language-language-yaml\">categories:\n- [Diary, PlayStation]\n- [Diary, Games]\n- [Life]\n</code></pre>\n<p>还有一些<strong>多种主题通用</strong>的比较<strong>好用</strong>的参数</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数</th>\n<th style=\"text-align:left\">描述</th>\n<th style=\"text-align:left\">默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><code>sticky</code></td>\n<td style=\"text-align:left\">置顶</td>\n<td style=\"text-align:left\"><code>false</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>cover</code></td>\n<td style=\"text-align:left\">文章封面</td>\n<td style=\"text-align:left\"></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"5-优化\"><a class=\"anchor\" href=\"#5-优化\">#</a> 5. 优化</h2>\n<h3 id=\"51-静态资源压缩\"><a class=\"anchor\" href=\"#51-静态资源压缩\">#</a> 5.1 静态资源压缩</h3>\n<p>​\tHexo 自动生成的 html 中有很多空白的地方，会影响加载速度，所以最好还是压缩一下，提升加载速度。</p>\n<ol>\n<li>\n<p>安装 <code>hexo-neat</code>  插件</p>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">npm install hexo-neat --save-dev\n</code></pre>\n</li>\n<li>\n<p>配置 <code>站点配置文件</code></p>\n<pre class=\" language-language-yaml\"><code class=\"language-language-yaml\"># hexo-neat\n# 博文压缩\nneat_enable: true\n# 压缩html\nneat_html:\n  enable: true\n  exclude:  #排除的文件\n  \n# 压缩css  跳过min.css\nneat_css:\n  enable: true\n  exclude:\n    - '**/*.min.css'\n    \n# 压缩js 跳过min.js\nneat_js:\n  enable: true\n  mangle: true\n  output:\n  compress:\n  exclude:\n    - '**/*.min.js'\n    - '**/jquery.fancybox.pack.js'\n    - '**/index.js'  \n    - '**/love.js'\n# 压缩博文配置结束\n</code></pre>\n<p>注意上面的路径 *<em>/</em> , 需要自己去配置正确的路径。，不然生成的是空白页面，当然你也可以删掉，全部压缩。</p>\n</li>\n</ol>\n<h2 id=\"6-美化博客\"><a class=\"anchor\" href=\"#6-美化博客\">#</a> 6. 美化博客</h2>\n<p>​\t\t即添加一些花里胡哨的东西。</p>\n<h3 id=\"61-看板娘\"><a class=\"anchor\" href=\"#61-看板娘\">#</a> 6.1 看板娘</h3>\n<ol>\n<li>\n<p>安装 <code>live2d </code></p>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">npm install --save hexo-helper-live2d  \n</code></pre>\n</li>\n<li>\n<p>下载相应模型</p>\n<p>输入以下命令，下载相应的模型，将 packagename 更换成模型名称即可，更多模型选择请<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3hpYXpleXUvbGl2ZTJkLXdpZGdldC1tb2RlbHM=\">点击此处</span>，各个模型的预览请<span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWFqaTgudG9wL3Bvc3QvbGl2ZTJkLXBsdWdpbi0yLjAv\">访问原作者的博客</span></p>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">npm install packagename\n</code></pre>\n<p>如</p>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">npm install hijiki\n\n</code></pre>\n</li>\n<li>\n<p>配置 <code>站点配置文件</code></p>\n<pre class=\" language-language-yaml\"><code class=\"language-language-yaml\">live2d:\n\tenable: true\n\tscriptFrom: local\n\tmodel: \n\t\tuse: live2d-widget-model-hijiki #模型选择\n\tdisplay: \n\t\tposition: left  #模型位置\n\t\twidth: 150       #模型宽度\n\t\theight: 300      #模型高度\n\tmobile: \n\t\tshow: false      #是否在手机端显示\n</code></pre>\n</li>\n<li>\n<p>完成</p>\n</li>\n</ol>\n<p><img data-src=\"/2021/05/08/note/hexo/Hexo%E6%90%AD%E5%BB%BAGitHub%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/image-20210512105007705.png\" alt=\"image-20210512105007705\"></p>\n<h3 id=\"62-添加点击特效\"><a class=\"anchor\" href=\"#62-添加点击特效\">#</a> 6.2 添加点击❤特效</h3>\n<ol>\n<li>在  <code>\\themes\\主题文件夹\\source\\js </code> 下新建文件  <code>love1.js</code> ，在 love1.js 文件中添加以下代码：</li>\n</ol>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">!</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">,</span>a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">function</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token function\">c</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 500%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">o</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">r</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">function</span> <span class=\"token function\">r</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> e<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>e<span class=\"token operator\">&lt;</span>d<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>e<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>d<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>alpha<span class=\"token operator\">&lt;=</span><span class=\"token number\">0</span><span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token operator\">--</span><span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>scale<span class=\"token operator\">+=</span><span class=\"token number\">.004</span><span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>alpha<span class=\"token operator\">-=</span><span class=\"token number\">.013</span><span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>el<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>cssText<span class=\"token operator\">=</span><span class=\"token string\">\"left:\"</span><span class=\"token operator\">+</span>d<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token operator\">+</span><span class=\"token string\">\"px;top:\"</span><span class=\"token operator\">+</span>d<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token operator\">+</span><span class=\"token string\">\"px;opacity:\"</span><span class=\"token operator\">+</span>d<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>alpha<span class=\"token operator\">+</span><span class=\"token string\">\";transform:scale(\"</span><span class=\"token operator\">+</span>d<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>scale<span class=\"token operator\">+</span><span class=\"token string\">\",\"</span><span class=\"token operator\">+</span>d<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>scale<span class=\"token operator\">+</span><span class=\"token string\">\") rotate(45deg);background:\"</span><span class=\"token operator\">+</span>d<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>color<span class=\"token operator\">+</span><span class=\"token string\">\";z-index:99999\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">function</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">var</span> t<span class=\"token operator\">=</span><span class=\"token string\">\"function\"</span><span class=\"token operator\">==</span><span class=\"token keyword\">typeof</span> e<span class=\"token punctuation\">.</span>onclick<span class=\"token operator\">&amp;&amp;</span>e<span class=\"token punctuation\">.</span>onclick<span class=\"token punctuation\">;</span>e<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span><span class=\"token operator\">=</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>t<span class=\"token operator\">&amp;&amp;</span><span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">function</span> <span class=\"token function\">i</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">var</span> a<span class=\"token operator\">=</span>t<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>a<span class=\"token punctuation\">.</span>className<span class=\"token operator\">=</span><span class=\"token string\">\"heart\"</span><span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>el<span class=\"token operator\">:</span>a<span class=\"token punctuation\">,</span>x<span class=\"token operator\">:</span>e<span class=\"token punctuation\">.</span>clientX<span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">:</span>e<span class=\"token punctuation\">.</span>clientY<span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>scale<span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>alpha<span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>color<span class=\"token operator\">:</span><span class=\"token function\">s</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">function</span> <span class=\"token function\">c</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">var</span> a<span class=\"token operator\">=</span>t<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"style\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>a<span class=\"token punctuation\">.</span>type<span class=\"token operator\">=</span><span class=\"token string\">\"text/css\"</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">try</span><span class=\"token punctuation\">&#123;</span>a<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>a<span class=\"token punctuation\">.</span>styleSheet<span class=\"token punctuation\">.</span>cssText<span class=\"token operator\">=</span>e<span class=\"token punctuation\">&#125;</span>t<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"head\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">function</span> <span class=\"token function\">s</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">return</span><span class=\"token string\">\"rgb(\"</span><span class=\"token operator\">+</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\",\"</span><span class=\"token operator\">+</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\",\"</span><span class=\"token operator\">+</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\")\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">var</span> d<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>e<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">requestAnimationFrame</span><span class=\"token operator\">=</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">return</span> e<span class=\"token punctuation\">.</span>requestAnimationFrame<span class=\"token operator\">||</span>e<span class=\"token punctuation\">.</span>webkitRequestAnimationFrame<span class=\"token operator\">||</span>e<span class=\"token punctuation\">.</span>mozRequestAnimationFrame<span class=\"token operator\">||</span>e<span class=\"token punctuation\">.</span>oRequestAnimationFrame<span class=\"token operator\">||</span>e<span class=\"token punctuation\">.</span>msRequestAnimationFrame<span class=\"token operator\">||</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span><span class=\"token number\">1e3</span><span class=\"token operator\">/</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">,</span>document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>在 <code> \\themes\\主题文件夹\\layout\\layout.ejs</code>  或 <code>layout.swig</code>  文件末尾添加以下代码：</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- 页面点击小红心 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/js/love1.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ol start=\"3\">\n<li>完成</li>\n</ol>\n<h3 id=\"63-点击烟花特效\"><a class=\"anchor\" href=\"#63-点击烟花特效\">#</a> 6.3 点击烟花特效</h3>\n<ol>\n<li>\n<p>在 <code>\\themes\\material-x\\source\\js</code>  目录下新建一个  <code>fireworks.js </code> 的文件，里面写入以下代码</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token string\">\"use strict\"</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">function</span> <span class=\"token function\">updateCoords</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>pointerX<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>clientX<span class=\"token operator\">||</span>e<span class=\"token punctuation\">.</span>touches<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>canvasEl<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">,</span>pointerY<span class=\"token operator\">=</span>e<span class=\"token punctuation\">.</span>clientY<span class=\"token operator\">||</span>e<span class=\"token punctuation\">.</span>touches<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>clientY<span class=\"token operator\">-</span>canvasEl<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">function</span> <span class=\"token function\">setParticuleDirection</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">var</span> t<span class=\"token operator\">=</span>anime<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">360</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">/</span><span class=\"token number\">180</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span>anime<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token number\">180</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>n<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>anime<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>a<span class=\"token punctuation\">;</span><span class=\"token keyword\">return</span><span class=\"token punctuation\">&#123;</span>x<span class=\"token operator\">:</span>e<span class=\"token punctuation\">.</span>x<span class=\"token operator\">+</span>n<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">:</span>e<span class=\"token punctuation\">.</span>y<span class=\"token operator\">+</span>n<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">function</span> <span class=\"token function\">createParticule</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span>t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">var</span> a<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">return</span> a<span class=\"token punctuation\">.</span>x<span class=\"token operator\">=</span>e<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span>y<span class=\"token operator\">=</span>t<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span>color<span class=\"token operator\">=</span>colors<span class=\"token punctuation\">[</span>anime<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>colors<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span>radius<span class=\"token operator\">=</span>anime<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span>endPos<span class=\"token operator\">=</span><span class=\"token function\">setParticuleDirection</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">draw</span><span class=\"token operator\">=</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">,</span><span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>ctx<span class=\"token punctuation\">.</span>fillStyle<span class=\"token operator\">=</span>a<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">,</span>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">function</span> <span class=\"token function\">createCircle</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span>t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">var</span> a<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">return</span> a<span class=\"token punctuation\">.</span>x<span class=\"token operator\">=</span>e<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span>y<span class=\"token operator\">=</span>t<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span>color<span class=\"token operator\">=</span><span class=\"token string\">\"#F00\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span>radius<span class=\"token operator\">=</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span>alpha<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span>lineWidth<span class=\"token operator\">=</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">draw</span><span class=\"token operator\">=</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>ctx<span class=\"token punctuation\">.</span>globalAlpha<span class=\"token operator\">=</span>a<span class=\"token punctuation\">.</span>alpha<span class=\"token punctuation\">,</span>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">,</span><span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>ctx<span class=\"token punctuation\">.</span>lineWidth<span class=\"token operator\">=</span>a<span class=\"token punctuation\">.</span>lineWidth<span class=\"token punctuation\">,</span>ctx<span class=\"token punctuation\">.</span>strokeStyle<span class=\"token operator\">=</span>a<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">,</span>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>ctx<span class=\"token punctuation\">.</span>globalAlpha<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">function</span> <span class=\"token function\">renderParticule</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> t<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>t<span class=\"token operator\">&lt;</span>e<span class=\"token punctuation\">.</span>animatables<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>t<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>e<span class=\"token punctuation\">.</span>animatables<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">function</span> <span class=\"token function\">animateParticules</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span>t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> a<span class=\"token operator\">=</span><span class=\"token function\">createCircle</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>n<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>numberOfParticules<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>n<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">createParticule</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span>anime<span class=\"token punctuation\">.</span><span class=\"token function\">timeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>targets<span class=\"token operator\">:</span>n<span class=\"token punctuation\">,</span><span class=\"token function-variable function\">x</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">return</span> e<span class=\"token punctuation\">.</span>endPos<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token function-variable function\">y</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">return</span> e<span class=\"token punctuation\">.</span>endPos<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>radius<span class=\"token operator\">:</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span>duration<span class=\"token operator\">:</span>anime<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token number\">1200</span><span class=\"token punctuation\">,</span><span class=\"token number\">1800</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>easing<span class=\"token operator\">:</span><span class=\"token string\">\"easeOutExpo\"</span><span class=\"token punctuation\">,</span>update<span class=\"token operator\">:</span>renderParticule<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>targets<span class=\"token operator\">:</span>a<span class=\"token punctuation\">,</span>radius<span class=\"token operator\">:</span>anime<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span><span class=\"token number\">160</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>lineWidth<span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>alpha<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>value<span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>easing<span class=\"token operator\">:</span><span class=\"token string\">\"linear\"</span><span class=\"token punctuation\">,</span>duration<span class=\"token operator\">:</span>anime<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token number\">600</span><span class=\"token punctuation\">,</span><span class=\"token number\">800</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>duration<span class=\"token operator\">:</span>anime<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token number\">1200</span><span class=\"token punctuation\">,</span><span class=\"token number\">1800</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>easing<span class=\"token operator\">:</span><span class=\"token string\">\"easeOutExpo\"</span><span class=\"token punctuation\">,</span>update<span class=\"token operator\">:</span>renderParticule<span class=\"token punctuation\">,</span>offset<span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">function</span> <span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span>t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">var</span> a<span class=\"token punctuation\">;</span><span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">var</span> n<span class=\"token operator\">=</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>i<span class=\"token operator\">=</span>arguments<span class=\"token punctuation\">;</span><span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token function\">e</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">var</span> canvasEl<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".fireworks\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>canvasEl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">var</span> ctx<span class=\"token operator\">=</span>canvasEl<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>numberOfParticules<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span>pointerX<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>pointerY<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>tap<span class=\"token operator\">=</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span>colors<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"#FF1461\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"#18FF92\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"#5A87FF\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"#FBF38C\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>setCanvasSize<span class=\"token operator\">=</span><span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>canvasEl<span class=\"token punctuation\">.</span>width<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>window<span class=\"token punctuation\">.</span>innerWidth<span class=\"token punctuation\">,</span>canvasEl<span class=\"token punctuation\">.</span>height<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>window<span class=\"token punctuation\">.</span>innerHeight<span class=\"token punctuation\">,</span>canvasEl<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>width<span class=\"token operator\">=</span>window<span class=\"token punctuation\">.</span>innerWidth<span class=\"token operator\">+</span><span class=\"token string\">\"px\"</span><span class=\"token punctuation\">,</span>canvasEl<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>height<span class=\"token operator\">=</span>window<span class=\"token punctuation\">.</span>innerHeight<span class=\"token operator\">+</span><span class=\"token string\">\"px\"</span><span class=\"token punctuation\">,</span>canvasEl<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>render<span class=\"token operator\">=</span><span class=\"token function\">anime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>duration<span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token function-variable function\">update</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">clearRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>canvasEl<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>canvasEl<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>tap<span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"sidebar\"</span><span class=\"token operator\">!==</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>id<span class=\"token operator\">&amp;&amp;</span><span class=\"token string\">\"toggle-sidebar\"</span><span class=\"token operator\">!==</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>id<span class=\"token operator\">&amp;&amp;</span><span class=\"token string\">\"A\"</span><span class=\"token operator\">!==</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>nodeName<span class=\"token operator\">&amp;&amp;</span><span class=\"token string\">\"IMG\"</span><span class=\"token operator\">!==</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>nodeName<span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span>render<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">updateCoords</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">animateParticules</span><span class=\"token punctuation\">(</span>pointerX<span class=\"token punctuation\">,</span>pointerY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">setCanvasSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"resize\"</span><span class=\"token punctuation\">,</span>setCanvasSize<span class=\"token punctuation\">,</span><span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token string\">\"use strict\"</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">function</span> <span class=\"token function\">updateCoords</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>pointerX<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>clientX<span class=\"token operator\">||</span>e<span class=\"token punctuation\">.</span>touches<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>canvasEl<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">,</span>pointerY<span class=\"token operator\">=</span>e<span class=\"token punctuation\">.</span>clientY<span class=\"token operator\">||</span>e<span class=\"token punctuation\">.</span>touches<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>clientY<span class=\"token operator\">-</span>canvasEl<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">function</span> <span class=\"token function\">setParticuleDirection</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">var</span> t<span class=\"token operator\">=</span>anime<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">360</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">/</span><span class=\"token number\">180</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span>anime<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token number\">180</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>n<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>anime<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>a<span class=\"token punctuation\">;</span><span class=\"token keyword\">return</span><span class=\"token punctuation\">&#123;</span>x<span class=\"token operator\">:</span>e<span class=\"token punctuation\">.</span>x<span class=\"token operator\">+</span>n<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">:</span>e<span class=\"token punctuation\">.</span>y<span class=\"token operator\">+</span>n<span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">function</span> <span class=\"token function\">createParticule</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span>t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">var</span> a<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">return</span> a<span class=\"token punctuation\">.</span>x<span class=\"token operator\">=</span>e<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span>y<span class=\"token operator\">=</span>t<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span>color<span class=\"token operator\">=</span>colors<span class=\"token punctuation\">[</span>anime<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>colors<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span>radius<span class=\"token operator\">=</span>anime<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span>endPos<span class=\"token operator\">=</span><span class=\"token function\">setParticuleDirection</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">draw</span><span class=\"token operator\">=</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">,</span><span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>ctx<span class=\"token punctuation\">.</span>fillStyle<span class=\"token operator\">=</span>a<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">,</span>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">function</span> <span class=\"token function\">createCircle</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span>t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">var</span> a<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">return</span> a<span class=\"token punctuation\">.</span>x<span class=\"token operator\">=</span>e<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span>y<span class=\"token operator\">=</span>t<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span>color<span class=\"token operator\">=</span><span class=\"token string\">\"#F00\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span>radius<span class=\"token operator\">=</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span>alpha<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span>lineWidth<span class=\"token operator\">=</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">draw</span><span class=\"token operator\">=</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>ctx<span class=\"token punctuation\">.</span>globalAlpha<span class=\"token operator\">=</span>a<span class=\"token punctuation\">.</span>alpha<span class=\"token punctuation\">,</span>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">,</span><span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>ctx<span class=\"token punctuation\">.</span>lineWidth<span class=\"token operator\">=</span>a<span class=\"token punctuation\">.</span>lineWidth<span class=\"token punctuation\">,</span>ctx<span class=\"token punctuation\">.</span>strokeStyle<span class=\"token operator\">=</span>a<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">,</span>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>ctx<span class=\"token punctuation\">.</span>globalAlpha<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">function</span> <span class=\"token function\">renderParticule</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> t<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>t<span class=\"token operator\">&lt;</span>e<span class=\"token punctuation\">.</span>animatables<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>t<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>e<span class=\"token punctuation\">.</span>animatables<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">function</span> <span class=\"token function\">animateParticules</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span>t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> a<span class=\"token operator\">=</span><span class=\"token function\">createCircle</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>n<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>numberOfParticules<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>n<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">createParticule</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span>anime<span class=\"token punctuation\">.</span><span class=\"token function\">timeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>targets<span class=\"token operator\">:</span>n<span class=\"token punctuation\">,</span><span class=\"token function-variable function\">x</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">return</span> e<span class=\"token punctuation\">.</span>endPos<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token function-variable function\">y</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">return</span> e<span class=\"token punctuation\">.</span>endPos<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>radius<span class=\"token operator\">:</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span>duration<span class=\"token operator\">:</span>anime<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token number\">1200</span><span class=\"token punctuation\">,</span><span class=\"token number\">1800</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>easing<span class=\"token operator\">:</span><span class=\"token string\">\"easeOutExpo\"</span><span class=\"token punctuation\">,</span>update<span class=\"token operator\">:</span>renderParticule<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>targets<span class=\"token operator\">:</span>a<span class=\"token punctuation\">,</span>radius<span class=\"token operator\">:</span>anime<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span><span class=\"token number\">160</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>lineWidth<span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>alpha<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>value<span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>easing<span class=\"token operator\">:</span><span class=\"token string\">\"linear\"</span><span class=\"token punctuation\">,</span>duration<span class=\"token operator\">:</span>anime<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token number\">600</span><span class=\"token punctuation\">,</span><span class=\"token number\">800</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>duration<span class=\"token operator\">:</span>anime<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token number\">1200</span><span class=\"token punctuation\">,</span><span class=\"token number\">1800</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>easing<span class=\"token operator\">:</span><span class=\"token string\">\"easeOutExpo\"</span><span class=\"token punctuation\">,</span>update<span class=\"token operator\">:</span>renderParticule<span class=\"token punctuation\">,</span>offset<span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">function</span> <span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span>t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">var</span> a<span class=\"token punctuation\">;</span><span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">var</span> n<span class=\"token operator\">=</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>i<span class=\"token operator\">=</span>arguments<span class=\"token punctuation\">;</span><span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token function\">e</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">var</span> canvasEl<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".fireworks\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>canvasEl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">var</span> ctx<span class=\"token operator\">=</span>canvasEl<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>numberOfParticules<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span>pointerX<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>pointerY<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>tap<span class=\"token operator\">=</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span>colors<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"#FF1461\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"#18FF92\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"#5A87FF\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"#FBF38C\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>setCanvasSize<span class=\"token operator\">=</span><span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>canvasEl<span class=\"token punctuation\">.</span>width<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>window<span class=\"token punctuation\">.</span>innerWidth<span class=\"token punctuation\">,</span>canvasEl<span class=\"token punctuation\">.</span>height<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>window<span class=\"token punctuation\">.</span>innerHeight<span class=\"token punctuation\">,</span>canvasEl<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>width<span class=\"token operator\">=</span>window<span class=\"token punctuation\">.</span>innerWidth<span class=\"token operator\">+</span><span class=\"token string\">\"px\"</span><span class=\"token punctuation\">,</span>canvasEl<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>height<span class=\"token operator\">=</span>window<span class=\"token punctuation\">.</span>innerHeight<span class=\"token operator\">+</span><span class=\"token string\">\"px\"</span><span class=\"token punctuation\">,</span>canvasEl<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>render<span class=\"token operator\">=</span><span class=\"token function\">anime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>duration<span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token function-variable function\">update</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">clearRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>canvasEl<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>canvasEl<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>tap<span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"sidebar\"</span><span class=\"token operator\">!==</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>id<span class=\"token operator\">&amp;&amp;</span><span class=\"token string\">\"toggle-sidebar\"</span><span class=\"token operator\">!==</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>id<span class=\"token operator\">&amp;&amp;</span><span class=\"token string\">\"A\"</span><span class=\"token operator\">!==</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>nodeName<span class=\"token operator\">&amp;&amp;</span><span class=\"token string\">\"IMG\"</span><span class=\"token operator\">!==</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>nodeName<span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span>render<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">updateCoords</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">animateParticules</span><span class=\"token punctuation\">(</span>pointerX<span class=\"token punctuation\">,</span>pointerY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">setCanvasSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"resize\"</span><span class=\"token punctuation\">,</span>setCanvasSize<span class=\"token punctuation\">,</span><span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>然后在 <code>\\themes\\material-x\\layout\\layout.ejs</code>  或 <code>layout.swig</code>  文件中写入以下代码：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fireworks<span class=\"token punctuation\">\"</span></span> <span class=\"token style-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token style language-css\"><span class=\"token property\">position</span><span class=\"token punctuation\">:</span> fixed<span class=\"token punctuation\">;</span><span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span><span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span><span class=\"token property\">z-index</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span> <span class=\"token property\">pointer-events</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">></span></span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>//cdn.bootcss.com/animejs/2.2.0/anime.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/js/fireworks.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n<li>\n<p>完成</p>\n<p><img data-src=\"/2021/05/08/note/hexo/Hexo%E6%90%AD%E5%BB%BAGitHub%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/image-20210512134810040.png\" alt=\"image-20210512134810040\"></p>\n</li>\n</ol>\n<h3 id=\"64-添加滚动彩色字幕\"><a class=\"anchor\" href=\"#64-添加滚动彩色字幕\">#</a> 6.4 添加滚动彩色字幕</h3>\n<p>在想要的位置添加以下代码即可</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>binft<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">binft</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">r</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token keyword\">function</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">return</span> b<span class=\"token punctuation\">[</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> b<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token keyword\">function</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">(</span><span class=\"token number\">94</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">33</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token keyword\">function</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">r</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createDocumentFragment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> r <span class=\"token operator\">></span> i<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>          <span class=\"token keyword\">var</span> l <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"span\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>          l<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> n</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token keyword\">function</span> <span class=\"token function\">i</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> o<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">.</span>skillI<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        c<span class=\"token punctuation\">.</span>step <span class=\"token operator\">?</span> c<span class=\"token punctuation\">.</span>step<span class=\"token operator\">--</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>step <span class=\"token operator\">=</span> g<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">.</span>prefixP <span class=\"token operator\">&lt;</span> l<span class=\"token punctuation\">.</span>length <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>prefixP <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>text <span class=\"token operator\">+=</span> l<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">.</span>prefixP<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">.</span>prefixP<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"forward\"</span> <span class=\"token operator\">===</span> c<span class=\"token punctuation\">.</span>direction <span class=\"token operator\">?</span> c<span class=\"token punctuation\">.</span>skillP <span class=\"token operator\">&lt;</span> t<span class=\"token punctuation\">.</span>length <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>text <span class=\"token operator\">+=</span> t<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">.</span>skillP<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">.</span>skillP<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> c<span class=\"token punctuation\">.</span>delay <span class=\"token operator\">?</span> c<span class=\"token punctuation\">.</span>delay<span class=\"token operator\">--</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>direction <span class=\"token operator\">=</span> <span class=\"token string\">\"backward\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">.</span>delay <span class=\"token operator\">=</span> a<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> c<span class=\"token punctuation\">.</span>skillP <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">.</span>skillP<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>skillI <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>skillI <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> o<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">.</span>direction <span class=\"token operator\">=</span> <span class=\"token string\">\"forward\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span><span class=\"token function\">n</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>prefixP <span class=\"token operator\">&lt;</span> l<span class=\"token punctuation\">.</span>length <span class=\"token operator\">?</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> s <span class=\"token operator\">+</span> c<span class=\"token punctuation\">.</span>prefixP<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> c<span class=\"token punctuation\">.</span>skillP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token keyword\">var</span> l <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      o <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"青青陵上柏，磊磊涧中石。\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"人生天地间，忽如远行客。\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"斗酒相娱乐，聊厚不为薄。\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"驱车策驽马，游戏宛与洛。\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"洛中何郁郁，冠带自相索。\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"长衢罗夹巷，王侯多第宅。\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"两宫遥相望，双阙百余尺。\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"极宴娱心意，戚戚何所迫？\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">r</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token keyword\">return</span> r <span class=\"token operator\">+</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      a <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      g <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      s <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      d <span class=\"token operator\">=</span> <span class=\"token number\">75</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      b <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"rgb(110,64,170)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rgb(150,61,179)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rgb(191,60,175)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rgb(228,65,157)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rgb(254,75,131)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rgb(255,94,99)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rgb(255,120,71)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rgb(251,150,51)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rgb(226,183,47)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rgb(198,214,60)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rgb(175,240,91)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rgb(127,246,88)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rgb(82,246,103)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rgb(48,239,130)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rgb(29,223,163)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rgb(26,199,194)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rgb(35,171,216)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rgb(54,140,225)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rgb(76,110,219)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rgb(96,84,200)\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      c <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        text<span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        prefixP<span class=\"token operator\">:</span> <span class=\"token operator\">-</span>s<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        skillI<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        skillP<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        direction<span class=\"token operator\">:</span> <span class=\"token string\">\"forward\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        delay<span class=\"token operator\">:</span> a<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        step<span class=\"token operator\">:</span> g</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      <span class=\"token function\">i</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      <span class=\"token function\">binft</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'binft'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>如我在 <code>themes\\next\\layout\\_custom\\sidebar.swig</code>  添加，则效果如下图</p>\n<p><img data-src=\"/2021/05/08/note/hexo/Hexo%E6%90%AD%E5%BB%BAGitHub%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/image-20210512135322763.png\" alt=\"image-20210512135322763\"></p>\n<h3 id=\"65-浏览器标题恶搞\"><a class=\"anchor\" href=\"#65-浏览器标题恶搞\">#</a> 6.5 浏览器标题恶搞</h3>\n<p>当用户访问你的博客时点击到了其他网页，我们可以恶搞一下网页标题，呼唤用户回来，首先在目录  <code>\\themes\\material-x\\source\\js </code> 下新建一个 <code> FunnyTitle.js</code>  文件，在里面填写如下代码：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 浏览器搞笑标题</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> OriginTitle <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">var</span> titleTime<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'visibilitychange'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>hidden<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[rel=\"icon\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'href'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/funny.ico\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token string\">'╭(°A°`)╮ 页面崩溃啦 ~'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>titleTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[rel=\"icon\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'href'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/favicon.ico\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token string\">'(ฅ>ω&lt;*ฅ) 噫又好啦 ~'</span> <span class=\"token operator\">+</span> OriginTitle<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        titleTime <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> OriginTitle<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>其中  <code>funny.ico</code>  是用户切换到其他标签后你网站的图标， <code>favicon.ico</code>  是正常图标，然后在 <code> \\themes\\material-x\\layout\\layout.ejs</code>  文件中添加如下代码：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- 浏览器搞笑标题 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/js/FunnyTitle.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>完成后的效果</p>\n<p><img data-src=\"/2021/05/08/note/hexo/Hexo%E6%90%AD%E5%BB%BAGitHub%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/image-20210512135856899.png\" alt=\"image-20210512135856899\"><img data-src=\"/2021/05/08/note/hexo/Hexo%E6%90%AD%E5%BB%BAGitHub%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/image-20210512135903733.png\" alt=\"image-20210512135903733\"></p>\n<h3 id=\"66-雪花飘落特效\"><a class=\"anchor\" href=\"#66-雪花飘落特效\">#</a> 6.6 雪花飘落特效</h3>\n<ol>\n<li>\n<p>在 <code>\\Hexo\\themes\\主题\\source\\js</code>  目录下新建一个  <code>snow.js </code> 文件，粘贴以下代码：</p>\n<ol>\n<li>\n<p>样式 1：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* 样式一 */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">$</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t$<span class=\"token punctuation\">.</span>fn<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">snow</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">options</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">var</span> $flake <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;div id=\"snowbox\" />'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'position'</span><span class=\"token operator\">:</span> <span class=\"token string\">'absolute'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'z-index'</span><span class=\"token operator\">:</span><span class=\"token string\">'9999'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'top'</span><span class=\"token operator\">:</span> <span class=\"token string\">'-50px'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">html</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&amp;#10052;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tdocumentHeight \t<span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">height</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tdocumentWidth\t<span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">width</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tdefaults <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tminSize\t\t<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tmaxSize\t\t<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\tnewOn\t\t<span class=\"token operator\">:</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\tflakeColor\t<span class=\"token operator\">:</span> <span class=\"token string\">\"#AFDAEF\"</span> <span class=\"token comment\">/* 此处可以定义雪花颜色，若要白色可以改为 #FFFFFF */</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\toptions\t<span class=\"token operator\">=</span> $<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> defaults<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">var</span> interval<span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">var</span> startPositionLeft <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> documentWidth <span class=\"token operator\">-</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tstartOpacity <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">+</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tsizeFlake <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>minSize <span class=\"token operator\">+</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> options<span class=\"token punctuation\">.</span>maxSize<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tendPositionTop <span class=\"token operator\">=</span> documentHeight <span class=\"token operator\">-</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tendPositionLeft <span class=\"token operator\">=</span> startPositionLeft <span class=\"token operator\">-</span> <span class=\"token number\">500</span> <span class=\"token operator\">+</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tdurationFall <span class=\"token operator\">=</span> documentHeight <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">+</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t$flake<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">appendTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\tleft<span class=\"token operator\">:</span> startPositionLeft<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\topacity<span class=\"token operator\">:</span> startOpacity<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token string\">'font-size'</span><span class=\"token operator\">:</span> sizeFlake<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\tcolor<span class=\"token operator\">:</span> options<span class=\"token punctuation\">.</span>flakeColor</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">animate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\ttop<span class=\"token operator\">:</span> endPositionTop<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\tleft<span class=\"token operator\">:</span> endPositionLeft<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\topacity<span class=\"token operator\">:</span> <span class=\"token number\">0.2</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>durationFall<span class=\"token punctuation\">,</span><span class=\"token string\">'linear'</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">.</span>newOn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>jQuery<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    $<span class=\"token punctuation\">.</span>fn<span class=\"token punctuation\">.</span><span class=\"token function\">snow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t    minSize<span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">/* 定义雪花最小尺寸 */</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t    maxSize<span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token comment\">/* 定义雪花最大尺寸 */</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t    newOn<span class=\"token operator\">:</span> <span class=\"token number\">300</span>  <span class=\"token comment\">/* 定义密集程度，数字越小越密集 */</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>样式 2：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* 样式二 */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/* 控制下雪 */</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">snowFall</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">snow</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">/* 可配置属性 */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    snow <span class=\"token operator\">=</span> snow <span class=\"token operator\">||</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>maxFlake <span class=\"token operator\">=</span> snow<span class=\"token punctuation\">.</span>maxFlake <span class=\"token operator\">||</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">/* 最多片数 */</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>flakeSize <span class=\"token operator\">=</span> snow<span class=\"token punctuation\">.</span>flakeSize <span class=\"token operator\">||</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">/* 雪花形状 */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fallSpeed <span class=\"token operator\">=</span> snow<span class=\"token punctuation\">.</span>fallSpeed <span class=\"token operator\">||</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">/* 坠落速度 */</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">/* 兼容写法 */</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>requestAnimationFrame <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>requestAnimationFrame <span class=\"token operator\">||</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    window<span class=\"token punctuation\">.</span>mozRequestAnimationFrame <span class=\"token operator\">||</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    window<span class=\"token punctuation\">.</span>webkitRequestAnimationFrame <span class=\"token operator\">||</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    window<span class=\"token punctuation\">.</span>msRequestAnimationFrame <span class=\"token operator\">||</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    window<span class=\"token punctuation\">.</span>oRequestAnimationFrame <span class=\"token operator\">||</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span> <span class=\"token operator\">/</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>cancelAnimationFrame <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>cancelAnimationFrame <span class=\"token operator\">||</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    window<span class=\"token punctuation\">.</span>mozCancelAnimationFrame <span class=\"token operator\">||</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    window<span class=\"token punctuation\">.</span>webkitCancelAnimationFrame <span class=\"token operator\">||</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    window<span class=\"token punctuation\">.</span>msCancelAnimationFrame <span class=\"token operator\">||</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\twindow<span class=\"token punctuation\">.</span>oCancelAnimationFrame<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">/* 开始下雪 */</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>snowFall<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">start</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\">/* 创建画布 */</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token function\">snowCanvas</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token comment\">/* 创建雪花形状 */</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token function\">createFlakes</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token comment\">/* 画雪 */</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token function\">drawSnow</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\">/* 创建画布 */</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">snowCanvas</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\">/* 添加 Dom 结点 */</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">var</span> snowcanvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    snowcanvas<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> <span class=\"token string\">\"snowfall\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    snowcanvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>innerWidth<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    snowcanvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>clientHeight<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    snowcanvas<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"style\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"position:absolute; top: 0; left: 0; z-index: 1; pointer-events: none;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"body\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>snowcanvas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>canvas <span class=\"token operator\">=</span> snowcanvas<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ctx <span class=\"token operator\">=</span> snowcanvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token comment\">/* 窗口大小改变的处理 */</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onresize</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        snowcanvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>innerWidth<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token comment\">/* snowcanvas.height = window.innerHeight */</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token comment\">/* 雪运动对象 */</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">flakeMove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">canvasWidth<span class=\"token punctuation\">,</span> canvasHeight<span class=\"token punctuation\">,</span> flakeSize<span class=\"token punctuation\">,</span> fallSpeed</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> canvasWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">/* x 坐标 */</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> canvasHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">/* y 坐标 */</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> flakeSize <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">/* 形状 */</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>maxSize <span class=\"token operator\">=</span> flakeSize<span class=\"token punctuation\">;</span>                           <span class=\"token comment\">/* 最大形状 */</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>speed <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> fallSpeed<span class=\"token punctuation\">;</span>         <span class=\"token comment\">/* 坠落速度 */</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fallSpeed <span class=\"token operator\">=</span> fallSpeed<span class=\"token punctuation\">;</span>                         <span class=\"token comment\">/* 坠落速度 */</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>velY <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>speed<span class=\"token punctuation\">;</span>                             <span class=\"token comment\">/* Y 方向速度 */</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>velX <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>                                      <span class=\"token comment\">/* X 方向速度 */</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>stepSize <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>                 <span class=\"token comment\">/* 步长 */</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>step <span class=\"token operator\">=</span> <span class=\"token number\">0</span>                                       <span class=\"token comment\">/* 步数 */</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>flakeMove<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">update</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        y <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token comment\">/* 左右摆动 (余弦) */</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>velX <span class=\"token operator\">*=</span> <span class=\"token number\">0.98</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>velY <span class=\"token operator\">&lt;=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>speed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>velY <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>speed</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>velX <span class=\"token operator\">+=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>step <span class=\"token operator\">+=</span> <span class=\"token number\">.05</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>stepSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">+=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>velY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">+=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>velX<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token comment\">/* 飞出边界的处理 */</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">>=</span> canvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">||</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">>=</span> canvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">||</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">reset</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token comment\">/* 飞出边界 - 放置最顶端继续坠落 */</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>flakeMove<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">reset</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">width<span class=\"token punctuation\">,</span> height</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>maxSize <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>speed <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fallSpeed<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>velY <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>speed<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>velX <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token comment\">// 渲染雪花 - 随机形状（此处可修改雪花颜色！！！）</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>flakeMove<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">render</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token keyword\">var</span> snowFlake <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">createRadialGradient</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    snowFlake<span class=\"token punctuation\">.</span><span class=\"token function\">addColorStop</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rgba(255, 255, 255, 0.9)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">/* 此处是雪花颜色，默认是白色 */</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    snowFlake<span class=\"token punctuation\">.</span><span class=\"token function\">addColorStop</span><span class=\"token punctuation\">(</span><span class=\"token number\">.5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rgba(255, 255, 255, 0.5)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 若要改为其他颜色，请自行查 */</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    snowFlake<span class=\"token punctuation\">.</span><span class=\"token function\">addColorStop</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rgba(255, 255, 255, 0)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">/* 找 16 进制的 RGB 颜色代码。 */</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> snowFlake<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre><span class=\"token comment\">/* 创建雪花 - 定义形状 */</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">createFlakes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    <span class=\"token keyword\">var</span> maxFlake <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>maxFlake<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>        flakes <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>flakes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>        canvas <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> maxFlake<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>        flakes<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">flakeMove</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>flakeSize<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fallSpeed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre><span class=\"token comment\">/* 画雪 */</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">drawSnow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    <span class=\"token keyword\">var</span> maxFlake <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>maxFlake<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        flakes <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>flakes<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    ctx <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ctx<span class=\"token punctuation\">,</span> canvas <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">,</span> that <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>    <span class=\"token comment\">/* 清空雪花 */</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">clearRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> e <span class=\"token operator\">&lt;</span> maxFlake<span class=\"token punctuation\">;</span> e<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>        flakes<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>        flakes<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>    <span class=\"token comment\">/*  一帧一帧的画 */</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>loop <span class=\"token operator\">=</span> <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>        <span class=\"token function\">drawSnow</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>that<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre><span class=\"token comment\">/* 调用及控制方法 */</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre><span class=\"token keyword\">var</span> snow <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">snowFall</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>maxFlake<span class=\"token operator\">:</span><span class=\"token number\">60</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>snow<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li>\n<p>然后在 <code> \\Hexo\\themes\\主题\\layout\\layout.ejs</code>  文件里引用即可：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- 雪花特效 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>\\js\\snow.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n<li>\n<p>如果没效果，请确认网页是否已载入 JQurey，如果没有请在下雪代码之前引入 JQ 即可：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://libs.baidu.com/jquery/1.8.3/jquery.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://libs.baidu.com/jquery/1.8.3/jquery.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n<li>\n<p>样式 1、2 效果分别是大雪花（下图）和小雪花</p>\n</li>\n</ol>\n<p><img data-src=\"/2021/05/08/note/hexo/Hexo%E6%90%AD%E5%BB%BAGitHub%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/image-20210512140320359.png\" alt=\"image-20210512140320359\"></p>\n<h1 id=\"五-主题\"><a class=\"anchor\" href=\"#五-主题\">#</a> 五、 主题</h1>\n<p>Hexo 提供了很多主题，具体可参见 Hexo Themes。这里记录了我用过的主题，许多主题的设置相像，可互相参考</p>\n<h2 id=\"1-next\"><a class=\"anchor\" href=\"#1-next\">#</a> 1. next</h2>\n<h3 id=\"11-安装并启用\"><a class=\"anchor\" href=\"#11-安装并启用\">#</a> 1.1 安装并启用</h3>\n<ol>\n<li>\n<p>在 Hexo 目录下，执行下面的命令，将 next 下载到 themes/next 目录下。</p>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">git clone https://github.com/iissnan/hexo-theme-next themes/next\n</code></pre>\n</li>\n<li>\n<p>打开 <code>站点配置文件</code> ，启用 next</p>\n<pre class=\" language-language-yaml\"><code class=\"language-language-yaml\">theme: next\n</code></pre>\n</li>\n</ol>\n<h3 id=\"12-next-特性\"><a class=\"anchor\" href=\"#12-next特性\">#</a> 1.2 NexT 特性</h3>\n<h4 id=\"121-主题配置文件\"><a class=\"anchor\" href=\"#121-主题配置文件\">#</a> 1.2.1 主题配置文件</h4>\n<p>​\t以下是在 <code>主题配置文件</code> 中设置的 NexT 特性</p>\n<h5 id=\"1-选择-scheme\"><a class=\"anchor\" href=\"#1-选择scheme\">#</a> 1. 选择 Scheme</h5>\n<p>Scheme 是 NexT 提供的一种特性，借助于 Scheme，NexT 为你提供多种不同的外观。</p>\n<p>目前 NexT 支持三种 Scheme，他们是：</p>\n<ul>\n<li>Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白</li>\n<li>Mist - Muse 的紧凑版本，整洁有序的单栏外观</li>\n<li>Pisces - 双栏 Scheme，小家碧玉似的清新</li>\n</ul>\n<pre class=\" language-language-yaml\"><code class=\"language-language-yaml\">#scheme: Muse\n#scheme: Mist\nscheme: Pisces\n</code></pre>\n<h5 id=\"2-设置菜单\"><a class=\"anchor\" href=\"#2-设置菜单\">#</a> 2. 设置菜单</h5>\n<p><img data-src=\"/2021/05/08/note/hexo/Hexo%E6%90%AD%E5%BB%BAGitHub%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/image-20210511212102094.png\" alt=\"image-20210511212102094\"></p>\n<pre class=\" language-language-yaml\"><code class=\"language-language-yaml\">menu:\n  home: /||home\n  about: /about/||user\n  tags: /tags/||tags\n  categories: /categories/||th\n  archives: /archives/||archive\n  #schedule: /schedule/||calendar\n  #sitemap: /sitemap.xml ||sitemap\n  #commonweal: /404/ ||heartbeat\n\n# 以下是菜单的图标匹配，匹配的是||后面的icon name\nmenu_icons:\n  enable: true\n  home: home\n  about: user\n  categories: th\n  tags: tags\n  archives: archive\n  commonweal: heartbeat\n</code></pre>\n<p>值得一提的是，若要修改菜单栏对应的中文，可在主题的 <code>languages/zh-Hans.yml</code>  文件修改。</p>\n<h5 id=\"3-设置侧栏\"><a class=\"anchor\" href=\"#3-设置侧栏\">#</a> 3. 设置侧栏</h5>\n<p><img data-src=\"/2021/05/08/note/hexo/Hexo%E6%90%AD%E5%BB%BAGitHub%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/image-20210511212137375.png\" alt=\"image-20210511212137375\"></p>\n<pre class=\" language-language-yaml\"><code class=\"language-language-yaml\">sidebar:\n  # 位置在哪侧\n  position: left\n\n  # 侧边栏显示时机 (只有Muse和Mist有效):\n  #  - post     默认行为，在文章页面（拥有目录列表）时显示\n  #  - always  在所有页面中都显示\n  #  - hide    在所有页面中都隐藏（可以手动展开）\n  #  - remove  完全移除\n  display: post\n\n  b2t: true # 是否启用点击返回顶部按钮\n  sidebar: true # 是否在侧边栏显示点击返回顶部按钮\n  scrollpercent: true # 是否在返回顶部按钮显示已滚动百分比\n</code></pre>\n<h5 id=\"4-设置头像\"><a class=\"anchor\" href=\"#4-设置头像\">#</a> 4. 设置头像</h5>\n<p>​\t以主题目录下的 source 目录为主目录。</p>\n<pre class=\" language-language-yaml\"><code class=\"language-language-yaml\"># 侧栏的个人头像\navatar: /images/avatar.jpg\n</code></pre>\n<p>实际图片位于 <code>F:\\Workspaces\\hexo\\themes\\next\\source\\images</code></p>\n<h5 id=\"5-网站图标\"><a class=\"anchor\" href=\"#5-网站图标\">#</a> 5. 网站图标</h5>\n<pre class=\" language-language-yaml\"><code class=\"language-language-yaml\"># 网站图标\nfavicon:\n  small: /images/favicon-icon.svg\n  medium: /images/favicon-icon.svg\n  apple_touch_icon: /images/apple-touch-icon-next.png\n  safari_pinned_tab: /images/logo.svg\n</code></pre>\n<h5 id=\"6-社交链接\"><a class=\"anchor\" href=\"#6-社交链接\">#</a> 6. 社交链接</h5>\n<p><img data-src=\"/2021/05/08/note/hexo/Hexo%E6%90%AD%E5%BB%BAGitHub%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/image-20210512101943706.png\" alt=\"image-20210512101943706\"></p>\n<pre class=\" language-language-yaml\"><code class=\"language-language-yaml\">social:\n  GitHub: https://github.com/yourname || github\n  E-Mail: mailto:yourname@gmail.com || envelope\n  微博: http://weibo.com/your-user-name || weibo\n\nsocial_icons:\n  enable: true\n  icons_only: false\n  transition: false\n  GitHub: github\n  Twitter: twitter\n  微博: weibo\n</code></pre>\n<h5 id=\"7-目录\"><a class=\"anchor\" href=\"#7-目录\">#</a> 7.  目录</h5>\n<pre class=\" language-language-yaml\"><code class=\"language-language-yaml\"># 点开文章时侧边栏的目录\ntoc:\n  enable: true\n  \n  #标题自动编号\n  number: false \n  \n  # 标题过长是否换行\n  wrap: false\n</code></pre>\n<p>​\t\t同时配合 <code>themes/next/source/css/_common/components/sidebar/sidebar-toc.styl</code>  设置更多目录功能。</p>\n<h5 id=\"8-设置从文章哪里开始阅读\"><a class=\"anchor\" href=\"#8-设置从文章哪里开始阅读\">#</a> 8. 设置从文章哪里开始阅读</h5>\n<pre class=\" language-language-yaml\"><code class=\"language-language-yaml\">#点击阅读全文后是否跳到<!--more-->标记处,设为false时点击阅读全文可以从头阅读\nscroll_to_more: true\n\n#自动保存每篇文章或页面上一次滚动的地方\nsave_scroll: false\n</code></pre>\n<h5 id=\"9-首页博客不展示全文\"><a class=\"anchor\" href=\"#9-首页博客不展示全文\">#</a> 9. 首页博客不展示全文</h5>\n<p>​\t\t可以设置仅显示博客前 150 个字，如下图</p>\n<p><img data-src=\"/2021/05/08/note/hexo/Hexo%E6%90%AD%E5%BB%BAGitHub%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/image-20210512103242500.png\" alt=\"image-20210512103242500\"></p>\n<pre class=\" language-language-yaml\"><code class=\"language-language-yaml\">#自动在首页对文章进行摘要描述作为前言文本\nexcerpt_description: true\n\n# Automatically Excerpt. Not recommend.\n# Please use <!-- more --> in the post to control excerpt accurately.\n# 自动形成摘要\nauto_excerpt:\n  enable: true\n  length: 150\n</code></pre>\n<h5 id=\"10-字体设置\"><a class=\"anchor\" href=\"#10-字体设置\">#</a> 10. 字体设置</h5>\n<p>​\t\t最好不启用，因为访问外网很慢</p>\n<pre class=\" language-language-yaml\"><code class=\"language-language-yaml\">font:\n  enable: false\n  host: # 默认 google 字体库，因为要访问Google，所以加载会很慢，最好别用或者用其他国内的字体库\n</code></pre>\n<h4 id=\"122-busuanzi-浏览统计插件\"><a class=\"anchor\" href=\"#122-busuanzi浏览统计插件\">#</a> 1.2.2 busuanzi 浏览统计插件</h4>\n<p>​\t\t由于 busuanzi (不蒜子) 的域名更新，导致了使用 Hexo Next 主题时统计数据失效。不蒜子的域名由原来的  <code>dn-lbstatics.qbox.me</code>  更换为了  <code>busuanzi.ibruce.info</code> 。所以访问时前端会报错</p>\n<p><strong>解决：</strong></p>\n<ol>\n<li>禁用 busuanzi 插件，或者选择 2.</li>\n<li>修改域名\n<ol>\n<li>到 hexo 的 themes 文件夹下，进入 <code>\\themes\\next\\layout_third-party\\analytics</code>  目录</li>\n<li>打开 <code> busuanzi-counter.swig</code></li>\n<li>将  <code>src=&quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot; </code> 修改为 <code>src=&quot;https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;</code></li>\n<li>重启。</li>\n</ol>\n</li>\n</ol>\n<p>设置好后可以配置 <code>busuanzi_count</code>  设置阅读量统计</p>\n<pre class=\" language-language-yaml\"><code class=\"language-language-yaml\">busuanzi_count:\n  enable: true\n  total_visitors: true #站点总访问量\n  total_visitors_icon: user\n  total_views: true # 总浏览量（所有页面）\n  total_views_icon: eye\n  post_views: true # 文章浏览量\n  post_views_icon: eye\n</code></pre>\n<h1 id=\"六-插件\"><a class=\"anchor\" href=\"#六-插件\">#</a> 六、 插件</h1>\n<p>​\t\thexo 有许多插件，主要是提供一些特殊功能，以下介绍一些比较常用的插件。</p>\n<h3 id=\"441-feed-插件\"><a class=\"anchor\" href=\"#441-feed插件\">#</a> 4.4.1 feed 插件</h3>\n<ol>\n<li>\n<p>RSS 的生成插件，你可以在配置显示你站点的 RSS，文件路径 \\atom.xml。</p>\n<blockquote>\n<p>​\t\tRSS（也叫聚合内容）是一种基于<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9YTUw=\"> XML</span> 的标准，是一种描述和同步<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTclQkQlOTElRTclQUIlOTk=\">网站</span>内容的格式。RSS 搭建了<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTQlQkYlQTElRTYlODElQUYvMTExMTYz\">信息</span>迅速传播的一个技术平台，使得每个人都成为潜在的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTQlQkYlQTElRTYlODElQUYlRTYlOEYlOTAlRTQlQkUlOUIlRTglODAlODUvMTI3NTQwNTc=\">信息提供者</span>。</p>\n<p>​\t\t发布一个 RSS 文件后，这个 RSS Feed 中包含的信息就能直接被其他站点调用，而且由于这些数据都是标准的 XML 格式，所以也能在其他的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTclQkIlODglRTclQUIlQUYvMTkwMzg3OA==\">终端</span>和服务中使用，是一种描述和同步网站内容的格式。</p>\n</blockquote>\n<p><strong>简言之，RSS 是站点用来和其他站点之间 &lt;font color=red size=5&gt; 共享 &lt;/font &gt; 内容的一种简易方式</strong></p>\n</li>\n<li>\n<p>安装</p>\n</li>\n</ol>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">$ npm install hexo-generator-feed\n</code></pre>\n<ol start=\"3\">\n<li>启用，修改 Hexo_config.yml，增加以下内容</li>\n</ol>\n<pre class=\" language-language-yaml\"><code class=\"language-language-yaml\"># Extensions\nPlugins:\n- hexo-generator-feed\n- hexo-generator-sitemap\n\n#Feed Atom\nfeed:\n  type: atom\n  path: atom.xml\n  limit: 20\n</code></pre>\n<h1 id=\"其他\"><a class=\"anchor\" href=\"#其他\">#</a> 其他</h1>\n<ul>\n<li>next 主题取消目录自带题号。\n<ul>\n<li><code>主题配置文件</code> ，toc: 下的 number 设置成 false。</li>\n</ul>\n</li>\n<li></li>\n</ul>\n<h1 id=\"错误集锦\"><a class=\"anchor\" href=\"#错误集锦\">#</a> 错误集锦</h1>\n<ul>\n<li>\n<p>使用主题直接显示 html 代码。 <code> &#123;% extends ‘_layout.swig‘ %&#125; &#123;% import ‘_macro/post.swig‘ as post_template %&#125;</code></p>\n<ul>\n<li>原因：hexo 在 5.0 之后把 swig 给删除了需要自己手动安装</li>\n<li>解决： <code>npm i hexo-renderer-swig</code></li>\n</ul>\n</li>\n<li>\n<p>自建的 md 文件 <code>hexo g</code>  报错。 <code>end of the stream or a document separator is expected at line 13, column 1:</code></p>\n<ul>\n<li>\n<p>原因：语法格式出错，一般是转义符或者 <code>:</code>  没加空格</p>\n</li>\n<li>\n<p>解决：md 最上部添加</p>\n<pre class=\" language-language-markdown\"><code class=\"language-language-markdown\">title: 标题\n---\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>shoka 主题许多代码格式不支持，如 <code>yaml</code> 、 <code>ejs</code> ，如果在 typora 中编辑了这些代码，则不显示高亮，严重的甚至会引发代码注入产生 bug。 <code>ejs</code>  可用 <code>html</code>  格式代替</p>\n</li>\n</ul>\n<p>转载</p>\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vemhjbmNuL3AvNDA5Nzg4MS5odG1s\">https://www.cnblogs.com/zhcncn/p/4097881.html</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbGl1eGlhbmFuL3AvYnVpbGQtYmxvZy13ZWJzaXRlLWJ5LWhleG8tZ2l0aHViLmh0bWwjJUU1JTg5JThEJUU4JUE4JTgw\">https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html# 前言</span></li>\n</ol>\n",
            "tags": [
                "笔记",
                "hexo"
            ]
        },
        {
            "id": "https://nitgod1996.com/2021/05/08/note/software/maven%E5%A4%8D%E4%B9%A0/",
            "url": "https://nitgod1996.com/2021/05/08/note/software/maven%E5%A4%8D%E4%B9%A0/",
            "title": "maven复习",
            "date_published": "2021-05-08T07:55:45.536Z",
            "content_html": "<blockquote>\n<p>时过境迁，距第一次使用 maven 已经将近一年了，最近发现 maven 还有许多地方没搞明白，所以再继续学习一下，也当是复习巩固了。</p>\n</blockquote>\n<h2 id=\"1-maven-的作用\"><a class=\"anchor\" href=\"#1-maven的作用\">#</a> 1. maven 的作用</h2>\n<ul>\n<li><strong>依赖管理：</strong>\n<ul>\n<li>在<strong> pom.xml</strong> 中对项目需要的各种依赖（jar 包等）统一管理。</li>\n<li>如，当项目比较大时，依赖管理会变得非常臃肿。<strong>通过 maven 进行依赖管理</strong></li>\n</ul>\n</li>\n<li><strong>项目构建：</strong>\n<ul>\n<li>对项目进行<em>编译、测试、打包、部署、上传到私服</em>等。</li>\n<li>如，项目比较大时，需要分多个 module。如订单模块、支付模块、商品模块...。一般情况多个模块无法独立运行，需要借助<strong> maven 的一键打包</strong></li>\n</ul>\n</li>\n<li><strong>Gradle</strong> 也是和<strong> maven</strong> 一样的项目管理工具。</li>\n</ul>\n<h2 id=\"2-maven-安装\"><a class=\"anchor\" href=\"#2-maven安装\">#</a> 2. maven 安装</h2>\n<ol>\n<li>\n<p>maven 是 Java 项目，必须先安装 jdk。</p>\n</li>\n<li>\n<p>下载 maven。官网<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXZlbi5hcGFjaGUub3JnL2Rvd25sb2FkLmNnaQ==\"> https://maven.apache.org/download.cgi</span>。也可以去 csdn 下载，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tcC5jc2RuLm5ldC9jb25zb2xlL3VwRGV0YWlsZWQlRTMlODAlODI=\">https://mp.csdn.net/console/upDetailed。</span></p>\n</li>\n<li>\n<p>解压并配置环境变量。</p>\n<p><img data-src=\"/2021/05/08/note/software/maven%E5%A4%8D%E4%B9%A0/image-20210508143238021.png\" alt=\"image-20210508143238021\"></p>\n<p>在 path 中添加上<strong> D:\\Java\\apache-maven-3.6.2\\bin</strong>。也可以设置 MAVEN_HOME。</p>\n<p><strong><img data-src=\"/2021/05/08/note/software/maven%E5%A4%8D%E4%B9%A0/image-20210508143612681.png\" alt=\"image-20210508143612681\"></strong></p>\n</li>\n<li>\n<p>检验。cmd 打开控制台，输入 <code>mvn -v</code></p>\n</li>\n</ol>\n<h2 id=\"3-maven-配置\"><a class=\"anchor\" href=\"#3-maven配置\">#</a> 3. maven 配置</h2>\n<p>​\t\t在 IDEA 中有默认的 maven 配置，本地仓库默认是在当前用户名.m2\\repository。自定义配置可以与 IDEA<strong> 解耦</strong>，如果同时使用 eclipse 则将 maven 分离出来管理比较方便。</p>\n<p>​\t\tmaven 仓库分为本地仓库、私服仓库和中央仓库，如下</p>\n<table>\n<thead>\n<tr>\n<th>仓库类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>本地仓库</td>\n<td>在自己电脑上存放用于项目的 jar 包。本地项目优先去本地仓库寻找依赖 jar 包</td>\n</tr>\n<tr>\n<td>私服仓库</td>\n<td>公司内部搭建的 maven 私服。一般存放公司项目所需 jar 和自己开发的 jar。</td>\n</tr>\n<tr>\n<td>中央仓库</td>\n<td>由 Apache 团队维护，包含了大部分的 jar，本地仓库没有的依赖一般有限都是去中央仓库下载。我们一般用国内镜像替代中央仓库。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"31-配置本地仓库\"><a class=\"anchor\" href=\"#31-配置本地仓库\">#</a> 3.1 - 配置本地仓库</h3>\n<ol>\n<li>\n<p>在指定位置新建一个本地仓库文件夹，如 <code>F:\\serverCK\\MavenRepository</code></p>\n</li>\n<li>\n<p>在 conf\\setting.xml 配置该目录</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>localRepository</span><span class=\"token punctuation\">></span></span>F:\\serverCK\\MavenRepository<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>localRepository</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"32-镜像配置\"><a class=\"anchor\" href=\"#32-镜像配置\">#</a> 3.2 - 镜像配置</h3>\n<p>​\t\t默认的中央仓库下载依赖比较慢，一般配置阿里的镜像。也是在 conf\\setting.xml 配置</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mirrors</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mirror</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span><span class=\"token punctuation\">></span></span>alimaven<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>id</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>name</span><span class=\"token punctuation\">></span></span>aliyun maven<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>name</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  　　<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>url</span><span class=\"token punctuation\">></span></span>http://maven.aliyun.com/nexus/content/groups/public/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>url</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mirrorOf</span><span class=\"token punctuation\">></span></span>central<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mirrorOf</span><span class=\"token punctuation\">></span></span>        </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mirror</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mirrors</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"4-使用-idea-构建-maven-项目\"><a class=\"anchor\" href=\"#4-使用idea构建maven项目\">#</a> 4. 使用 IDEA 构建 maven 项目</h2>\n<p>​\t\t使用 IDEA 创建 maven 项目的方法有很多，既可以直接创建一个空的 maven project，也可以创建 springboot 项目时勾选 maven，就不一一赘述了。</p>\n<p>​\t\tmaven 项目创建好后，最主要的就是主目录下的 pom.xml 和右侧的 maven 导航。</p>\n<p><img data-src=\"/2021/05/08/note/software/maven%E5%A4%8D%E4%B9%A0/image-20210508150004233.png?lastModify=1620717825\" alt=\"image-20210508150004233\"></p>\n<ul>\n<li>\n<p>pom.xml 是 maven 的主要配置文件，其中定义了该项目的所有配置，主要包括</p>\n<ul>\n<li>\n<p><code>&lt;dependencies&gt;</code> ：项目所需的外部依赖。 <code>dependency</code>  也称坐标</p>\n</li>\n<li>\n<p><code>&lt;packaging&gt;jar&lt;/packaging&gt;</code> ：打包方式。springboot 打成 jar 包即可。普通的 web 项目需要打包 war 包。</p>\n</li>\n<li>\n<p><code>&lt;groupId&gt;、&lt;artifactId&gt;、&lt;version&gt;</code> ：项目信息，版本等</p>\n<ul>\n<li>groupId：组织 ID</li>\n<li>artifactId：项目在组织中的 ID</li>\n<li>version：项目版本</li>\n<li>scope：依赖范围。 <code>test</code>  表示仅测试有效。 <code>runtime</code>  是编译时不生效，运行时生效，如 jdbc 驱动。 <code>complie</code>  全部有效</li>\n</ul>\n</li>\n<li>\n<p><code>&lt;parent&gt;</code> ：项目继承的父依赖，如</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>parent</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-parent<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.4.4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>relativePath</span><span class=\"token punctuation\">/></span></span> <span class=\"token comment\">&lt;!-- lookup parent from repository --></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>parent</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>该项目继承了 <code>org.springframework.boot</code>  的所有依赖。</p>\n</li>\n<li>\n<p><code>&lt;build&gt;&lt;plugins&gt;</code> ：maven 构建项目所需插件</p>\n</li>\n<li>\n<p><code>&lt;properties&gt;</code> ：编码及各依赖版本信息</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>install 项目打包</strong>：双击右侧的 install，将该项目打成 jar/war 包放在本地仓库，其他项目即可导入该项目的 jar（通过 groupId 等信息）。<em>install 包含了 package 功能</em>。</p>\n</li>\n</ul>\n",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://nitgod1996.com/2021/05/08/my-hexo/",
            "url": "https://nitgod1996.com/2021/05/08/my-hexo/",
            "title": "my hexo",
            "date_published": "2021-05-08T04:48:40.000Z",
            "content_html": "",
            "tags": []
        }
    ]
}